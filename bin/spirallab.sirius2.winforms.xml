<?xml version="1.0"?>
<doc>
    <assembly>
        <name>spirallab.sirius2.winforms</name>
    </assembly>
    <members>
        <member name="T:SpiralLab.Sirius2.Winforms.DocumentFactory">
            <summary>
            Factory for <c>IDocument</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentFactory.CreateDefault">
            <summary>
            Create default document
            </summary>
            <remarks>
            Called <see cref="M:SpiralLab.Sirius2.Winforms.IDocument.ActNew">IDocument.ActNew</see> by default when creation. <br/>
            </remarks>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.IDocument">IDocument</see></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.arc">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.Closed_DESC">
            <summary>
              Looks up a localized string similar to Is Closed Path or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.Closed_DISP">
            <summary>
              Looks up a localized string similar to Closed.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.EndRamp_DESC">
            <summary>
              Looks up a localized string similar to End Ramp Factor (Default: 1.0).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.EndRamp_DISP">
            <summary>
              Looks up a localized string similar to End ramp.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.Radius_DESC">
            <summary>
              Looks up a localized string similar to Radius (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.Radius_DISP">
            <summary>
              Looks up a localized string similar to Radius.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.StartAngle_DESC">
            <summary>
              Looks up a localized string similar to Start Angle (°).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.StartAngle_DISP">
            <summary>
              Looks up a localized string similar to Start angle.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.StartRamp_DESC">
            <summary>
              Looks up a localized string similar to Start Ramp Factor (Default: 1.0).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.StartRamp_DISP">
            <summary>
              Looks up a localized string similar to Start ramp.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.StepAngle_DESC">
            <summary>
              Looks up a localized string similar to Step Angle (°) (Default: 0).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.StepAngle_DISP">
            <summary>
              Looks up a localized string similar to Step angle.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.SweepAngle_DESC">
            <summary>
              Looks up a localized string similar to Sweep Angle (°).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.arc.SweepAngle_DISP">
            <summary>
              Looks up a localized string similar to Sweep angle.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.blockinsert">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.blockinsert.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.blockinsert.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.blockinsert.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.blockinsert.Master_DESC">
            <summary>
              Looks up a localized string similar to Master Block Name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.blockinsert.Master_DISP">
            <summary>
              Looks up a localized string similar to Master.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.cellline">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellline.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellline.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellline.Array_DESC">
            <summary>
              Looks up a localized string similar to Array of Cell (1x1, 2x2, 3x3, ...).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellline.Array_DISP">
            <summary>
              Looks up a localized string similar to Array.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellline.Line_C">
            <summary>
              Looks up a localized string similar to Line.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellline.Zigzag_DESC">
            <summary>
              Looks up a localized string similar to Zig Zag or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellline.Zigzag_DISP">
            <summary>
              Looks up a localized string similar to Zigzg.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.celloutline">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celloutline.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celloutline.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.cellhatch">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Angle_DESC">
            <summary>
              Looks up a localized string similar to Hatch Angle (For Line) (°).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Angle_DISP">
            <summary>
              Looks up a localized string similar to Angle.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Angle2_DESC">
            <summary>
              Looks up a localized string similar to Hatch 2nd Angle (For Cross Line) (°).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Angle2_DISP">
            <summary>
              Looks up a localized string similar to Angle2.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Array_DESC">
            <summary>
              Looks up a localized string similar to Array of Cell (1x1, 2x2, 3x3, ...).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Array_DISP">
            <summary>
              Looks up a localized string similar to Array.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Exclude_DESC">
            <summary>
              Looks up a localized string similar to Hatch Exclude (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Exclude_DISP">
            <summary>
              Looks up a localized string similar to Exclude.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Hatch_C">
            <summary>
              Looks up a localized string similar to Hatch.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Interval_DESC">
            <summary>
              Looks up a localized string similar to Hatch Interval (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Interval_DISP">
            <summary>
              Looks up a localized string similar to Interval.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Mode_DESC">
            <summary>
              Looks up a localized string similar to Hatch Mode.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Mode_DISP">
            <summary>
              Looks up a localized string similar to Mode.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Outline_DESC">
            <summary>
              Looks up a localized string similar to Hatch Include Outline.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Outline_DISP">
            <summary>
              Looks up a localized string similar to Outline.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Outline_first_DESC">
            <summary>
              Looks up a localized string similar to Hatch Outline First.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Outline_first_DISP">
            <summary>
              Looks up a localized string similar to Outline first.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Shift_DESC">
            <summary>
              Looks up a localized string similar to Hatch Shift (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Shift_DISP">
            <summary>
              Looks up a localized string similar to Shift.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Zigzag_DESC">
            <summary>
              Looks up a localized string similar to Hatch Zig Zag or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellhatch.Zigzag_DISP">
            <summary>
              Looks up a localized string similar to Zigzg.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.cellcircle">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellcircle.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellcircle.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellcircle.Array_DESC">
            <summary>
              Looks up a localized string similar to Array of Cell (1x1, 2x2, 3x3, ...).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellcircle.Array_DISP">
            <summary>
              Looks up a localized string similar to Array.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellcircle.Circle_C">
            <summary>
              Looks up a localized string similar to Circle.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellcircle.Radius_factor_DESC">
            <summary>
              Looks up a localized string similar to Radius Factor (&lt; 1.0).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellcircle.Radius_factor_DISP">
            <summary>
              Looks up a localized string similar to Radius factor.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellcircle.Reverse_DESC">
            <summary>
              Looks up a localized string similar to Reverse Order.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellcircle.Reverse_DISP">
            <summary>
              Looks up a localized string similar to Reverse.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellcircle.Zigzag_DESC">
            <summary>
              Looks up a localized string similar to Zig Zag or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cellcircle.Zigzag_DISP">
            <summary>
              Looks up a localized string similar to Zigzg.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.celldot">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Array_DESC">
            <summary>
              Looks up a localized string similar to Array of Cell (1x1, 2x2, 3x3, ...).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Array_DISP">
            <summary>
              Looks up a localized string similar to Array.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Direction_DESC">
            <summary>
              Looks up a localized string similar to Pixel Direction.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Direction_DISP">
            <summary>
              Looks up a localized string similar to Direction.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Dots_C">
            <summary>
              Looks up a localized string similar to Dots.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Extension_channel_DESC">
            <summary>
              Looks up a localized string similar to Pixel Output Extension Channel (Analog 1 or 2) (Micro-Vector only).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Extension_channel_DISP">
            <summary>
              Looks up a localized string similar to Extension channel.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Pixel_period_DESC">
            <summary>
              Looks up a localized string similar to Pixel Period (usec) (1/Pixel Frequency) (Micro-Vector only).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Pixel_period_DISP">
            <summary>
              Looks up a localized string similar to Pixel period.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Pixel_time_DESC">
            <summary>
              Looks up a localized string similar to Pixel Duration Time (usec) (Time for Pixel Pulse Width. Should be &lt; Pixel Period).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Pixel_time_DISP">
            <summary>
              Looks up a localized string similar to Pixel time.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Raster_mode_DESC">
            <summary>
              Looks up a localized string similar to Raster Mode (Jump and Shoot, Micro-Vector).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Raster_mode_DISP">
            <summary>
              Looks up a localized string similar to Raster mode.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Reverse_DESC">
            <summary>
              Looks up a localized string similar to Reverse Order.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Reverse_DISP">
            <summary>
              Looks up a localized string similar to Reverse.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Zigzag_DESC">
            <summary>
              Looks up a localized string similar to Zig Zag or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.celldot.Zigzag_DISP">
            <summary>
              Looks up a localized string similar to Zigzg.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.barcode2dbase">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Cell_C">
            <summary>
              Looks up a localized string similar to Cell.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Cell_circles_DESC">
            <summary>
              Looks up a localized string similar to Circle Cell.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Cell_circles_DISP">
            <summary>
              Looks up a localized string similar to Cell (Circles).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Cell_DESC">
            <summary>
              Looks up a localized string similar to Cell Type.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Cell_DISP">
            <summary>
              Looks up a localized string similar to Cell.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Cell_dots_DESC">
            <summary>
              Looks up a localized string similar to Dot Cell for Raster(Bitmap) Operation.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Cell_dots_DISP">
            <summary>
              Looks up a localized string similar to Cell (Dots).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Cell_hatches_DESC">
            <summary>
              Looks up a localized string similar to Hatch Cell.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Cell_hatches_DISP">
            <summary>
              Looks up a localized string similar to Cell (Hatches).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Cell_lines_DESC">
            <summary>
              Looks up a localized string similar to Line Cell.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Cell_lines_DISP">
            <summary>
              Looks up a localized string similar to Cell (Lines).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Cell_outline_DESC">
            <summary>
              Looks up a localized string similar to Outline Cell.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Cell_outline_DISP">
            <summary>
              Looks up a localized string similar to Cell (Outline).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Closed_DESC">
            <summary>
              Looks up a localized string similar to Closed Loop.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Closed_DISP">
            <summary>
              Looks up a localized string similar to Closed.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Convertible_DESC">
            <summary>
              Looks up a localized string similar to Enable(or Disable) Convert Text Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Convertible_DISP">
            <summary>
              Looks up a localized string similar to Convertible.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Fixed_aspect_ratio_DESC">
            <summary>
              Looks up a localized string similar to Fixed Aspect Ratio or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Fixed_aspect_ratio_DISP">
            <summary>
              Looks up a localized string similar to Fixed aspect ratio.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Height_DESC">
            <summary>
              Looks up a localized string similar to Height (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Height_DISP">
            <summary>
              Looks up a localized string similar to Height.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Invert_cell_DESC">
            <summary>
              Looks up a localized string similar to Invert Cells or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Invert_cell_DISP">
            <summary>
              Looks up a localized string similar to Invert cell.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Text_converted_DESC">
            <summary>
              Looks up a localized string similar to Text (Converted).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Text_converted_DISP">
            <summary>
              Looks up a localized string similar to Text (converted).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Text_DESC">
            <summary>
              Looks up a localized string similar to Text Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Text_DISP">
            <summary>
              Looks up a localized string similar to Text.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Width_DESC">
            <summary>
              Looks up a localized string similar to Width (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode2dbase.Width_DISP">
            <summary>
              Looks up a localized string similar to Width.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.boundingbox">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.Center_DESC">
            <summary>
              Looks up a localized string similar to Original(or Uncalculated) Center X,Y,Z Position.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.Center_DISP">
            <summary>
              Looks up a localized string similar to Center.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.Dimension_C">
            <summary>
              Looks up a localized string similar to Dimension.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.Height_DESC">
            <summary>
              Looks up a localized string similar to Original(or Uncalculated) Height (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.Height_DISP">
            <summary>
              Looks up a localized string similar to Height.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.Max_DESC">
            <summary>
              Looks up a localized string similar to Original(or Uncalculated) Max X,Y,Z Position.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.Max_DISP">
            <summary>
              Looks up a localized string similar to Max.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.Min_DESC">
            <summary>
              Looks up a localized string similar to Original(or Uncalculated) Min X,Y,Z Position.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.Min_DISP">
            <summary>
              Looks up a localized string similar to Min.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.RealCenter_DESC">
            <summary>
              Looks up a localized string similar to Real(or Calculated) Center X,Y,Z Position.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.RealCenter_DISP">
            <summary>
              Looks up a localized string similar to Real. center.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.RealDepth_DESC">
            <summary>
              Looks up a localized string similar to Real(or Calculated) Depth (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.RealDepth_DISP">
            <summary>
              Looks up a localized string similar to Real. depth.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.RealHeight_DESC">
            <summary>
              Looks up a localized string similar to Real(or Calculated) Height (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.RealHeight_DISP">
            <summary>
              Looks up a localized string similar to Real. height.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.RealMax_DESC">
            <summary>
              Looks up a localized string similar to Real(or Calculated) Max X,Y,Z Position.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.RealMax_DISP">
            <summary>
              Looks up a localized string similar to Real. max.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.RealMin_DESC">
            <summary>
              Looks up a localized string similar to Real(or Calculated) Min X,Y,Z Position.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.RealMin_DISP">
            <summary>
              Looks up a localized string similar to Real. min.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.RealWidth_DESC">
            <summary>
              Looks up a localized string similar to Real(or Calculated) Width (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.RealWidth_DISP">
            <summary>
              Looks up a localized string similar to Real. width.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.Width_DESC">
            <summary>
              Looks up a localized string similar to Original(or Uncalculated) Width (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.boundingbox.Width_DISP">
            <summary>
              Looks up a localized string similar to Width.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.charactersetbase">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersetbase.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersetbase.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersetbase.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersetbase.Date_format_DESC">
            <summary>
              Looks up a localized string similar to Date Format.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersetbase.Date_format_DISP">
            <summary>
              Looks up a localized string similar to Date format.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersetbase.Digits_DESC">
            <summary>
              Looks up a localized string similar to Digits.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersetbase.Digits_DISP">
            <summary>
              Looks up a localized string similar to Digits.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersetbase.Leading_with_zero_DESC">
            <summary>
              Looks up a localized string similar to Leading with 0.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersetbase.Leading_with_zero_DISP">
            <summary>
              Looks up a localized string similar to Leading with 0.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersetbase.Serial_format_DESC">
            <summary>
              Looks up a localized string similar to Serial No Format.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersetbase.Serial_format_DISP">
            <summary>
              Looks up a localized string similar to Serial format.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersetbase.Time_format_DESC">
            <summary>
              Looks up a localized string similar to Time Format.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersetbase.Time_format_DISP">
            <summary>
              Looks up a localized string similar to Time format.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.charactersettext">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Alignment_horizontal_DESC">
            <summary>
              Looks up a localized string similar to Horizontal Alignment.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Alignment_horizontal_DISP">
            <summary>
              Looks up a localized string similar to Alignment (horizontal).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Alignment_vertical_DESC">
            <summary>
              Looks up a localized string similar to Vertical Alignment.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Alignment_vertical_DISP">
            <summary>
              Looks up a localized string similar to Alignment (vertical).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Convertible_DESC">
            <summary>
              Looks up a localized string similar to Enable(or Disable) Convert Text Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Convertible_DISP">
            <summary>
              Looks up a localized string similar to Convertible.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Font_DESC">
            <summary>
              Looks up a localized string similar to Font Name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Font_DISP">
            <summary>
              Looks up a localized string similar to Font.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Format_C">
            <summary>
              Looks up a localized string similar to Format.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Format_date_DESC">
            <summary>
              Looks up a localized string similar to Date Format.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Format_date_DISP">
            <summary>
              Looks up a localized string similar to Format (date).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Format_DESC">
            <summary>
              Looks up a localized string similar to CharacterSet Format.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Format_DISP">
            <summary>
              Looks up a localized string similar to Format.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Format_serial_DESC">
            <summary>
              Looks up a localized string similar to Serial No Format.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Format_serial_DISP">
            <summary>
              Looks up a localized string similar to Format (serial).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Format_time_DESC">
            <summary>
              Looks up a localized string similar to Time Format.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Format_time_DISP">
            <summary>
              Looks up a localized string similar to Format (time).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Height_DESC">
            <summary>
              Looks up a localized string similar to Height (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Height_DISP">
            <summary>
              Looks up a localized string similar to Height.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Style_DESC">
            <summary>
              Looks up a localized string similar to Font Style.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Style_DISP">
            <summary>
              Looks up a localized string similar to Style.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Text_converted_DESC">
            <summary>
              Looks up a localized string similar to Text (Converted).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Text_converted_DISP">
            <summary>
              Looks up a localized string similar to Text (converted).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Text_DESC">
            <summary>
              Looks up a localized string similar to Text Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Text_DISP">
            <summary>
              Looks up a localized string similar to Text.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Width_DESC">
            <summary>
              Looks up a localized string similar to Width (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.charactersettext.Width_DISP">
            <summary>
              Looks up a localized string similar to Width.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.circulartext">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.circulartext.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.circulartext.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.circulartext.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.circulartext.Direction_DESC">
            <summary>
              Looks up a localized string similar to Circular Direction.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.circulartext.Direction_DISP">
            <summary>
              Looks up a localized string similar to Direction.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.circulartext.Letter_spacing_DESC">
            <summary>
              Looks up a localized string similar to Letter Spacing (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.circulartext.Letter_spacing_DISP">
            <summary>
              Looks up a localized string similar to Letter spacing.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.circulartext.Radius_DESC">
            <summary>
              Looks up a localized string similar to Circular Radius (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.circulartext.Radius_DISP">
            <summary>
              Looks up a localized string similar to Radius.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.circulartext.Start_angle_DESC">
            <summary>
              Looks up a localized string similar to Circular Starting Angle (°).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.circulartext.Start_angle_DISP">
            <summary>
              Looks up a localized string similar to Start angle.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.circulartext.Text_DESC">
            <summary>
              Looks up a localized string similar to Text Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.circulartext.Text_DISP">
            <summary>
              Looks up a localized string similar to Text.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.circulartext.Width_DESC">
            <summary>
              Looks up a localized string similar to Width (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.circulartext.Width_DISP">
            <summary>
              Looks up a localized string similar to Width.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.scriptevent">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.scriptevent.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.scriptevent.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.scriptevent.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.scriptevent.No_DESC">
            <summary>
              Looks up a localized string similar to Free Variable No (0~7).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.scriptevent.No_DISP">
            <summary>
              Looks up a localized string similar to No.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.scriptevent.Value_DESC">
            <summary>
              Looks up a localized string similar to Value (32bits).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.scriptevent.Value_DISP">
            <summary>
              Looks up a localized string similar to Value.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.mofextstartdelay">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofextstartdelay.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofextstartdelay.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofextstartdelay.Distance_DESC">
            <summary>
              Looks up a localized string similar to Distance for External Start Delay (mm) ) (&gt;= 0).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofextstartdelay.Distance_DISP">
            <summary>
              Looks up a localized string similar to Distance.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofextstartdelay.Encoder_DESC">
            <summary>
              Looks up a localized string similar to Target Encoder for External Start Delay.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofextstartdelay.Encoder_DISP">
            <summary>
              Looks up a localized string similar to Encoder.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofextstartdelay.MoF_C">
            <summary>
              Looks up a localized string similar to MoF.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.freevariable">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.freevariable.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.freevariable.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.freevariable.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.freevariable.No_DESC">
            <summary>
              Looks up a localized string similar to Free Variable No (0~7).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.freevariable.No_DISP">
            <summary>
              Looks up a localized string similar to No.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.freevariable.Value_DESC">
            <summary>
              Looks up a localized string similar to Value (32bits).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.freevariable.Value_DISP">
            <summary>
              Looks up a localized string similar to Value.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16edgecond">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16edgecond.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16edgecond.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16edgecond.Bit_name_DESC">
            <summary>
              Looks up a localized string similar to Bit Name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16edgecond.Bit_name_DISP">
            <summary>
              Looks up a localized string similar to Bit name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16edgecond.Bit_position_DESC">
            <summary>
              Looks up a localized string similar to Bit Position (0~15).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16edgecond.Bit_position_DISP">
            <summary>
              Looks up a localized string similar to Bit position.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16edgecond.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16edgecond.Signal_DESC">
            <summary>
              Looks up a localized string similar to Conditional Bit Signal Level (Low/High).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16edgecond.Signal_DISP">
            <summary>
              Looks up a localized string similar to Signal.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.alcvectorbegin">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.alcvectorbegin.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.alcvectorbegin.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.alcvectorbegin.ALC_C">
            <summary>
              Looks up a localized string similar to ALC.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.alcvectorbegin.Signal_DESC">
            <summary>
              Looks up a localized string similar to Vector Defined ALC(Automatica Laser Control) Signal.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.alcvectorbegin.Signal_DISP">
            <summary>
              Looks up a localized string similar to Signal.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.alcvectorbegin.Starting_value_DESC">
            <summary>
              Looks up a localized string similar to Staring Value (Analog: ~10V, DO: ~255, 65535, PulseWidth: us, Frequency: Hz).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.alcvectorbegin.Starting_value_DISP">
            <summary>
              Looks up a localized string similar to Starting value.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.measurementbegin">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.measurementbegin.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.measurementbegin.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.measurementbegin.Channels_DESC">
            <summary>
              Looks up a localized string similar to Measurement Channels (RTC5: 4, RTC6: 8).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.measurementbegin.Channels_DISP">
            <summary>
              Looks up a localized string similar to Channels.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.measurementbegin.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.measurementbegin.Raw_format_DESC">
            <summary>
              Looks up a localized string similar to Save As Raw Data Format or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.measurementbegin.Raw_format_DISP">
            <summary>
              Looks up a localized string similar to Raw format.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.measurementbegin.Sampling_frequency_DESC">
            <summary>
              Looks up a localized string similar to Sampling Frequency (Hz) (Max: ~100KHz).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.measurementbegin.Sampling_frequency_DISP">
            <summary>
              Looks up a localized string similar to Sampling frequency.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.measurementbegin.Title_DESC">
            <summary>
              Looks up a localized string similar to Title of Measurement Session.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.measurementbegin.Title_DISP">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.mofbegin">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofbegin.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofbegin.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofbegin.Center_DESC">
            <summary>
              Looks up a localized string similar to Angular X,Y Center (Used with EncoderType.Angular only).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofbegin.Center_DISP">
            <summary>
              Looks up a localized string similar to Center.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofbegin.Encoder_type_DESC">
            <summary>
              Looks up a localized string similar to Encoder Type.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofbegin.Encoder_type_DISP">
            <summary>
              Looks up a localized string similar to Encoder type.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofbegin.MoF_angular_C">
            <summary>
              Looks up a localized string similar to MoF (angular).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofbegin.MoF_C">
            <summary>
              Looks up a localized string similar to MoF.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofbegin.Reset_encoder_DESC">
            <summary>
              Looks up a localized string similar to Reset Encoders or not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofbegin.Reset_encoder_DISP">
            <summary>
              Looks up a localized string similar to Reset encoders.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.mofend">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofend.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofend.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofend.Jump_DESC">
            <summary>
              Looks up a localized string similar to Jump X,Y Location After MoF has finished.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofend.Jump_DISP">
            <summary>
              Looks up a localized string similar to Jump.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofend.MoF_C">
            <summary>
              Looks up a localized string similar to MoF.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.mofwait">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofwait.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofwait.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofwait.Angle_DESC">
            <summary>
              Looks up a localized string similar to Encoder Wait Angle (°).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofwait.Angle_DISP">
            <summary>
              Looks up a localized string similar to Angle.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofwait.Condition_DESC">
            <summary>
              Looks up a localized string similar to Encoder Wait Condition.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofwait.Condition_DISP">
            <summary>
              Looks up a localized string similar to Condition.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofwait.MoF_angular_C">
            <summary>
              Looks up a localized string similar to MoF (angular).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofwait.MoF_C">
            <summary>
              Looks up a localized string similar to MoF.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofwait.MoF_xy_C">
            <summary>
              Looks up a localized string similar to MoF (xy).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofwait.Position_DESC">
            <summary>
              Looks up a localized string similar to Encoder Wait Position (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofwait.Position_DISP">
            <summary>
              Looks up a localized string similar to Position.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofwait.Wait_encoder_DESC">
            <summary>
              Looks up a localized string similar to Target Encoder for Waiting.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.mofwait.Wait_encoder_DISP">
            <summary>
              Looks up a localized string similar to Wait encoder.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.timer">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.timer.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.timer.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.timer.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.timer.Delay_DESC">
            <summary>
              Looks up a localized string similar to Delay Time (msec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.timer.Delay_DISP">
            <summary>
              Looks up a localized string similar to Delay.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16cond">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16cond.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16cond.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16cond.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16cond.Input_high_bit_mask_DESC">
            <summary>
              Looks up a localized string similar to Input High Bit Mask (MSB)...(LSB) (0: Don&apos;t Care).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16cond.Input_high_bit_mask_DISP">
            <summary>
              Looks up a localized string similar to Input high bit mask.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16cond.Input_low_bit_mask_DESC">
            <summary>
              Looks up a localized string similar to Input Low Bit Mask (MSB)...(LSB) (0: Don&apos;t Care).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.waitdataext16cond.Input_low_bit_mask_DISP">
            <summary>
              Looks up a localized string similar to Input low bit mask.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.writedata">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedata.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedata.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedata.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedata.Output_channel_DESC">
            <summary>
              Looks up a localized string similar to Extension Output Channel.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedata.Output_channel_DISP">
            <summary>
              Looks up a localized string similar to Output channel.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedata.Output_value_DESC">
            <summary>
              Looks up a localized string similar to Output Value (Analog: ~10, DO: ~255, ~65535).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedata.Output_value_DISP">
            <summary>
              Looks up a localized string similar to Output value.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.writedataext16">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16.Bit_name_DESC">
            <summary>
              Looks up a localized string similar to Bit Name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16.Bit_name_DISP">
            <summary>
              Looks up a localized string similar to Bit name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16.Bit_position_DESC">
            <summary>
              Looks up a localized string similar to Bit Position (0~15).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16.Bit_position_DISP">
            <summary>
              Looks up a localized string similar to Bit position.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16.Output_DESC">
            <summary>
              Looks up a localized string similar to Output Value (On/Off).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16.Output_DISP">
            <summary>
              Looks up a localized string similar to Output.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.writedataext16cond">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16cond.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16cond.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16cond.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16cond.Input_high_bit_mask_DESC">
            <summary>
              Looks up a localized string similar to Input High Bit Mask (MSB)...(LSB) (0: Don&apos;t Care).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16cond.Input_high_bit_mask_DISP">
            <summary>
              Looks up a localized string similar to Input high bit mask.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16cond.Input_low_bit_mask_DESC">
            <summary>
              Looks up a localized string similar to Input Low Bit Mask (MSB)...(LSB) (0: Don&apos;t Care).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16cond.Input_low_bit_mask_DISP">
            <summary>
              Looks up a localized string similar to Input low bit mask.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16cond.Output_bit_level_DESC">
            <summary>
              Looks up a localized string similar to Output Bit Signal Level (Low/High).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16cond.Output_bit_level_DISP">
            <summary>
              Looks up a localized string similar to Output signal.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16cond.Output_bit_mask_DESC">
            <summary>
              Looks up a localized string similar to Output Bit Mask (MSB)...(LSB) (0: Don&apos;t Care).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.writedataext16cond.Output_bit_mask_DISP">
            <summary>
              Looks up a localized string similar to Output bit mask.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.zdefocus">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.zdefocus.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.zdefocus.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.zdefocus.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.zdefocus.Z_defocus_DESC">
            <summary>
              Looks up a localized string similar to Z Defocus (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.zdefocus.Z_defocus_DISP">
            <summary>
              Looks up a localized string similar to Z defocus.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.zdelta">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.zdelta.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.zdelta.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.zdelta.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.zdelta.Z_delta_DESC">
            <summary>
              Looks up a localized string similar to Translate Z Distance (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.zdelta.Z_delta_DISP">
            <summary>
              Looks up a localized string similar to Z delta.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.controlbase">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.controlbase.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.controlbase.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.pen">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Frequency_DESC">
            <summary>
              Looks up a localized string similar to Laser Frequency (Hz) (= 1 / Pulse Period).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Frequency_DISP">
            <summary>
              Looks up a localized string similar to Frequency.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Jump_speed_DESC">
            <summary>
              Looks up a localized string similar to Scanner Jump Speed (mm/s).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Jump_speed_DISP">
            <summary>
              Looks up a localized string similar to Jump speed.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Laser_C">
            <summary>
              Looks up a localized string similar to Laser.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Mark_speed_DESC">
            <summary>
              Looks up a localized string similar to Scanner Mark(or Arc) Speed (mm/s).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Mark_speed_DISP">
            <summary>
              Looks up a localized string similar to Mark speed.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Power____DESC">
            <summary>
              Looks up a localized string similar to Laser Output Power (%).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Power____DISP">
            <summary>
              Looks up a localized string similar to Power (%).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Power_Max__DESC">
            <summary>
              Looks up a localized string similar to Laser Max. Output Power (W).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Power_Max__DISP">
            <summary>
              Looks up a localized string similar to Power (Max).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Power_W__DESC">
            <summary>
              Looks up a localized string similar to Laser Output Power (W).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Power_W__DISP">
            <summary>
              Looks up a localized string similar to Power (W).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Pulse_duty_cycle_DESC">
            <summary>
              Looks up a localized string similar to Laser Pulse Duty Cycle (%) (= Pulse Width / Pulse Period * 100).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Pulse_duty_cycle_DISP">
            <summary>
              Looks up a localized string similar to Pulse cycle.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Pulse_period_DESC">
            <summary>
              Looks up a localized string similar to Laser Pulse Period (usec) (= 1 / Pulse Frequency).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Pulse_period_DISP">
            <summary>
              Looks up a localized string similar to Pulse period.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Pulse_pitch_DESC">
            <summary>
              Looks up a localized string similar to Estimated Pulse pitch (um) (Mark Speed * 1000 / Frequency).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Pulse_pitch_DISP">
            <summary>
              Looks up a localized string similar to Pulse pitch.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Pulse_width_DESC">
            <summary>
              Looks up a localized string similar to Laser Pulse Width (usec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Pulse_width_DISP">
            <summary>
              Looks up a localized string similar to Pulse width.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pen.Scanner_C">
            <summary>
              Looks up a localized string similar to Scanner.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.penrtc">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.FPK_DESC">
            <summary>
              Looks up a localized string similar to Laser First Pulse Killer (usec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.FPK_DISP">
            <summary>
              Looks up a localized string similar to FPK.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Jump_delay_DESC">
            <summary>
              Looks up a localized string similar to Scanner Jump Delay (usec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Jump_delay_DISP">
            <summary>
              Looks up a localized string similar to Jump delay.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Laser__SCANa__C">
            <summary>
              Looks up a localized string similar to Laser (SCANahead).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Laser_C">
            <summary>
              Looks up a localized string similar to Laser.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Mark_delay_DESC">
            <summary>
              Looks up a localized string similar to Scanner Mark Delay (usec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Mark_delay_DISP">
            <summary>
              Looks up a localized string similar to Mark delay.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Off_delay_DESC">
            <summary>
              Looks up a localized string similar to Laser Off Delay (usec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Off_delay_DISP">
            <summary>
              Looks up a localized string similar to Off delay.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.On_delay_DESC">
            <summary>
              Looks up a localized string similar to Laser On Delay (usec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.On_delay_DISP">
            <summary>
              Looks up a localized string similar to On delay.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Polygon_delay_DESC">
            <summary>
              Looks up a localized string similar to Scanner Polygon Delay (usec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Polygon_delay_DISP">
            <summary>
              Looks up a localized string similar to Polygon delay.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Polygon_edge_level_DESC">
            <summary>
              Looks up a localized string similar to Scanner Variable Polygon Delay Edge Level (usec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Polygon_edge_level_DISP">
            <summary>
              Looks up a localized string similar to Polygon edge level.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Q_switch_delay_DESC">
            <summary>
              Looks up a localized string similar to Laser Q Switch Delay (usec). Used with YAG5 Laser Mode.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Q_switch_delay_DISP">
            <summary>
              Looks up a localized string similar to Q switch delay.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.SCANahead_off_shift_DESC">
            <summary>
              Looks up a localized string similar to Laser Off Shift (usec) (SCANahead only).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.SCANahead_off_shift_DISP">
            <summary>
              Looks up a localized string similar to Laser Off Shift.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.SCANahead_on_shift_DESC">
            <summary>
              Looks up a localized string similar to Laser On Shift (usec) (SCANahead only).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.SCANahead_on_shift_DISP">
            <summary>
              Looks up a localized string similar to Laser On Shift.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Scanner__Variable__C">
            <summary>
              Looks up a localized string similar to Scanner (Variable).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Scanner_C">
            <summary>
              Looks up a localized string similar to Scanner.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Sky_writing_angular_limit_DESC">
            <summary>
              Looks up a localized string similar to Sky Writing Angular Limit (°). Converted into Cosine value. Used with Mode3.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Sky_writing_angular_limit_DISP">
            <summary>
              Looks up a localized string similar to Angular limit.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Sky_writing_C">
            <summary>
              Looks up a localized string similar to Sky Writing.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Sky_writing_enable_DESC">
            <summary>
              Looks up a localized string similar to Enable/Disable Sky Wring.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Sky_writing_enable_DISP">
            <summary>
              Looks up a localized string similar to SW Enable.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Sky_writing_laser_on_shift_DESC">
            <summary>
              Looks up a localized string similar to Sky Writing Laser On Shift (usec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Sky_writing_laser_on_shift_DISP">
            <summary>
              Looks up a localized string similar to Laser on shift.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Sky_writing_mode_DESC">
            <summary>
              Looks up a localized string similar to Sky Wring Mode 1,2 or 3.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Sky_writing_mode_DISP">
            <summary>
              Looks up a localized string similar to Sky writing mode.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Sky_writing_post_DESC">
            <summary>
              Looks up a localized string similar to Sky Writing Post (usec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Sky_writing_post_DISP">
            <summary>
              Looks up a localized string similar to Post.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Sky_writing_prev_DESC">
            <summary>
              Looks up a localized string similar to Sky Writing Prev (usec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Sky_writing_prev_DISP">
            <summary>
              Looks up a localized string similar to Prev.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Sky_writing_time_lag_DESC">
            <summary>
              Looks up a localized string similar to Sky Writing Time Lag (usec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Sky_writing_time_lag_DISP">
            <summary>
              Looks up a localized string similar to Time lag.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Variable_jump_delay_DESC">
            <summary>
              Looks up a localized string similar to Enable/Disable Scanner Variable Jump Delay.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Variable_jump_delay_DISP">
            <summary>
              Looks up a localized string similar to Variable jump delay.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Variable_jump_delay_length_DESC">
            <summary>
              Looks up a localized string similar to Scanner Variable Jump Limit Length (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Variable_jump_delay_length_DISP">
            <summary>
              Looks up a localized string similar to Variable jump delay length.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Variable_jump_delay_min__time_DESC">
            <summary>
              Looks up a localized string similar to Scanner Variable Min. Jump Delay (usec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Variable_jump_delay_min__time_DISP">
            <summary>
              Looks up a localized string similar to Variable jump delay min. time.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Variable_polygon_delay_DESC">
            <summary>
              Looks up a localized string similar to Enable/Disable Scanner Variable Polygon Delay By Angle (Scale(°) = 1 – Cos(°)).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Variable_polygon_delay_DISP">
            <summary>
              Looks up a localized string similar to Variable polygon delay.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Wobbel_C">
            <summary>
              Looks up a localized string similar to Wobbel.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Wobbel_enable_DESC">
            <summary>
              Looks up a localized string similar to Enable/Disable Wobbel Shape.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Wobbel_enable_DISP">
            <summary>
              Looks up a localized string similar to Wobbel enable.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Wobbel_frequency_DESC">
            <summary>
              Looks up a localized string similar to Wobbel Frequency (Hz) (&gt;0 ClockWise, &lt;0.1/TrackingError).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Wobbel_frequency_DISP">
            <summary>
              Looks up a localized string similar to Wobbel frequency.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Wobbel_parallel_DESC">
            <summary>
              Looks up a localized string similar to Wobbel Amplitude Parallel, Longitudinal Size (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Wobbel_parallel_DISP">
            <summary>
              Looks up a localized string similar to Parallel.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Wobbel_perpendicular_DESC">
            <summary>
              Looks up a localized string similar to Wobbel Amplitude Perpendicular, Tansversal Size (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Wobbel_perpendicular_DISP">
            <summary>
              Looks up a localized string similar to Perpendicular.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Wobbel_shape_DESC">
            <summary>
              Looks up a localized string similar to Wobbel Shape.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.penrtc.Wobbel_shape_DISP">
            <summary>
              Looks up a localized string similar to Wobbel shape.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.control.pensyncaxis">
            <summary>
              지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pensyncaxis.ResourceManager">
            <summary>
              이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pensyncaxis.Culture">
            <summary>
              이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대해 현재 스레드의 CurrentUICulture 속성을
              재정의합니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pensyncaxis.Approx_blend_limt_DESC">
            <summary>
              SyncAxis Approx  Blend Limt (mm)과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pensyncaxis.Approx_blend_limt_DISP">
            <summary>
              Approx  Blend Limt과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pensyncaxis.Minimal_mark_speed_DESC">
            <summary>
              SyncAxis Min. Mark Speed (mm/sec)과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pensyncaxis.Minimal_mark_speed_DISP">
            <summary>
              Minimal Mark Speed과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pensyncaxis.SDC_suppress_delay_time_DESC">
            <summary>
              Suppress Spot Distance Control Delay Time (sec)과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pensyncaxis.SDC_suppress_delay_time_DISP">
            <summary>
              SDC Delay과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pensyncaxis.SDC_suppress_DESC">
            <summary>
              Suppress Spot Distance Control or Not과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pensyncaxis.SDC_suppress_DISP">
            <summary>
              SDC Suppress과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.control.pensyncaxis.SyncAxis_C">
            <summary>
              SyncAxis과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.raster">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Basic_C">
            <summary>
              Looks up a localized string similar to Basic.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Direction_DESC">
            <summary>
              Looks up a localized string similar to Raster Direction.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Direction_DISP">
            <summary>
              Looks up a localized string similar to Direction.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.DpiX_DESC">
            <summary>
              Looks up a localized string similar to DPI (Pixel X / Inch).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.DpiX_DISP">
            <summary>
              Looks up a localized string similar to Dpi x.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.DpiY_DESC">
            <summary>
              Looks up a localized string similar to DPI (Pixel Y / Inch).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.DpiY_DISP">
            <summary>
              Looks up a localized string similar to Dpi y.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Extension_channel_DESC">
            <summary>
              Looks up a localized string similar to Pixel Output Extension Channel (Analog 1 or 2) (Micro-Vector only).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Extension_channel_DISP">
            <summary>
              Looks up a localized string similar to Extension channel.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Height_DESC">
            <summary>
              Looks up a localized string similar to Height (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Height_DISP">
            <summary>
              Looks up a localized string similar to Height.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Invert_color_DESC">
            <summary>
              Looks up a localized string similar to Invert Output Pixel Color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Invert_color_DISP">
            <summary>
              Looks up a localized string similar to Invert color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Pitch_x_DESC">
            <summary>
              Looks up a localized string similar to Pitch X (mm/pixel).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Pitch_x_DISP">
            <summary>
              Looks up a localized string similar to Pitch x.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Pitch_y_DESC">
            <summary>
              Looks up a localized string similar to Pitch Y (mm/pixel).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Pitch_y_DISP">
            <summary>
              Looks up a localized string similar to Pitch y.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Pixel_period_DESC">
            <summary>
              Looks up a localized string similar to Pixel Period (usec) (1/Pixel Frequency) (Micro-Vector only).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Pixel_period_DISP">
            <summary>
              Looks up a localized string similar to Pixel period.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Pixel_speed_DESC">
            <summary>
              Looks up a localized string similar to Approx. Pixel Speed (mm/s).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Pixel_speed_DISP">
            <summary>
              Looks up a localized string similar to Pixel speed.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Pixel_time_DESC">
            <summary>
              Looks up a localized string similar to Max. Pixel Dration Time (usec) (Time for Pixel Pulse Width. Should be &lt; Pixel Period).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Pixel_time_DISP">
            <summary>
              Looks up a localized string similar to Pixel time.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Pixels_DESC">
            <summary>
              Looks up a localized string similar to 2D Array of Pixels for Weight.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Pixels_DISP">
            <summary>
              Looks up a localized string similar to Pixels.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Px_DESC">
            <summary>
              Looks up a localized string similar to Pixel Width Counts (Pixels).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Px_DISP">
            <summary>
              Looks up a localized string similar to Px.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Py_DESC">
            <summary>
              Looks up a localized string similar to Pixel Height Counts (Pixels).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Py_DISP">
            <summary>
              Looks up a localized string similar to Py.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Raster_C">
            <summary>
              Looks up a localized string similar to Raster.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Raster_mode_DESC">
            <summary>
              Looks up a localized string similar to Raster Mode (Jump and Shoot, Micro-Vector).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Raster_mode_DISP">
            <summary>
              Looks up a localized string similar to Raster mode.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Width_DESC">
            <summary>
              Looks up a localized string similar to Width (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.raster.Width_DISP">
            <summary>
              Looks up a localized string similar to Width.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.jumpto">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.jumpto.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.jumpto.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.jumpto.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.jumpto.Jump_DESC">
            <summary>
              Looks up a localized string similar to Jump to Location .
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.jumpto.Jump_DISP">
            <summary>
              Looks up a localized string similar to Jump to.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.curve">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.curve.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.curve.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.curve.Control1_DESC">
            <summary>
              Looks up a localized string similar to Control1 X,Y (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.curve.Control1_DISP">
            <summary>
              Looks up a localized string similar to Control1.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.curve.Control2_DESC">
            <summary>
              Looks up a localized string similar to Control2 X,Y (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.curve.Control2_DISP">
            <summary>
              Looks up a localized string similar to Control2.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.curve.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.curve.Degree_DESC">
            <summary>
              Looks up a localized string similar to Degree of Curve (Conic: 2, Cubic: 3).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.curve.Degree_DISP">
            <summary>
              Looks up a localized string similar to Degree.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.curve.End_DESC">
            <summary>
              Looks up a localized string similar to End X,Y (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.curve.End_DISP">
            <summary>
              Looks up a localized string similar to End.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.curve.Start_DESC">
            <summary>
              Looks up a localized string similar to Start X,Y (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.curve.Start_DISP">
            <summary>
              Looks up a localized string similar to Start.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.datamatrix">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.C40_DESC">
            <summary>
              Looks up a localized string similar to C40 (Disable Compact Encoding if Enabled).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.C40_DISP">
            <summary>
              Looks up a localized string similar to C40.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.Compact_DESC">
            <summary>
              Looks up a localized string similar to Compact Encoding. Supports the encoding of characters that are not in the ISO-8859-1 character set via ECIs. (Disable C40 If Enabled).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.Compact_DISP">
            <summary>
              Looks up a localized string similar to Compact.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.GS1_DESC">
            <summary>
              Looks up a localized string similar to GS1 Format or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.GS1_DISP">
            <summary>
              Looks up a localized string similar to GS1.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.Min__height_DESC">
            <summary>
              Looks up a localized string similar to Y Pixels: (10~144).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.Min__height_DISP">
            <summary>
              Looks up a localized string similar to Min. height (pixel).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.Min__width_DESC">
            <summary>
              Looks up a localized string similar to X Pixels: (10~144).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.Min__width_DISP">
            <summary>
              Looks up a localized string similar to Min. width (pixel).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.Quite_zone_DESC">
            <summary>
              Looks up a localized string similar to Quite Zone Size.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.Quite_zone_DISP">
            <summary>
              Looks up a localized string similar to Quite zone.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.Square_DESC">
            <summary>
              Looks up a localized string similar to Square(or Rectangle) Shape.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.datamatrix.Square_DISP">
            <summary>
              Looks up a localized string similar to Square.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.entityhatchbase">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Angle_DESC">
            <summary>
              Looks up a localized string similar to Angle(1st) for Line Mode (°).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Angle_DISP">
            <summary>
              Looks up a localized string similar to Angle.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Angle2_DESC">
            <summary>
              Looks up a localized string similar to Angle(2nd) for CrossLine Mode (°).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Angle2_DISP">
            <summary>
              Looks up a localized string similar to Angle2.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Exclude_DESC">
            <summary>
              Looks up a localized string similar to Hatch Exclude Distance (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Exclude_DISP">
            <summary>
              Looks up a localized string similar to Exclude.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Hatch_C">
            <summary>
              Looks up a localized string similar to Hatch.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Hatch_DESC">
            <summary>
              Looks up a localized string similar to Enable(or Disable) Hatch.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Hatch_DISP">
            <summary>
              Looks up a localized string similar to Hatch Enable.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Interval_DESC">
            <summary>
              Looks up a localized string similar to Hatch Interval (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Interval_DISP">
            <summary>
              Looks up a localized string similar to Interval.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Joint_DESC">
            <summary>
              Looks up a localized string similar to Hatch Joint.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Joint_DISP">
            <summary>
              Looks up a localized string similar to Hatch Joint.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Mode_DESC">
            <summary>
              Looks up a localized string similar to Hatch Mode.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Mode_DISP">
            <summary>
              Looks up a localized string similar to Hatch Mode.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Outline_DESC">
            <summary>
              Looks up a localized string similar to Include Outline(or Mark Outline) or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Outline_DISP">
            <summary>
              Looks up a localized string similar to Outline.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Outline_first_DESC">
            <summary>
              Looks up a localized string similar to Mark Outline at First or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Outline_first_DISP">
            <summary>
              Looks up a localized string similar to Outline first.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Repeat_DESC">
            <summary>
              Looks up a localized string similar to Repeat Mark Count(s) for Hatch (Default: 1).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Repeat_DISP">
            <summary>
              Looks up a localized string similar to Hatch Repeats.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Shift_DESC">
            <summary>
              Looks up a localized string similar to Hatch Shift(or Offset) Distance (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Shift_DISP">
            <summary>
              Looks up a localized string similar to Shift.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Zigzag_DESC">
            <summary>
              Looks up a localized string similar to ZigZag Hatch Order or not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entityhatchbase.Zigzag_DISP">
            <summary>
              Looks up a localized string similar to Zigzag.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.group">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.group.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.group.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.group.Closed_DESC">
            <summary>
              Looks up a localized string similar to Is Closed Path or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.group.Closed_DISP">
            <summary>
              Looks up a localized string similar to Closed.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.group.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.image">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Basic_C">
            <summary>
              Looks up a localized string similar to Basic.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Direction_DESC">
            <summary>
              Looks up a localized string similar to Raster Direction.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Direction_DISP">
            <summary>
              Looks up a localized string similar to Direction.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.DpiX_DESC">
            <summary>
              Looks up a localized string similar to DPI (Pixel X / Inch).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.DpiX_DISP">
            <summary>
              Looks up a localized string similar to Dpi x.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.DpiY_DESC">
            <summary>
              Looks up a localized string similar to DPI (Pixel Y / Inch).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.DpiY_DISP">
            <summary>
              Looks up a localized string similar to Dpi y.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Extension_channel_DESC">
            <summary>
              Looks up a localized string similar to Pixel Output Extension Channel (Analog 1 or 2) (Micro-Vector only).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Extension_channel_DISP">
            <summary>
              Looks up a localized string similar to Extension channel.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.File_DESC">
            <summary>
              Looks up a localized string similar to File Name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.File_DISP">
            <summary>
              Looks up a localized string similar to File.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Fixed_aspect_ratio_DESC">
            <summary>
              Looks up a localized string similar to Fixed Aspect Ratio.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Fixed_aspect_ratio_DISP">
            <summary>
              Looks up a localized string similar to Fixed aspect ratio.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Height_DESC">
            <summary>
              Looks up a localized string similar to Height (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Height_DISP">
            <summary>
              Looks up a localized string similar to Height.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Invert_color_DESC">
            <summary>
              Looks up a localized string similar to Invert Output Pixel Color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Invert_color_DISP">
            <summary>
              Looks up a localized string similar to Invert color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Pitch_x_DESC">
            <summary>
              Looks up a localized string similar to Pitch X (mm/pixel).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Pitch_x_DISP">
            <summary>
              Looks up a localized string similar to Pitch x.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Pitch_y_DESC">
            <summary>
              Looks up a localized string similar to Pitch Y (mm/pixel).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Pitch_y_DISP">
            <summary>
              Looks up a localized string similar to Pitch y.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Pixel_period_DESC">
            <summary>
              Looks up a localized string similar to Pixel Period (usec) (1/Pixel Frequency) (Micro-Vector only).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Pixel_period_DISP">
            <summary>
              Looks up a localized string similar to Pixel period.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Pixel_speed_DESC">
            <summary>
              Looks up a localized string similar to Approx. Pixel Speed (mm/s).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Pixel_speed_DISP">
            <summary>
              Looks up a localized string similar to Pixel speed.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Pixel_time_DESC">
            <summary>
              Looks up a localized string similar to Max. Pixel Dration Time (usec) (Time for Pixel Pulse Width. Should be &lt; Pixel Period).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Pixel_time_DISP">
            <summary>
              Looks up a localized string similar to Pixel time.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Px_DESC">
            <summary>
              Looks up a localized string similar to Pixel Width Counts (Pixels).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Px_DISP">
            <summary>
              Looks up a localized string similar to Px.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Py_DESC">
            <summary>
              Looks up a localized string similar to Pixel Height Counts (Pixels).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Py_DISP">
            <summary>
              Looks up a localized string similar to Py.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Raster_C">
            <summary>
              Looks up a localized string similar to Raster.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Raster_mode_DESC">
            <summary>
              Looks up a localized string similar to Raster Mode (Jump and Shoot, Micro-Vector).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Raster_mode_DISP">
            <summary>
              Looks up a localized string similar to Raster mode.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Width_DESC">
            <summary>
              Looks up a localized string similar to Width (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.image.Width_DISP">
            <summary>
              Looks up a localized string similar to Width.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.imagetext">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Alignment_horizontal_DESC">
            <summary>
              Looks up a localized string similar to Horizontal Alignment.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Alignment_horizontal_DISP">
            <summary>
              Looks up a localized string similar to Alignment (horizontal).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Convertible_DESC">
            <summary>
              Looks up a localized string similar to Enable(or Disable) Convert Text Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Convertible_DISP">
            <summary>
              Looks up a localized string similar to Convertible.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Fill_DESC">
            <summary>
              Looks up a localized string similar to Fill or (Outline).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Fill_DISP">
            <summary>
              Looks up a localized string similar to Fill.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Font_DESC">
            <summary>
              Looks up a localized string similar to Font Name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Font_DISP">
            <summary>
              Looks up a localized string similar to Font.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Height_DESC">
            <summary>
              Looks up a localized string similar to Height (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Height_DISP">
            <summary>
              Looks up a localized string similar to Height.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Height_pixel_DESC">
            <summary>
              Looks up a localized string similar to Pixel Height Size (&gt;= 6 pixels).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Height_pixel_DISP">
            <summary>
              Looks up a localized string similar to Height (pixel).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Outline_size_DESC">
            <summary>
              Looks up a localized string similar to Outline Size (pixel).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Outline_size_DISP">
            <summary>
              Looks up a localized string similar to Outline size.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Style_DESC">
            <summary>
              Looks up a localized string similar to Font Style.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Style_DISP">
            <summary>
              Looks up a localized string similar to Style.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Text_converted_DESC">
            <summary>
              Looks up a localized string similar to Text (Converted).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Text_converted_DISP">
            <summary>
              Looks up a localized string similar to Text (converted).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Text_DESC">
            <summary>
              Looks up a localized string similar to Text Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Text_DISP">
            <summary>
              Looks up a localized string similar to Text.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Width_DESC">
            <summary>
              Looks up a localized string similar to Width (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.imagetext.Width_DISP">
            <summary>
              Looks up a localized string similar to Width.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.layerrtc">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc._100__signal_value_DESC">
            <summary>
              Looks up a localized string similar to 100% Output Value (Analog: ~10V, Digital: ~255 or ~65535, Pulsewidth: us, Frequency: Hz, SpotDistance: mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc._100__signal_value_DISP">
            <summary>
              Looks up a localized string similar to 100% signal value.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc.Control_mode_DESC">
            <summary>
              Looks up a localized string similar to Automatic Laser Control Mode.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc.Control_mode_DISP">
            <summary>
              Looks up a localized string similar to Control mode.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc.Control_signal_DESC">
            <summary>
              Looks up a localized string similar to Automatic Laser Control Signal.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc.Control_signal_DISP">
            <summary>
              Looks up a localized string similar to Control signal.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc.Enabled_DESC">
            <summary>
              Looks up a localized string similar to Enable/Disable Automatic Laser Control.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc.Enabled_DISP">
            <summary>
              Looks up a localized string similar to Enabled.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc.Max_signal_value_DESC">
            <summary>
              Looks up a localized string similar to Max. Output value (Analog: ~10V, Digital: ~255 or ~65535, Pulsewidth: us, Frequency: Hz, SpotDistance: none).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc.Max_signal_value_DISP">
            <summary>
              Looks up a localized string similar to Max. signal value.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc.Min_signal_value_DESC">
            <summary>
              Looks up a localized string similar to Min. Output value (Analog: ~10V, Digital: ~255 or ~65535, Pulsewidth: us, Frequency: Hz, SpotDistance: none).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc.Min_signal_value_DISP">
            <summary>
              Looks up a localized string similar to Min. signal value.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc.PoD_C">
            <summary>
              Looks up a localized string similar to Pulse On Demand.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc.Position_table_DESC">
            <summary>
              Looks up a localized string similar to Position Dependent Compensate Table. Distance or Radius (mm), Scale (0~4).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layerrtc.Position_table_DISP">
            <summary>
              Looks up a localized string similar to Position table.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.layersyncaxis">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layersyncaxis.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layersyncaxis.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layersyncaxis.Band_width_DESC">
            <summary>
              Looks up a localized string similar to Band Width (Hz). Load to Stage(High). Scanner(Low) (Used with Scanner + Stage Motion Type).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layersyncaxis.Band_width_DISP">
            <summary>
              Looks up a localized string similar to Band width.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layersyncaxis.Motion_type_DESC">
            <summary>
              Looks up a localized string similar to Motion Type (Scanner or Stage Combination).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layersyncaxis.Motion_type_DISP">
            <summary>
              Looks up a localized string similar to Motion type.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.layersyncaxis.SyncAxis_C">
            <summary>
              Looks up a localized string similar to SyncAxis.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.barcode1d">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Array_DESC">
            <summary>
              Looks up a localized string similar to Array of Cell (1x1, 2x2, 3x3, ...).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Array_DISP">
            <summary>
              Looks up a localized string similar to Array.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Convertible_DESC">
            <summary>
              Looks up a localized string similar to Enable(or Disable) Convert Text Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Convertible_DISP">
            <summary>
              Looks up a localized string similar to Convertible.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Format_DESC">
            <summary>
              Looks up a localized string similar to Barcode Format.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Format_DISP">
            <summary>
              Looks up a localized string similar to Format.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.GS1_DESC">
            <summary>
              Looks up a localized string similar to GS1 Format or not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.GS1_DISP">
            <summary>
              Looks up a localized string similar to GS1.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Height_DESC">
            <summary>
              Looks up a localized string similar to Height (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Height_DISP">
            <summary>
              Looks up a localized string similar to Height.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Invert_cell_DESC">
            <summary>
              Looks up a localized string similar to Invert Cells or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Invert_cell_DISP">
            <summary>
              Looks up a localized string similar to Invert cell.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Line_pitch_DESC">
            <summary>
              Looks up a localized string similar to Line Pitch X (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Line_pitch_DISP">
            <summary>
              Looks up a localized string similar to Line pitch.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Reverse_DESC">
            <summary>
              Looks up a localized string similar to Reverse Order.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Reverse_DISP">
            <summary>
              Looks up a localized string similar to Reverse.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Text_converted_DESC">
            <summary>
              Looks up a localized string similar to Text (Converted).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Text_converted_DISP">
            <summary>
              Looks up a localized string similar to Text (converted).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Text_DESC">
            <summary>
              Looks up a localized string similar to Text Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Text_DISP">
            <summary>
              Looks up a localized string similar to Text.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Width_DESC">
            <summary>
              Looks up a localized string similar to Width (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Width_DISP">
            <summary>
              Looks up a localized string similar to Width.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Zigzag_DESC">
            <summary>
              Looks up a localized string similar to Zig Zag or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.barcode1d.Zigzag_DISP">
            <summary>
              Looks up a localized string similar to Zigzg.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.line">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.Center_DESC">
            <summary>
              Looks up a localized string similar to Center X,Y,Z (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.Center_DISP">
            <summary>
              Looks up a localized string similar to Center.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.End_DESC">
            <summary>
              Looks up a localized string similar to End X,Y,Z (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.End_DISP">
            <summary>
              Looks up a localized string similar to End.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.EndRamp_DESC">
            <summary>
              Looks up a localized string similar to End Ramp Factor (Default: 1.0).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.EndRamp_DISP">
            <summary>
              Looks up a localized string similar to End ramp.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.Length_DESC">
            <summary>
              Looks up a localized string similar to Length (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.Length_DISP">
            <summary>
              Looks up a localized string similar to Length.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.Reverse_DESC">
            <summary>
              Looks up a localized string similar to Mark with Reversed Path when Repeats.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.Reverse_DISP">
            <summary>
              Looks up a localized string similar to Reverse.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.Start_DESC">
            <summary>
              Looks up a localized string similar to Start X,Y,Z (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.Start_DISP">
            <summary>
              Looks up a localized string similar to Start.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.StartRamp_DESC">
            <summary>
              Looks up a localized string similar to Start Ramp Factor (Default: 1.0).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.line.StartRamp_DISP">
            <summary>
              Looks up a localized string similar to Start ramp.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.cone">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.Basic_C">
            <summary>
              Looks up a localized string similar to Basic.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.Direction_DESC">
            <summary>
              Looks up a localized string similar to New Directional (Default: 1,0,0).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.Direction_DISP">
            <summary>
              Looks up a localized string similar to Direction.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.Length_DESC">
            <summary>
              Looks up a localized string similar to Height (or Distance) From Reference To End Location (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.Length_DISP">
            <summary>
              Looks up a localized string similar to Height.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.RadiusEnd_DESC">
            <summary>
              Looks up a localized string similar to Radius at End Location (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.RadiusEnd_DISP">
            <summary>
              Looks up a localized string similar to Radius (End).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.RadiusReference_DESC">
            <summary>
              Looks up a localized string similar to Radius at Reference Location (mm) .
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.RadiusReference_DISP">
            <summary>
              Looks up a localized string similar to Radius (Reference).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.RadiusStart_DESC">
            <summary>
              Looks up a localized string similar to Radius at Start Location (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.RadiusStart_DISP">
            <summary>
              Looks up a localized string similar to Radius (Start).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.Reference_DESC">
            <summary>
              Looks up a localized string similar to New Reference X,Y,Z Location (Default: 0,0,0).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.Reference_DISP">
            <summary>
              Looks up a localized string similar to Reference.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.Z_scale_DESC">
            <summary>
              Looks up a localized string similar to Z Scale Factor (-, +). Calculated When Convert New 3D Correction File (Default 1:1).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.cone.Z_scale_DISP">
            <summary>
              Looks up a localized string similar to Z scale.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.pdf417">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pdf417.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pdf417.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pdf417.Compact_DESC">
            <summary>
              Looks up a localized string similar to Compact Format or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pdf417.Compact_DISP">
            <summary>
              Looks up a localized string similar to Compact.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pdf417.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pdf417.Encoding_DESC">
            <summary>
              Looks up a localized string similar to Encoding (ASCII, ISO-8859-1, UTF-8, UTF-16, ...).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pdf417.Encoding_DISP">
            <summary>
              Looks up a localized string similar to Encoding.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pdf417.GS1_DESC">
            <summary>
              Looks up a localized string similar to GS1 Format or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pdf417.GS1_DISP">
            <summary>
              Looks up a localized string similar to GS1.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pdf417.Px_DESC">
            <summary>
              Looks up a localized string similar to Pixel X Counts.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pdf417.Px_DISP">
            <summary>
              Looks up a localized string similar to Px.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pdf417.Py_DESC">
            <summary>
              Looks up a localized string similar to Pixel Y Counts.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pdf417.Py_DISP">
            <summary>
              Looks up a localized string similar to Py.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pdf417.Quite_zone_DESC">
            <summary>
              Looks up a localized string similar to Quite Zone Size.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pdf417.Quite_zone_DISP">
            <summary>
              Looks up a localized string similar to Quite zone.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.point">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.point.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.point.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.point.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.point.Dwell_DESC">
            <summary>
              Looks up a localized string similar to Dwell Time (msec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.point.Dwell_DISP">
            <summary>
              Looks up a localized string similar to Dwell.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.points">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.points.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.points.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.points.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.points.Hard_jump_DESC">
            <summary>
              Looks up a localized string similar to Enable(or Disable) Hard Jump.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.points.Hard_jump_DISP">
            <summary>
              Looks up a localized string similar to Hard jump.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.points.Hard_jump_jump_delay_DESC">
            <summary>
              Looks up a localized string similar to Jump Delay for Hard Jump (usec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.points.Hard_jump_jump_delay_DISP">
            <summary>
              Looks up a localized string similar to Hard jump (jump delay).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.points.Hard_jump_laser_off_delay_DESC">
            <summary>
              Looks up a localized string similar to Laser Off Delay for Hard Jump (usec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.points.Hard_jump_laser_off_delay_DISP">
            <summary>
              Looks up a localized string similar to Hard jump (laser off delay).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.points.Hard_jump_laser_on_delay_DESC">
            <summary>
              Looks up a localized string similar to Laser On Delay for Hard Jump (usec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.points.Hard_jump_laser_on_delay_DISP">
            <summary>
              Looks up a localized string similar to Hard jump (laser on delay).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.points.Hard_jump_with_delays_DESC">
            <summary>
              Looks up a localized string similar to Enable(or Disable) Hard Jump with Delays.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.points.Hard_jump_with_delays_DISP">
            <summary>
              Looks up a localized string similar to Hard jump with delays.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.plane">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.plane.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.plane.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.plane.Basic_C">
            <summary>
              Looks up a localized string similar to Basic.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.plane.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.plane.Direction_x_DESC">
            <summary>
              Looks up a localized string similar to New Directional X (Default: 1,0,0).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.plane.Direction_x_DISP">
            <summary>
              Looks up a localized string similar to Direction x.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.plane.Direction_y_DESC">
            <summary>
              Looks up a localized string similar to New Directional Y (Default: 0,1,0).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.plane.Direction_y_DISP">
            <summary>
              Looks up a localized string similar to Direction y.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.plane.Height_DESC">
            <summary>
              Looks up a localized string similar to Imaginary Field Height Size (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.plane.Height_DISP">
            <summary>
              Looks up a localized string similar to Height.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.plane.Reference_DESC">
            <summary>
              Looks up a localized string similar to New Reference X,Y,Z Position (Default: 0,0,0).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.plane.Reference_DISP">
            <summary>
              Looks up a localized string similar to Reference.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.plane.Width_DESC">
            <summary>
              Looks up a localized string similar to Imaginary Field Width Size (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.plane.Width_DISP">
            <summary>
              Looks up a localized string similar to Width.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.plane.Z_scale_DESC">
            <summary>
              Looks up a localized string similar to Z Scale Factor (-, +). Calculated When Convert New 3D Correction File (Default 1:1).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.plane.Z_scale_DISP">
            <summary>
              Looks up a localized string similar to Z scale.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.pointscloud">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pointscloud.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pointscloud.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pointscloud.Array_offset_DESC">
            <summary>
              Looks up a localized string similar to Array Of Offset (Should be &gt; 0).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pointscloud.Array_offset_DISP">
            <summary>
              Looks up a localized string similar to Array offset.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pointscloud.Basic_C">
            <summary>
              Looks up a localized string similar to Basic.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pointscloud.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pointscloud.File_DESC">
            <summary>
              Looks up a localized string similar to File Name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pointscloud.File_DISP">
            <summary>
              Looks up a localized string similar to File.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pointscloud.Polygon_mode_DESC">
            <summary>
              Looks up a localized string similar to Polygon Render Mode.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pointscloud.Polygon_mode_DISP">
            <summary>
              Looks up a localized string similar to Polygon mode.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pointscloud.Z_scale_DESC">
            <summary>
              Looks up a localized string similar to Z Scale Factor (-, +). Calculated When Convert New 3D Correction File (Default 1:1).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pointscloud.Z_scale_DISP">
            <summary>
              Looks up a localized string similar to Z scale.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pointscloud.Z_sort_DESC">
            <summary>
              Looks up a localized string similar to Z Sort Order When Convert.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.pointscloud.Z_sort_DISP">
            <summary>
              Looks up a localized string similar to Z sort.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.polyline2d">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.polyline2d.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.polyline2d.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.polyline2d.Closed_DESC">
            <summary>
              Looks up a localized string similar to Is Closed Path or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.polyline2d.Closed_DISP">
            <summary>
              Looks up a localized string similar to Closed.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.polyline2d.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.qrcode">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.qrcode.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.qrcode.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.qrcode.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.qrcode.Encoding_DESC">
            <summary>
              Looks up a localized string similar to Encoding (ASCII, ISO-8859-1, UTF-8, UTF-16, ...).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.qrcode.Encoding_DISP">
            <summary>
              Looks up a localized string similar to Encoding.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.qrcode.GS1_DESC">
            <summary>
              Looks up a localized string similar to GS1 Format or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.qrcode.GS1_DISP">
            <summary>
              Looks up a localized string similar to GS1.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.qrcode.Height_pixel_DESC">
            <summary>
              Looks up a localized string similar to Height(Y) Pixels.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.qrcode.Height_pixel_DISP">
            <summary>
              Looks up a localized string similar to Height (pixel).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.qrcode.QR_version_DESC">
            <summary>
              Looks up a localized string similar to QR Version (1~40).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.qrcode.QR_version_DISP">
            <summary>
              Looks up a localized string similar to Version.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.qrcode.Quite_zone_DESC">
            <summary>
              Looks up a localized string similar to Quite Zone Size.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.qrcode.Quite_zone_DISP">
            <summary>
              Looks up a localized string similar to Quite zone.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.qrcode.Width_pixel_DESC">
            <summary>
              Looks up a localized string similar to Width(X) Pixels.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.qrcode.Width_pixel_DISP">
            <summary>
              Looks up a localized string similar to Width (pixel).
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.rectangle">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.rectangle.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.rectangle.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.rectangle.Closed_DESC">
            <summary>
              Looks up a localized string similar to Is Closed Path or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.rectangle.Closed_DISP">
            <summary>
              Looks up a localized string similar to Closed.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.rectangle.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.rectangle.Height_DESC">
            <summary>
              Looks up a localized string similar to Height (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.rectangle.Height_DISP">
            <summary>
              Looks up a localized string similar to Height.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.rectangle.Width_DESC">
            <summary>
              Looks up a localized string similar to Width (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.rectangle.Width_DISP">
            <summary>
              Looks up a localized string similar to Width.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.siriustext">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Alignment_horizontal_DESC">
            <summary>
              Looks up a localized string similar to Horizontal Alignment.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Alignment_horizontal_DISP">
            <summary>
              Looks up a localized string similar to Alignment (horizontal).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Alignment_vertical_DESC">
            <summary>
              Looks up a localized string similar to Vertical Alignment.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Alignment_vertical_DISP">
            <summary>
              Looks up a localized string similar to Alignment (vertical).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Convertible_DESC">
            <summary>
              Looks up a localized string similar to Enable(or Disable) Convert Text Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Convertible_DISP">
            <summary>
              Looks up a localized string similar to Convertible.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Font_DESC">
            <summary>
              Looks up a localized string similar to Font Name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Font_DISP">
            <summary>
              Looks up a localized string similar to Font.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Height_DESC">
            <summary>
              Looks up a localized string similar to Height (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Height_DISP">
            <summary>
              Looks up a localized string similar to Height.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Letter_space_DESC">
            <summary>
              Looks up a localized string similar to Letter Space.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Letter_space_DISP">
            <summary>
              Looks up a localized string similar to Letter space.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Letter_spacing_DESC">
            <summary>
              Looks up a localized string similar to Letter Spacing (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Letter_spacing_DISP">
            <summary>
              Looks up a localized string similar to Letter spacing.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Line_spacing_DESC">
            <summary>
              Looks up a localized string similar to Line Spacing (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Line_spacing_DISP">
            <summary>
              Looks up a localized string similar to Line spacing.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Reverse_DESC">
            <summary>
              Looks up a localized string similar to Reverse Mark.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Reverse_DISP">
            <summary>
              Looks up a localized string similar to Reverse.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Text_converted_DESC">
            <summary>
              Looks up a localized string similar to Text (Converted).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Text_converted_DISP">
            <summary>
              Looks up a localized string similar to Text (converted).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Text_DESC">
            <summary>
              Looks up a localized string similar to Text Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Text_DISP">
            <summary>
              Looks up a localized string similar to Text.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Width_DESC">
            <summary>
              Looks up a localized string similar to Width (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Width_DISP">
            <summary>
              Looks up a localized string similar to Width.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Word_spacing_DESC">
            <summary>
              Looks up a localized string similar to Word Spacing (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.siriustext.Word_spacing_DISP">
            <summary>
              Looks up a localized string similar to Word spacing.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.trepan">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.trepan.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.trepan.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.trepan.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.trepan.Inner_diameter_DESC">
            <summary>
              Looks up a localized string similar to Inner Diameter (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.trepan.Inner_diameter_DISP">
            <summary>
              Looks up a localized string similar to Inner diameter.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.trepan.Outter_diameter_DESC">
            <summary>
              Looks up a localized string similar to Outter Diameter (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.trepan.Outter_diameter_DISP">
            <summary>
              Looks up a localized string similar to Outter diameter.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.trepan.Revolutions_DESC">
            <summary>
              Looks up a localized string similar to Revolutions of Outter Circle.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.trepan.Revolutions_DISP">
            <summary>
              Looks up a localized string similar to Revolutions.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.spiral">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.Closed_DESC">
            <summary>
              Looks up a localized string similar to Is Closed Path or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.Closed_DISP">
            <summary>
              Looks up a localized string similar to Closed.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.End_diameter_DESC">
            <summary>
              Looks up a localized string similar to End Diameter (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.End_diameter_DISP">
            <summary>
              Looks up a localized string similar to End diameter.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.Height_DESC">
            <summary>
              Looks up a localized string similar to Height (mm) (+: Upper, -: Lower).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.Height_DISP">
            <summary>
              Looks up a localized string similar to Height.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.Height_pitch_DESC">
            <summary>
              Looks up a localized string similar to Height Pitch (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.Height_pitch_DISP">
            <summary>
              Looks up a localized string similar to Height pitch.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.Radial_pitch_DESC">
            <summary>
              Looks up a localized string similar to Radial Pitch (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.Radial_pitch_DISP">
            <summary>
              Looks up a localized string similar to Radial pitch.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.Revolutions_DESC">
            <summary>
              Looks up a localized string similar to Revolutions of Circles.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.Revolutions_DISP">
            <summary>
              Looks up a localized string similar to Revolutions.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.Start_diameter_DESC">
            <summary>
              Looks up a localized string similar to Start Diameter (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.spiral.Start_diameter_DISP">
            <summary>
              Looks up a localized string similar to Start diameter.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.stl">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.stl.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.stl.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.stl.Basic_C">
            <summary>
              Looks up a localized string similar to Basic.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.stl.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.stl.File_DESC">
            <summary>
              Looks up a localized string similar to File Name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.stl.File_DISP">
            <summary>
              Looks up a localized string similar to File.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.stl.Polygon_mode_DESC">
            <summary>
              Looks up a localized string similar to Polygon Render Mode.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.stl.Polygon_mode_DISP">
            <summary>
              Looks up a localized string similar to Polygon mode.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.text">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Alignment_horizontal_DESC">
            <summary>
              Looks up a localized string similar to Horizontal Alignment.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Alignment_horizontal_DISP">
            <summary>
              Looks up a localized string similar to Alignment (horizontal).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Alignment_vertical_DESC">
            <summary>
              Looks up a localized string similar to Vertical Alignment.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Alignment_vertical_DISP">
            <summary>
              Looks up a localized string similar to Alignment (vertical).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Closed_DESC">
            <summary>
              Looks up a localized string similar to Closed Loop.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Closed_DISP">
            <summary>
              Looks up a localized string similar to Closed.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Convertible_DESC">
            <summary>
              Looks up a localized string similar to Enable(or Disable) Convert Text Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Convertible_DISP">
            <summary>
              Looks up a localized string similar to Convertible.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Font_DESC">
            <summary>
              Looks up a localized string similar to Font Name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Font_DISP">
            <summary>
              Looks up a localized string similar to Font.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Height_DESC">
            <summary>
              Looks up a localized string similar to Height (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Height_DISP">
            <summary>
              Looks up a localized string similar to Height.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Reverse_DESC">
            <summary>
              Looks up a localized string similar to Reverse Mark.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Reverse_DISP">
            <summary>
              Looks up a localized string similar to Reverse.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Style_DESC">
            <summary>
              Looks up a localized string similar to Font Style.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Style_DISP">
            <summary>
              Looks up a localized string similar to Style.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Text_converted_DESC">
            <summary>
              Looks up a localized string similar to Text (Converted).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Text_converted_DISP">
            <summary>
              Looks up a localized string similar to Text (converted).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Text_DESC">
            <summary>
              Looks up a localized string similar to Text Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Text_DISP">
            <summary>
              Looks up a localized string similar to Text.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Width_DESC">
            <summary>
              Looks up a localized string similar to Width (mm).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.text.Width_DISP">
            <summary>
              Looks up a localized string similar to Width.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.vertex">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.vertex.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.vertex.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.vertex.Bulge_DESC">
            <summary>
              Looks up a localized string similar to Bulge (Atan/4).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.vertex.Bulge_DISP">
            <summary>
              Looks up a localized string similar to Bulge.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.vertex.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.vertex.Ramp_DESC">
            <summary>
              Looks up a localized string similar to Ramp Factor (Default: 1.0).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.vertex.Ramp_DISP">
            <summary>
              Looks up a localized string similar to Ramp.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.entity.entitybase">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Align_DESC">
            <summary>
              Looks up a localized string similar to Translate for Align (mm) (Used when Alignment has configured).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Align_DISP">
            <summary>
              Looks up a localized string similar to Mode align.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Alignment_DESC">
            <summary>
              Looks up a localized string similar to Alignments (ModelMatrix = ModelAlign * ModelScale * ModelRotate * ModelTranslate).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Alignment_DISP">
            <summary>
              Looks up a localized string similar to Alignment.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Basic_C">
            <summary>
              Looks up a localized string similar to Basic.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Bound_DESC">
            <summary>
              Looks up a localized string similar to Bouding Box (WxHxD: Width, Heigh and Depth).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Bound_DISP">
            <summary>
              Looks up a localized string similar to Bound box.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Color_DESC">
            <summary>
              Looks up a localized string similar to Color of Entity (Used with Pen Color).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Color_DISP">
            <summary>
              Looks up a localized string similar to Color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Description_DESC">
            <summary>
              Looks up a localized string similar to Description of Entity.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Description_DISP">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Entity_id_DESC">
            <summary>
              Looks up a localized string similar to Unique Entity ID.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Entity_id_DISP">
            <summary>
              Looks up a localized string similar to ID.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Entity_type_DESC">
            <summary>
              Looks up a localized string similar to Entity Type by Name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Entity_type_DISP">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.HitTest_DESC">
            <summary>
              Looks up a localized string similar to Is Allow Hittest or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.HitTest_DISP">
            <summary>
              Looks up a localized string similar to HitTest.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.In_DESC">
            <summary>
              Looks up a localized string similar to In(Start) Location.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.In_DISP">
            <summary>
              Looks up a localized string similar to In.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Items_DESC">
            <summary>
              Looks up a localized string similar to Counts of Child Entities.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Items_DISP">
            <summary>
              Looks up a localized string similar to Items.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Mark_C">
            <summary>
              Looks up a localized string similar to Mark.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Mark_DESC">
            <summary>
              Looks up a localized string similar to Is Allow to Mark or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Mark_DISP">
            <summary>
              Looks up a localized string similar to Mark.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Matrix_C">
            <summary>
              Looks up a localized string similar to Matrix.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Model_DESC">
            <summary>
              Looks up a localized string similar to Model 4x4 Matrix (ModelMatrix = ModelAlign * ModelScale * ModelRotate * ModelTranslate).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Model_DISP">
            <summary>
              Looks up a localized string similar to Model matrix.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Name_DESC">
            <summary>
              Looks up a localized string similar to Name of Entity.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Name_DISP">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Out_DESC">
            <summary>
              Looks up a localized string similar to Out(End) Location.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Out_DISP">
            <summary>
              Looks up a localized string similar to Out.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Render_DESC">
            <summary>
              Looks up a localized string similar to Is Allow to Render or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Render_DISP">
            <summary>
              Looks up a localized string similar to Render.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Repeats_DESC">
            <summary>
              Looks up a localized string similar to Mark Repeat Counts (Default: 1).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Repeats_DISP">
            <summary>
              Looks up a localized string similar to Repeats.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Rotate_DESC">
            <summary>
              Looks up a localized string similar to Model Rotate X,Y,Z Angle (°) .
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Rotate_DISP">
            <summary>
              Looks up a localized string similar to Model rotate.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Scale_DESC">
            <summary>
              Looks up a localized string similar to Model Scale X,Y,Z (Default: 1, Should be &gt; 0).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Scale_DISP">
            <summary>
              Looks up a localized string similar to Model scale.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Selected_DESC">
            <summary>
              Looks up a localized string similar to Is Selected or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Selected_DISP">
            <summary>
              Looks up a localized string similar to Selected.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Status_C">
            <summary>
              Looks up a localized string similar to Status.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Translate_DESC">
            <summary>
              Looks up a localized string similar to Model Translate Position X,Y,Z (mm) .
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.entity.entitybase.Translate_DISP">
            <summary>
              Looks up a localized string similar to Model translate.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.LineDirections">
            <summary>
            Line directions
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.LineDirections.Horizontal">
            <summary>
            Horizontal lines
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.LineDirections.Vertical">
            <summary>
            Vertical lines
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.CellLine">
            <summary>
            CellLine
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellLine.DotFactor">
            <summary>
            Dot factor of cell (1x1, 2x2, 3x3,...)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellLine.Direction">
            <summary>
            <c>LineDirections</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellLine.IsZigZag">
            <summary>
            ZigZag
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CellLine.#ctor(SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase)">
            <summary>
            Constructor
            </summary>
            <param name="bcd"><c>EntityBarcode2DBase</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CellLine.ToString">
            <summary>
            Represent <c>DotFactor</c> as string
            </summary>
            <returns><c>DotFactor</c> as string</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CellLine.Clone">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.CellOutLine">
            <summary>
            CellOutLine
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CellOutLine.#ctor(SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase)">
            <summary>
            Constructor
            </summary>
            <param name="bcd"><c>EntityBarcode2DBase</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CellOutLine.ToString">
            <summary>
            Represent <c>DotFactor</c> as string
            </summary>
            <returns><c>DotFactor</c> as string</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CellOutLine.Clone">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.CellHatch">
            <summary>
            CellHatch
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellHatch.DotFactor">
            <summary>
            Dot factor of cell (1x1, 2x2, 3x3,...)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellHatch.HatchMode">
            <summary>
            HatchModes
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellHatch.IsZigZag">
            <summary>
            ZigZag
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellHatch.HatchAngle">
            <summary>
            Hatch 1st Angle (for Line)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellHatch.HatchAngle2">
            <summary>
            Hatch 2nd Angle (for Cross Line)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellHatch.HatchInterval">
            <summary>
            Hatch interval (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellHatch.HatchShift">
            <summary>
            Hatch shift (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellHatch.HatchExclude">
            <summary>
            Hatch exculde (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellHatch.IsHatchOutline">
            <summary>
            Hatch include outline
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellHatch.IsHatchOutlineFirst">
            <summary>
            외곽 가공을 우선할지 여부
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CellHatch.#ctor(SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase)">
            <summary>
            Constructor
            </summary>
            <param name="bcd"><c>EntityBarcode2DBase</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CellHatch.ToString">
            <summary>
            Represent <c>DotFactor</c> as string
            </summary>
            <returns><c>DotFactor</c> as string</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CellHatch.Clone">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.CellCircle">
            <summary>
            CellCircle
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellCircle.DotFactor">
            <summary>
            Dot factor of cell (1x1, 2x2, 3x3,...)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.CellCircle.dotFactor">
            <summary>
            Dot factor (1,2,3,...)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellCircle.IsZigZag">
            <summary>
            ZigZag
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellCircle.IsReverse">
            <summary>
            Reverse
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellCircle.RadiusFactor">
            <summary>
            Radius scale factor
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.CellCircle.radiusFactor">
            <summary>
            Radius factor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CellCircle.#ctor(SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase)">
            <summary>
            Constructor
            </summary>
            <param name="bcd"><c>EntityBarcode2DBase</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CellCircle.ToString">
            <summary>
            Represent <c>DotFactor</c> as string
            </summary>
            <returns><c>DotFactor</c> as string</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CellCircle.Clone">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.DotDirections">
            <summary>
            Dot directions
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.DotDirections.Horizontal">
            <summary>
            Horizontal dots
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.DotDirections.Vertical">
            <summary>
            Vertical dots
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.CellDot">
            <summary>
            CellDot
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellDot.DotFactor">
            <summary>
            Dot factor of cell (1x1, 2x2, 3x3,...)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellDot.Direction">
            <summary>
            <c>DotDirections</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellDot.IsZigZag">
            <summary>
            ZigZag
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellDot.IsReverse">
            <summary>
            Reverse
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellDot.RasterMode">
            <summary>
            Raster mode
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellDot.PixelPeriod">
            <summary>
            Pixel period (usec)
            </summary>
            <remarks>
            If <c>RasterModes.JumpAndShoot</c>, pixel period is not used. <br/>
            If <c>RasterModes.MicroVector</c>, pixel speed = pixel pitch(mm) / pixel period(s). <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellDot.PixelTime">
            <summary>
            Pixel duration time (usec)
            </summary>
            <remarks>
            Pixel output time works like as output pulse width. should be lower than <c>PixelPeriod</c>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CellDot.PixelChannel">
            <summary>
            Pixel output extension channel 
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CellDot.#ctor(SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase)">
            <summary>
            Constructor
            </summary>
            <param name="bcd"><c>EntityBarcode2DBase</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CellDot.ToString">
            <summary>
            Represent <c>DotFactor</c> as string
            </summary>
            <returns><c>DotFactor</c> as string</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CellDot.Clone">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.CharacterSetFormats">
            <summary>
            CharacterSetFormats
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.CharacterSetFormats.Date">
            <summary>
            Date format
            </summary>
            <remarks>
            For example, YYYY/MM/DD
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.CharacterSetFormats.Time">
            <summary>
            Time format
            </summary>
            <remarks>
            For example, HH:mm:dd
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.CharacterSetFormats.SerialNo">
            <summary>
            SerialNo format
            </summary>
            <remarks>
            For example, 0001, 0002, ...
            </remarks>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.CharacterSetDate">
            <summary>
            CharacterSetDate
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CharacterSetDate.DateFormat">
            <summary>
            Date format
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CharacterSetDate.IsLeadingWithZero">
            <summary>
            Num of digits
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CharacterSetDate.#ctor(SpiralLab.Sirius2.Winforms.Entity.EntityBase)">
            <summary>
            Constructor
            </summary>
            <param name="text"><c>EntityBase</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CharacterSetDate.ToString">
            <summary>
            Represent <c>CharacterSetDate</c> as string
            </summary>
            <returns><c>CharacterSetDate</c> as string</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CharacterSetDate.Clone">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.CharacterSetTime">
            <summary>
            CharacterSetTime
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CharacterSetTime.TimeFormat">
            <summary>
            Date format
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CharacterSetTime.IsLeadingWithZero">
            <summary>
            Num of digits
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CharacterSetTime.#ctor(SpiralLab.Sirius2.Winforms.Entity.EntityBase)">
            <summary>
            Constructor
            </summary>
            <param name="text"><c>EntityBase</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CharacterSetTime.ToString">
            <summary>
            Represent <c>CharacterSetTime</c> as string
            </summary>
            <returns><c>CharacterSetTime</c> as string</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CharacterSetTime.Clone">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.CharacterSetSerialNo">
            <summary>
            CharacterSetSerialNo
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CharacterSetSerialNo.NumOfDigits">
            <summary>
            Num of digits
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.CharacterSetSerialNo.SerialFormat">
            <summary>
            <c>SiriusSerialFormat</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CharacterSetSerialNo.#ctor(SpiralLab.Sirius2.Winforms.Entity.EntityBase)">
            <summary>
            Constructor
            </summary>
            <param name="entityBase"><c>EntityBase</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CharacterSetSerialNo.ToString">
            <summary>
            Represent <c>CharacterSetSerialNo</c> as string
            </summary>
            <returns><c>CharacterSetSerialNo</c> as string</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.CharacterSetSerialNo.Clone">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityScriptEvent">
            <summary>
            EntityScriptEvent entity
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityScriptEvent.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityScriptEvent.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityScriptEvent.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityScriptEvent.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityScriptEvent.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityMoFExtStartDelay">
            <summary>
            EntityMoFExtStartDelay entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMoFExtStartDelay.Encoder">
            <summary>
            Encoder  
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMoFExtStartDelay.Distance">
            <summary>
            Distance
            </summary>
            <remarks>
            Distance for delay (mm) <br/>
            If '0', then disabled external start delay  <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFExtStartDelay.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFExtStartDelay.#ctor(SpiralLab.Sirius2.Scanner.Rtc.RtcEncoders,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="encoder"><c>RtcEncoders</c></param>
            <param name="distance">Distance for delay (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFExtStartDelay.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFExtStartDelay.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFExtStartDelay.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFExtStartDelay.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityVariable">
            <summary>
            EntityVariable entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVariable.No">
            <summary>
            No (0~7)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVariable.Value">
            <summary>
            Data
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVariable.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVariable.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="no">0~7</param>
            <param name="data">Variable value</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVariable.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVariable.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVariable.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVariable.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16EdgeCond">
            <summary>
            EntityWaitDataExt16EdgeCond entity
            </summary>
            <remarks>
            Wait until EXTENSION 1 port input condition has matched until goes to LOW(or HIGH) edge 
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16EdgeCond.BitPosition">
            <summary>
            Bit position (0~15)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16EdgeCond.bitPosition">
            <summary>
            Bit position (0~15)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16EdgeCond.BitName">
            <summary>
            Output bit name
            </summary>
            <remarks>
            Used with <c>Config.DIn_RtcExtension1Port</c>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16EdgeCond.SignalEdge">
            <summary>
            Output value
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16EdgeCond.signalEdge">
            <summary>
            Output value
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16EdgeCond.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16EdgeCond.#ctor(System.UInt32,SpiralLab.Sirius2.Scanner.Rtc.SignalEdges)">
            <summary>
            Constructor
            </summary>
            <param name="bitPosition">Bit postion: 0~15</param>
            <param name="signalEdge"><c>SignalEdges</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16EdgeCond.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16EdgeCond.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16EdgeCond.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16EdgeCond.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityRaster">
            <summary>
            EntityRaster entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.Width">
            <summary>
            Width (mm)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.width">
            <summary>
            Width (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.Height">
            <summary>
            Height (mm)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.height">
            <summary>
            Height (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.PixelChannel">
            <summary>
            Pixel Output Extension Channel 
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.pixelChannel">
            <summary>
            Pixel Output Extension Channel 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.Px">
            <summary>
            Px
            </summary>
            <remarks>
            Used by internally (Do NOT edit)
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.Py">
            <summary>
            Py
            </summary>
            <remarks>
            Used by internally (Do NOT edit)
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.RasterMode">
            <summary>
            Raster mode
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.rasterMode">
            <summary>
            Raster mode
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.PixelPeriod">
            <summary>
            Pixel period (usec)
            </summary>
            <remarks>
            If <c>RasterModes.JumpAndShoot</c>, pixel period is not used. <br/>
            If <c>RasterModes.MicroVector</c>, pixel speed = pixel pitch(mm) / pixel period(s). <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.pixelPeriod">
            <summary>
            Pixel Period (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.PixelTime">
            <summary>
            Pixel duration time (usec)
            </summary>
            <remarks>
            Pixel output time works like as output pulse width. should be lower than <c>PixelPeriod</c>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.pixelTime">
            <summary>
            Pixel Time (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.PitchX">
            <summary>
            Pitch x (mm/pixel)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.PitchY">
            <summary>
            Pitch y (mm/pixel)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.DpiX">
            <summary>
            DPI x (dots/inch)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.DpiY">
            <summary>
            DPI y (dots/inch)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.PixelSpeed">
            <summary>
            Pixel Speed (mm/s)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.IsInvertColor">
            <summary>
            Invert Pixel Color
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.Direction">
            <summary>
            Raster Direction
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.Pixels">
            <summary>
            Array of x,y pixels 
            </summary>
            <remarks>
            Weight values from 0 ~ 1 <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRaster._Pixels">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.glBuffer">
            <summary>
            GLBuffer 
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.#ctor(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="height">Height (mm)</param>
            <param name="width">Width (mm)</param>
            <param name="px">Pixel x counts</param>
            <param name="py">Pixel y counts</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.#ctor(System.Double,System.Double,System.Double[0:,0:])">
            <summary>
            Constructor
            </summary>
            <param name="height">Height (mm)</param>
            <param name="width">Width (mm)</param>
            <param name="weights">Array of x, y weight values from 0 ~ 1<br/>Origin from left bottom <br/></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.#ctor(System.Double,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="height">Height (mm)</param>
            <param name="imageFileName">Image filename</param>
            <param name="isInverted">Invert weight values or not</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.MarkVerticalLine(System.Int32,System.Boolean,SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <summary>
            Mark vertical line 
            </summary>
            <param name="px">Index of x line</param>
            <param name="btmToTop"></param>
            <param name="marker"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRaster.MarkHorizontalLine(System.Int32,System.Boolean,SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <summary>
            Mark horizozntal line
            </summary>
            <param name="py">Index of y line</param>
            <param name="leftToRight"></param>
            <param name="marker"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityJumpTo">
            <summary>
            EntityJumpTo entity
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityJumpTo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityJumpTo.#ctor(OpenTK.Vector3)">
            <summary>
            Constructor
            </summary>
            <param name="jumpTo">Jump x,y,z location</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityJumpTo.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="x">Jump x location (mm)</param>
            <param name="y">Jump y location (mm)</param>
            <param name="z">Jump z location (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityJumpTo.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityJumpTo.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityJumpTo.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityJumpTo.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityJumpTo.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityJumpTo.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase">
            <summary>
            EntityHatchBase
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.IsHatchable">
            <summary>
            Enable(or Disable) Hatch 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.HatchMode">
            <summary>
            Hatch Mode
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.HatchJoint">
            <summary>
            Hatch Joint
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.IsHatchZigZag">
            <summary>
            Hatch with ZigZag
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.HatchAngle">
            <summary>
            Hatch Angle(1st)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.HatchAngle2">
            <summary>
            Hatch Angle(2nd)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.HatchInterval">
            <summary>
            Hatch Interval (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.HatchExclude">
            <summary>
            Hatch Exclude (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.HatchShift">
            <summary>
            Hatch Shift (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.HatchRepeat">
            <summary>
            Hatch Repeats
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.IsHatchIncludeOutline">
            <summary>
            Mark Outline with Hatch or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.IsHatchOutlineFirst">
            <summary>
            Mark Outline at First or not
            </summary>
            <remarks>
            Used when <c>IsHatchOutline</c> is <c>True</c> only. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.hatchedGroup">
            <summary>
            Hatched <c>EntityGroup</c> entity 
            </summary>
            <remarks>
            Valid when <c>IsHatchOutline</c> is <c>True</c>. <br/>
            <c>null</c> when <c>IsHatchOutline</c> is <c>False</c>. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.InternalClone(SpiralLab.Sirius2.Winforms.Entity.EntityBase)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.RegenHatch">
            <summary>
            Regen internal hatch if <c>IsHatchable</c> is <c>True</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.Translate(OpenTK.Vector3)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.Translate(OpenTK.Vector2)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.Translate(System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.RotateX(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.RotateY(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.RotateZ(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.Rotate(System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityHatchBase.Scale(System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityRampEnd">
            <summary>
            EntityRampEnd entity
            </summary>
            <remarks>
            aka. Automatic laser control by defined vector
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRampEnd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRampEnd.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRampEnd.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRampEnd.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityRampBegin">
            <summary>
            EntityRampBegin entity
            </summary>
            <remarks>
            aka. Automatic laser control by defined vector
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRampBegin.Signal">
            <summary>
            <c>AutoLaserControlSignal</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRampBegin.StartingValue">
            <summary>
            Staring value
            </summary>
            <remarks>
            double: Analog: ~10, PulseWidth: us, Frequency: Hz
            uint: DO: ~255(8bits), ~65535(16bits)
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRampBegin.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRampBegin.#ctor(SpiralLab.Sirius2.Scanner.Rtc.AutoLaserControlSignals,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="signal"><c>AutoLaserControlSignal</c></param>
            <param name="startingValue">Staring signal value: Analog: ~10, DO: ~255, 65535, PulseWidth: us, Frequency: Hz</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRampBegin.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRampBegin.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRampBegin.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRampBegin.PropertyVisibility(SpiralLab.Sirius2.Scanner.Rtc.IRtc)">
            <summary>
            Property visibility for <c>IRtc</c>
            </summary>
            <param name="rtc"><c>IRtc</c></param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16Cond">
            <summary>
            EntityWaitDataExt16Cond entity
            </summary>
            <remarks>
            16 bits digital input at EXTENSION 1 port when input condition has matched. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16Cond.InputLowBitMask">
            <summary>
            Input low bit mask
            </summary>
            <remarks>
            0: Don't Care. <br/>
            For example: (MSB) 0000 0000 0000 0000 (LSB) <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16Cond.InputHighBitMask">
            <summary>
            Input high bit mask
            </summary>
            <remarks>
            0: Don't Care. <br/>
            For example: (MSB) 0000 0000 0000 0000 (LSB) <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16Cond.#ctor">
            <summary>
            Constructor
            </summary>
            <remarks>
            Used with 16 bits digital input at EXTENSION 1 port. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16Cond.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <remarks>
            Used with 16 bits digital input at EXTENSION 1 port. <br/>
            </remarks>
            <param name="inputLowBitMask">Input low bit mask. like as (MSB)"0000 0000 0000 0000"(LSB)</param>
            <param name="inputHightBitMask">Input high bit mask. like as (MSB)"0000 0000 0000 0000"(LSB)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16Cond.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16Cond.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16Cond.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16Cond">
            <summary>
            EntityWriteDataExtCond entity
            </summary>
            <remarks>
            16 bits digital input and output at EXTENSION 1 port when input condition has matched. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16Cond.InputLowBitMask">
            <summary>
            Input low bit mask 
            </summary>
            <remarks>
            0: Don't Care. <br/>
            For example: (MSB) 0000 0000 0000 0000 (LSB) <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16Cond.InputHighBitMask">
            <summary>
            Input high bit mask
            </summary>
            <remarks>
            0: Don't Care. <br/>
            For example: (MSB) 0000 0000 0000 0000 (LSB) <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16Cond.OutputBitMask">
            <summary>
            Outbit bit mask 
            </summary>
            <remarks>
            0: Don't Care. <br/>
            For example: (MSB) 0000 0000 0000 0000 (LSB) <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16Cond.OutputSignal">
            <summary>
            Output bit level
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16Cond.#ctor">
            <summary>
            Constructor
            </summary>
            <remarks>
            Used with 16 bits digital input and output at EXTENSION 1 port. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16Cond.#ctor(System.String,System.String,System.String,SpiralLab.Sirius2.Scanner.Rtc.SignalEdges)">
            <summary>
            Constructor
            </summary>
            <remarks>
            Used with 16 bits digital input and output at EXTENSION 1 port. <br/>
            </remarks>
            <param name="inputLowBitMask">Input low bit mask. like as (MSB)"0000 0000 0000 0000"(LSB)</param>
            <param name="inputHightBitMask">Input high bit mask. like as (MSB)"0000 0000 0000 0000"(LSB)</param>
            <param name="outputBitMask">Output bit mask. like as (MSB)"0000 0000 0000 0000"(LSB)</param>
            <param name="outputLevel"><c>SignalEdges</c> for output level when condition has matched.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16Cond.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16Cond.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16Cond.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16">
            <summary>
            EntityWriteDataExt16 entity
            </summary>
            <remarks>
            16 bits digital output at EXTENSION 1 port
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16.BitPosition">
            <summary>
            Bit position (0~15)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16.bitPosition">
            <summary>
            Bit position (0~15)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16.BitName">
            <summary>
            Output bit name
            </summary>
            <remarks>
            Used with <c>Config.DOut_RtcExtension1Port</c>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16.OutputValue">
            <summary>
            Output value
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16.outputValue">
            <summary>
            Output value
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16.#ctor(System.UInt32,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="bitPosition">Bit postion: 0~15</param>
            <param name="onOff">Output value: on/off</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityWriteData">
            <summary>
            EntityWriteData entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityWriteData.OutputChannel">
            <summary>
            <c>ExtensionChannels</c>
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityWriteData.outputChannel">
            <summary>
            <c>ExtensionChannels</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityWriteData.OutputValue">
            <summary>
            Output value
            </summary>
            <remarks>
            double: Analog: ~10
            uint: DO: ~255(8bits), ~65535(16bits)
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityWriteData.outputValue">
            <summary>
             Output value
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteData.#ctor(SpiralLab.Sirius2.Scanner.Rtc.ExtensionChannels,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="channel"><c>ExtensionChannels</c></param>
            <param name="data">Analog: ~10 or D.Out: ~255(8bits), ~65535(16bits)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteData.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteData.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteData.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityWriteData.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityZDelta">
            <summary>
            EntityZDDelta entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityZDelta.ZDelta">
            <summary>
            Z delta (mm)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityZDelta.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityZDelta.#ctor(System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="zDelta">Z delta (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityZDelta.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityZDelta.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityZDelta.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityZDelta.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityZDefocus">
            <summary>
            EntityZDefocus entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityZDefocus.ZDefocus">
            <summary>
            Time (msec)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityZDefocus.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityZDefocus.#ctor(System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="zDefocus">Z defocus (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityZDefocus.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityZDefocus.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityZDefocus.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityZDefocus.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityCurve">
            <summary>
            EntityCurve entity
            </summary>
            <remarks>
            Degree 2: Conic bezier
            Degree 3: Cubic bezier
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.Start">
            <summary>
            Start X,Y (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.Control1">
            <summary>
            Control1 X,Y (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.Control2">
            <summary>
            Control2 X,Y (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.End">
            <summary>
            End X,Y (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.Degree">
            <summary>
            Degree (Conic: 2, Cubic: 3)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCurve._Start">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCurve._Control1">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCurve._Control2">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCurve._End">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.#ctor(OpenTK.Vector2,OpenTK.Vector2,OpenTK.Vector2)">
            <summary>
            Constructor
            </summary>
            <param name="start">Start x,y</param>
            <param name="control">Control x,y</param>
            <param name="end">End x,y</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.#ctor(OpenTK.Vector2,OpenTK.Vector2,OpenTK.Vector2,OpenTK.Vector2)">
            <summary>
            Constructor
            </summary>
            <param name="start">Start x,y</param>
            <param name="control1">Control1 x,y</param>
            <param name="control2">Control2 x,y</param>
            <param name="end">End x,y,z</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.Explode">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.ToPolylines">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.HitTest(SpiralLab.Sirius2.Winforms.IView,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.Reverse">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCurve.Clip(SpiralLab.Sirius2.Winforms.Entity.BoundingBox)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.Barcode2DCells">
            <summary>
            BarcodeCells
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Barcode2DCells.Dots">
            <summary>
            Dots
            </summary>
            <remarks>
            Usable with <c>IRtcMoF</c>. <br/>
            Not usable with <c>IRtcAutoLaserControl</c>, <c>IRtcWobbel</c> or <c>IRtcSkywriting</c>. <br/>
            Activated LASER ON signal during rastering and modulated output pulse width by each pixels time. <br/>
            Pixel pulses (at the LASER1 port) directly by the PulseLength parameter, not the LASERON signal. <br/>
            <c>Rtc6SyncAxis</c> is not supported <c>Dots</c> cell type. Because <c>Rtc6SyncAxis</c> is not supported <c>IRtcRaster</c> interface. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Barcode2DCells.Lines">
            <summary>
            Lines
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Barcode2DCells.Outline">
            <summary>
            Outline only
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Barcode2DCells.Circles">
            <summary>
            Circles
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Barcode2DCells.Hatch">
            <summary>
            Hatch
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase">
            <summary>
            EntityBarcode2DBase
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.IsInvertCell">
            <summary>
            Invert Cell 
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.isInvertCell">
            <summary>
             Invert cell
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.Cell">
            <summary>
            <c>BarcodeCells</c>
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.cell">
            <summary>
            <c>BarcodeCells</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.CellDot">
            <summary>
            <c>CellDot</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.CellLine">
            <summary>
            <c>CellLine</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.CellOutLine">
            <summary>
            <c>CellOutLine</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.CellCircle">
            <summary>
            <c>CellCircle</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.CellHatch">
            <summary>
            <c>CellHatch</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.Width">
            <summary>
            Width (mm)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.width">
            <summary>
            Width (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.Height">
            <summary>
            Height (mm)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.height">
            <summary>
            Height (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.IsFixedAspectRatio">
            <summary>
            Fixed Aspect Ratio
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.isFixedAspectRatio">
            <summary>
            Fixed Aspect Ratio
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.SourceText">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.sourceText">
            <summary>
            Source text
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.IsConvertedText">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.isConvertedText">
            <summary>
            Enable(or disable) converted text data 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.ConvertedText">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.IsClosed">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase._SourceText">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase._ConvertedText">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.glBufferDot">
            <summary>
            GLBuffer for CellDot
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.entityOutline">
            <summary>
            Array of <c>EntityPolyline2D</c> for CellOutline
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.entityLines">
            <summary>
            Array of <c>EntityLine</c> for CellLine
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.entityHatch">
            <summary>
            <c>EntityGroup</c> for CellHatch
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.Hatch(SpiralLab.Sirius2.Winforms.Entity.HatchModes,SpiralLab.Sirius2.Winforms.Entity.HatchJoints,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.Regen">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.dotMatrix">
            <summary>
            2x2 dot matrix of barcode
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.RegenEncode">
            <summary>
            Regen(or encode) bit matrix of barcode
            </summary>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.RegenCellOutline">
            <summary>
            Regen cell for outline
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.RegenCellLine">
            <summary>
            Regen cell for line
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.RegenCellHatch">
            <summary>
            Regen cell for hatch
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.ToPolylines">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode2DBase.PropertyVisibility(SpiralLab.Sirius2.Scanner.Rtc.IRtc)">
            <summary>
            Property visibility for <c>IRtc</c>
            </summary>
            <param name="rtc"><c>IRtc</c></param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.IMarkerable">
            <summary>
            IMarkerable interface
            <code>
            var line = EntityFactory.CreateLine(new Vector2(-40, 40), new Vector2(40, 40));
            line.Regen();
            ...
            var rtc = siriusEditorUserControl1.Rtc;
            var marker = siriusEditorUserControl1.Marker;
            bool success = true;
            success &amp;= rtc.ListBegin();
            line.Mark(marker);
            success &amp;= rtc.ListEnd();
            success &amp;= rtc.ListExecute(true);
            </code>
            </summary>
            <remarks>
            Markerable means, support laser processing by list commands within <see cref="M:SpiralLab.Sirius2.Scanner.Rtc.IRtc.ListBegin(SpiralLab.Sirius2.Scanner.Rtc.ListTypes)">IRtc.ListBegin</see> and <see cref="M:SpiralLab.Sirius2.Scanner.Rtc.IRtc.ListEnd">IRtc.ListEnd</see>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IMarkerable.Repeats">
            <summary>
            Repeat counts when do <see cref="M:SpiralLab.Sirius2.Winforms.Entity.IMarkerable.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">Mark</see>
            </summary>
            <remarks>
            Default: 1 (Must be > 0)
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IMarkerable.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <summary>
            Do mark <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
            <remarks>
            Consider as its working <see cref="M:SpiralLab.Sirius2.Winforms.Entity.IMarkerable.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">Mark</see> within async threads by <see cref="T:SpiralLab.Sirius2.Winforms.Marker.IMarker">IMarker</see>. <br/>
            </remarks>
            <param name="marker"><c>IMarker</c></param>
            <returns>Success or failed<br/>If return failed, marker would be stopped(or aborted) immediately. <br/></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.IRenderable">
            <summary>
            IRenderable interface
            <code>
            var line = EntityFactory.CreateLine(new Vector2(-40, 40), new Vector2(40, 40));
            line.Regen();
            var view = siriusEditorUserControl1.View;
            line.Render(view);
            </code>
            
            <code>
            var document = siriusEditorUserControl1.Document;
            var line = EntityFactory.CreateLine(new Vector2(-40, 40), new Vector2(40, 40));
            // Rendered at view by automatically
            document.ActAdd(line);
            </code>
            </summary>
            <remarks>
            Renderable means, support render(or hittest) entity to show at view by <c>OpenTK</c>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IRenderable.View">
            <summary>
            Rendered target <see cref="T:SpiralLab.Sirius2.Winforms.IView">IView</see>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IRenderable.Render(SpiralLab.Sirius2.Winforms.IView)">
            <summary>
            Do render <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> at <see cref="T:SpiralLab.Sirius2.Winforms.IView">IView</see>. <br/>
            </summary>
            <param name="view"><c>IView</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IRenderable.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <summary>
            Do hittest(or intersect test) (like as mouse click) for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> at <see cref="T:SpiralLab.Sirius2.Winforms.IView">IView</see>
            </summary>
            <remarks>
            Used with pixel coordinate system(px). <br/>
            </remarks>
            <param name="view"><c>IView</c></param>
            <param name="mousePosition">Clicked mouse position by <c>System.Drawing.Point</c></param>
            <param name="hittedEntity">Hitted <c>IEntity</c> if succeeded</param>
            <returns>Success of hit test or not</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IRenderable.HitTest(SpiralLab.Sirius2.Winforms.IView,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <summary>
            Do hittest(or intersect test) (like as rectangle area) for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> at <see cref="T:SpiralLab.Sirius2.Winforms.IView">IView</see>
            </summary>
            <remarks>
            Used with x,y coordinate system at Z=0 plane(mm). <br/>
            </remarks>
            <param name="view"><c>IView</c></param>
            <param name="start">Started location (mm)</param>
            <param name="end">Ended location (mm)</param>
            <param name="hittedEntity">Hitted <c>IEntity</c> if succeeded</param>
            <returns>Success of hit test or not</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.IExplodable">
            <summary>
            IExplodable interface
            <code>
            EntityFactory.CreateDxf(Path.Combine("sample", "BIKE.dxf"), out var dxf);
            dxf.Regen();
            IEntity[] subEntities = dxf.Explode();
            foreach(var entity in subEntities)
            {
                // something
            }
            </code>
            
            <code>
            var document = siriusEditorUserControl1.Document;
            if (document.FindByName("EntityName", out var foundedEntity))
            {
                document.ActExplode(foundedEntity);
            }
            </code>
            </summary>
            <remarks>
            Explodable means, possible to explode entity to more primitive type of entities. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IExplodable.Explode">
            <summary>
            Explode <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> into array of sub-<see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
            <returns>Exploded array of <c>IEntity</c></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.IReversable">
            <summary>
            IReversable interface
            <code>
            EntityFactory.CreateDxf(Path.Combine("sample", "BIKE.dxf"), out var dxf);
            dxf.Regen();
            dxf.Reverse();
            </code>
            <code>
            var document = siriusEditorUserControl1.Document;
            if (document.FindByName("BIKE.dxf", out var foundedEntity))
            {
                document.ActReverse();
            }
            </code>
            </summary>
            <remarks>
            Reversable means, possible to reverse internal order of marks at entity. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IReversable.Reverse">
            <summary>
            Reverse internal path order
            </summary>
            <returns>Success or not</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.IExtractPolyline">
            <summary>
            IExtractPolyline
            <code>
            EntityFactory.CreateDxf(Path.Combine("sample", "BIKE.dxf"), out var dxf);
            dxf.Regen();
            EntityPolyline2D[] polylines = dxf.ToPolylines();
            foreach(var polyline in polylines)
            {
                // something
            }
            </code>
            
            <code>
            var document = siriusEditorUserControl1.Document;
            if (document.FindByName("BIKE.dxf", out var foundedEntity))
            {
                if (document.ActExtractPolylines(foundedEntity, out EntityPolyline2D[] polylines))
                {
                    foreach(var polyline in polylines)
                    {
                       // something
                    }
                }
            }
            </code>
            </summary>
            <remarks>
            Extract internal data into array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D">EntityPolyline2D</see>. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IExtractPolyline.ToPolylines">
            <summary>
            Extract array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D">EntityPolyline2D</see>
            </summary>
            <remarks>
            Returned <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D">EntityPolyline2D</see> are transformed(or applied) by model matrix.
            </remarks>
            <returns>Array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D">EntityPolyline2D</see></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.IClipRegion">
            <summary>
            IClipRegion interface
            <code>
            
            </code>
            </summary>
            <remarks>
            Clip rectangle region 
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IClipRegion.Clip(SpiralLab.Sirius2.Winforms.Entity.BoundingBox)">
            <summary>
            Clipping(or divide) entity by <see cref="T:SpiralLab.Sirius2.Winforms.Entity.BoundingBox">BoundingBox</see> area
            </summary>
            <param name="bbox">Rectangle area</param>
            <returns>Array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.IExpandable">
            <summary>
            IExpandable interface
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var polyline = EntityFactory.CreatePolyline2D( ... );
            polyline.Regen();
            var expandedPolylines = polyline.Expand(HatchJoints.Round, 0.5);
            var shrinkedPolylines = polyline.Expand(HatchJoints.Miter, -0.5);
            document.ActAdd(expandedPolylines);
            document.ActAdd(shrinkedPolylines);
            </code>
            </summary>
            <remarks>
            Expandable means, possible to expand(or shrink) internal mark pathes. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IExpandable.Expand(SpiralLab.Sirius2.Winforms.Entity.HatchJoints,System.Double)">
            <summary>
            Create array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D">EntityPolyline2D</see> by expand(or shrink) distance
            </summary>
            <remarks>
            Expand or shrink <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D">EntityPolyline2D</see> from <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>. <br/>
            Positive(+) distance : Expand <br/>
            Negative(-) distance : Shrink <br/>
            </remarks>
            <param name="hatchJoint"><c>HatchJoints</c></param>
            <param name="expandDistance">Expand distance (mm)</param>
            <returns>Array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D">EntityPolyline2D</see></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.IArrayOfOffset">
            <summary>
            IArrayOfOffset interface
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IArrayOfOffset.Offsets">
            <summary>
            Array of offset (dx, dy, dz and angle z)
            <code>
            var offsets = new SpiralLab.Sirius2.Mathematics.Offset[] 
            {
                new Offset(0, 0, 0),
                new Offset(10, 0, 0),
            };
            entity.Offsets = offets;
            </code>
            </summary>
            <remarks>
            Default count: 1 <br/>
            Default value: <see cref="P:SpiralLab.Sirius2.Mathematics.Offset.Zero">SpiralLab.Sirius2.Mathematics.Offset.Zero</see>. <br/>
            If count is 1 and value is Offset.Zero, it does no effect at all. <br/>
            </remarks>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.HatchModes">
            <summary>
            Hatch modes
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.HatchModes.Line">
            <summary>
            Line (like as |||| or ////)
            </summary>
            <remarks>
            Used with <c>HatchJoints</c>, <c>isZigZag</c>, <c>angle</c>, <c>internal</c>, <c>exclude</c>, <c>shift</c> values.
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.HatchModes.CrossLine">
            <summary>
            Cross Lines (like as #####)
            </summary>
            <remarks>
            Used with <c>HatchJoints</c>, <c>isZigZag</c>, <c>angle</c>, <c>angle2</c>, <c>internal</c>, <c>exclude</c>, <c>shift</c> values.
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.HatchModes.Polygon">
            <summary>
            Polygon (like as expand or shrink)
            </summary>
            <remarks>
            Used with <c>HatchJoints</c>, <c>internal</c> values. <br/>
            Adjust <c>Config.DivideArcToLinesDistance</c> value to reduce vertices at arc path. <br/>
            Must be aware winding direction are same within polylines. <br/>
            This hatch type leads to CPU burst. so need to consider optimized calls. <br/> 
            </remarks>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.HatchJoints">
            <summary>
            Hatch joints
            <seealso href="http://www.angusj.com/delphi/clipper/documentation/Docs/Units/ClipperLib/Types/JoinType.htm">Joint type</seealso><br/>
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.HatchJoints.Square">
            <summary>
            Square joint
            </summary>
            <remarks>
            Squaring is applied uniformally at all convex edge joins. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.HatchJoints.Round">
            <summary>
            Square round
            </summary>
            <remarks>
            While flattened paths can never perfectly trace an arc, they are approximated by a series of arc chords.<br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.HatchJoints.Miter">
            <summary>
            Square miter
            </summary>
            <remarks>
            For any given edge join, when miter offsetting would exceed that maximum distance, 'square' joining is applied.<br/>
            </remarks>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.IHatchable">
            <summary>
            IHatchable interface
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var rectangle = EntityFactory.CreateRectangle(new Vector2(10, -10), 10, 5);
            document.ActAdd(rectangle);
            var rectanglehatch = rectangle.Hatch(HatchModes.Polygon, HatchJoints.Miter, false, 0, 0, 0.2f, 0, 0);
            document.ActAdd(rectanglehatch);
            </code>
            </summary>    
            <remarks>
            Possible to hatch within closed shapes only. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IHatchable.IsClosed">
            <summary>
            Is closed path or not
            </summary>
            <remarks>
            Determined by all child of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> are closed or not. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IHatchable.Hatch(SpiralLab.Sirius2.Winforms.Entity.HatchModes,SpiralLab.Sirius2.Winforms.Entity.HatchJoints,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Do hatch within closed path at <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
            <remarks>
            Used with internal array of <c>EntityPolyline</c> from <c>IEntity</c>. <br/>
            Used with <c>HatchJoints</c>, <c>isZigZag</c>, <c>angle</c>, <c>internal</c>, <c>exclude</c>, <c>shift</c> values for <c>HatchModes.Line</c> mode. <br/>
            Used with <c>HatchJoints</c>, <c>isZigZag</c>, <c>angle</c>, <c>angle2</c>, <c>internal</c>, <c>exclude</c>, <c>shift</c> values for <c>HatchModes.CrossLine</c> mode. <br/>
            Used with <c>HatchJoints</c>, <c>internal</c> values for <c>HatchModes.Polygon</c> mode. <br/>
            </remarks>
            <param name="hatchMode"><c>HatchModes</c></param>
            <param name="hatchJoint"><c>HatchJoints</c></param>
            <param name="isZigZag">ZigZag</param>
            <param name="angle">Angle 1st</param>
            <param name="angle2">Angle 2nd for <c>CrossLine</c></param>        
            <param name="interval">Interval (mm)</param>
            <param name="exclude">Exclude (mm)</param>        
            <param name="shift">Shift offset (mm)</param>  
            <returns>Hatched <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityGroup">EntityGroup</see> entity</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible">
            <summary>
            ITextConvertible interface
            </summary>
            <remarks>
            TextConvertible means, possible to change(or convert) source text data into converted data. <br/>
            Support text data at entity (like as barcode or text) can be converted format by event handler. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible.IsConvertedText">
            <summary>
            Enable(or disable) conversion of text data 
            <code>
            marker.OnTextConvert += Text_OnTextConvert;
            ...
            private string Text_OnTextConvert(IMarker marker, ITextConvertible textConvertible)
            {
                var entity = textConvertible as IEntity;
                switch (entity.Name)
                {
                    case "TextEntityName1":
                        // Example for "yyyyMMdd HH:mm:ss"
                        return DateTime.Now.ToString("yyyyMMdd HH:mm:ss");
                    default:
                        return textConvertible.SourceText;
                }                
            }
            </code>
            </summary>
            <remarks>
            To convert source(or input) text data by user, should be add <see cref="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnTextConvert">IMarker.OnTextConvert</see> event handler at first. <br/>
            <see cref="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnTextConvert">IMarker.OnTextConvert</see> event would be fired before do mark by <see cref="M:SpiralLab.Sirius2.Winforms.Entity.IMarkerable.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">IMarkerable.Mark</see> at <see cref="T:SpiralLab.Sirius2.Winforms.Marker.IMarker">IMarker</see>. <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText">EntityCircularText</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityImageText">EntityImageText</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix">EntityDataMatrix</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode">EntityQRCode</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417">EntityPDF417</see> entities. <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityText">EntityText</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText">EntitySiriusText</see>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible.SourceText">
            <summary>
            Source text data
            </summary>
            <remarks>
            If <see cref="P:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible.IsConvertedText">IsConvertedText</see> is <c>False</c>, then <see cref="P:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible.ConvertedText">ConvertedText</see> value set as <see cref="P:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible.SourceText">SourceText</see>. <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText">EntityCircularText</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityImageText">EntityImageText</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix">EntityDataMatrix</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode">EntityQRCode</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417">EntityPDF417</see> entities. <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityText">EntityText</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText">EntitySiriusText</see>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible.ConvertedText">
            <summary>
            Converted text data
            </summary>
            <remarks>
            If <see cref="P:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible.IsConvertedText">IsConvertedText</see> is <c>True</c>, <see cref="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnTextConvert">IMarker.OnTextConvert</see> event will be fired and modified <see cref="P:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible.ConvertedText">ConvertedText</see> as returned value when do <see cref="M:SpiralLab.Sirius2.Winforms.Entity.IMarkerable.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">IMarkerable.Mark</see> . <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText">EntityCircularText</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityImageText">EntityImageText</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix">EntityDataMatrix</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode">EntityQRCode</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417">EntityPDF417</see> entities. <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityText">EntityText</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText">EntitySiriusText</see>. <br/>
            </remarks>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.ITextRegisterable">
            <summary>
            ITextRegisterable interface
            </summary>
            <remarks>
            Register(or download) character set into RTC buffer. <br/>
            Text data (like as <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText">EntitySiriusText</see>) can be register (or download) into <see cref="T:SpiralLab.Sirius2.Scanner.Rtc.IRtcCharacterSet">IRtcCharacterSet</see>. <br/>
            Do re-register(or download) again whenever text parameters like as font, size, rotate, and scale has modified. <br/>
            Used with RTC5, RTC6 only. <br/>
            Recommended to use with <see cref="T:SpiralLab.Sirius2.Scanner.Rtc.IRtcMoF">IRtcMoF</see> by external /START trigger. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.ITextRegisterable.IsRegistered">
            <summary>
            Is need to registered(or downloaded) font data into RTC buffer 
            </summary>
            <remarks>
            Do NOT edit. Used by internally. <br/>
            Whenever do <see cref="M:SpiralLab.Sirius2.Winforms.Marker.IMarker.Start">IMarker.Start</see>, trying to register <see cref="T:SpiralLab.Sirius2.Winforms.Entity.ITextRegisterable">ITextRegisterable</see> entity if <see cref="P:SpiralLab.Sirius2.Winforms.Entity.ITextRegisterable.IsRegistered">IsRegistered</see> is <c>False</c>. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.ITextRegisterable.Register(SpiralLab.Sirius2.Winforms.Marker.IMarker,SpiralLab.Sirius2.Scanner.Rtc.CharacterSets)">
            <summary>
            Register(or download) text character set into RTC
            </summary>
            <remarks>
            If <see cref="T:SpiralLab.Sirius2.Winforms.Entity.ITextRegisterable">ITextRegisterable</see> entity has regened(or modified), it should be registered again. <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Scanner.Rtc.IRtcCharacterSet">IRtcCharacterSet</see>. <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText">EntityCharacterSetText</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText">EntitySiriusCharacterSetText</see> entities. <br/>
            Used with RTC5, RTC6 only. <br/>
            Character set buffer at RTC would be overwritten. <br/>
            </remarks>
            <param name="marker"><c>IMarker</c></param>
            <param name="characterSet">Target <c>CharacterSets</c></param>
            <returns>Successs or failed</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.ICalibration3D">
            <summary>
            ICalibration3D interface
            </summary>
            <remarks>
            Do 3D scanner field correction by SCANLAB's calibration tool. <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPlane">EntityPlane</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityCone">EntityCone</see>, <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud">EntityPointsCloud</see> entities. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.ICalibration3D.Calibration3D(SpiralLab.Sirius2.Scanner.Rtc.IRtc,System.String@,System.String@,SpiralLab.Sirius2.Scanner.Rtc.SlscErrorCodes@)">
            <summary>
            Convert 3D scanner field correction 
            </summary>
            <remarks>
            Input correction file: Used source correction file at <c>Rtc.CorrectionFiles[0].FileName</c>. <br/>
            Output correction file: If calibration had succeeded, converted correction table has load and selected by automatically at last table location. <br/>
            Notify <see cref="E:SpiralLab.Sirius2.Winforms.Config.OnCalibration3D">Config.OnCalibration3D</see> event. <br/>
            </remarks>
            <param name="rtc"><c>IRtc</c></param>
            <param name="inputCtFileName">Input correction filename</param>
            <param name="newCtFileName">Created new correction filename if succeeded</param>
            <param name="returnCode">Error code if failed</param>
            <returns>Success or failed</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.Barcode1DFormats">
            <summary>
            Barcode1DFormats
            </summary>
            <remarks>
            For 1-dimensional barcode
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Barcode1DFormats.CODABAR">
            <summary>
            CODABAR 1D format
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Barcode1DFormats.Code39">
            <summary>
            Code 39 1D format
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Barcode1DFormats.Code93">
            <summary>
            Code 93 1D format
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Barcode1DFormats.Code128">
            <summary>
            Code 128 1D format
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Barcode1DFormats.EAN8">
            <summary>
            EAN-8 1D format
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Barcode1DFormats.EAN13">
            <summary>
            EAN-13 1D format
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Barcode1DFormats.UPCA">
            <summary>
            UPC-A 1D format
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Barcode1DFormats.UPCE">
            <summary>
            UPC-E 1D format
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Barcode1DFormats.UPCEAN_EXT">
            <summary>
            UPC/EAN extension format. Not a stand-alone format
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D">
            <summary>
            EntityBarcode entity
            </summary>
            <remarks>
            1D barcode
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.Format">
            <summary>
            Barcode format
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.DotFactor">
            <summary>
            Dot factor
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.dotFactor">
            <summary>
            Dot factor
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.IsInvertCell">
            <summary>
            Invert Cell 
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.isInvertCell">
            <summary>
             Invert cell
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.IsTextDataGS1">
            <summary>
            GS1 format or not
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.isTextDataGS1">
            <summary>
            GS1 format or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.IsZigZag">
            <summary>
            ZigZag
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.isZigZag">
            <summary>
            ZigZag
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.IsReverse">
            <summary>
            Reverse
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.isReverse">
            <summary>
            Reverse
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.Width">
            <summary>
            Width (mm)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.width">
            <summary>
            Width (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.Height">
            <summary>
            Height (mm)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.height">
            <summary>
            Height (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.LinePitch">
            <summary>
            Line Pitch (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.SourceText">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.sourceText">
            <summary>
            Source text
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.IsConvertedText">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.isConvertedText">
            <summary>
            Enable(or disable) converted text data 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.ConvertedText">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D._SourceText">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D._ConvertedText">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.entityLines">
            <summary>
            Array of <c>EntityLine</c> for CellLine
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.#ctor(System.String,SpiralLab.Sirius2.Winforms.Entity.Barcode1DFormats,System.Int32,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="text">Text data</param>
            <param name="format"><c>Barcode1DFormats</c></param>
            <param name="dotFactor">Cell dot factor (1*1, 2*2, ...)</param>
            <param name="width">Width (mm)</param>
            <param name="height">Height (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.Regen">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.dotMatrix">
            <summary>
            2x2 dot matrix of barcode
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.RegenEncode">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.RegenCellLine">
            <summary>
            Regen cell for line
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityCone">
            <summary>
            EntityCone entity
            </summary>
            <remarks>
            If <c>RadiusReference</c> and <c>RadiusEnd</c> are equals, assumed as cylinderic shape. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCone.Repeats">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCone.In">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCone.Out">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCone.Mode">
            <summary>
            <c>PolygonMode</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCone.Reference">
            <summary>
            Reference(or surface) point on the cone/cylinder (x,y,z) 
            </summary>
            <remarks>
            The reference point is a point on the cylinder mantle(or lateral surface of the cone) and represents the new coordinate origin of the target surface.
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCone.Direction">
            <summary>
            Direction vector of the cone/cylinder axis
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCone.RadiusReference">
            <summary>
            Radius of the cone/cylinder at the reference point (mm)
            </summary>
            <remarks>
            If <c>RadiusReference</c> and <c>RadiusEnd</c> are not equals, assumed as cone shape. <br/>
            If <c>RadiusReference</c> and <c>RadiusEnd</c> are equals, assumed as cylinderic shape. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCone.RadiusEnd">
            <summary>
            Radius of the cone/cylinder at the end point (mm)
            </summary>
            <remarks>
            If <c>RadiusReference</c> and <c>RadiusEnd</c> are not equals, assumed as cone shape. <br/>
            If <c>RadiusReference</c> and <c>RadiusEnd</c> are equals, assumed as cylinderic shape. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCone.RadiusStart">
            <summary>
            Radius of the cone/cylinder at the start point (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCone.Length">
            <summary>
            Length (mm)
            </summary>
            If <c>RadiusReference</c> and <c>RadiusEnd</c> are not equals, assumed as cone shape. <br/>
            If <c>RadiusReference</c> and <c>RadiusEnd</c> are equals, assumed as cylinderic shape. and generated negative(or parallel) <c>Length</c> area by automatically. <br/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCone._Reference">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCone._Direction">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCone.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCone.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <remarks>
            If <c>RadiusReference</c> and <c>RadiusEnd</c> are equals, assumed as cylinderic shape. 
            </remarks>
            <param name="radiusReference">Radius at reference location (mm)</param>
            <param name="radiusEnd">Radius at end location (mm)</param>
            <param name="length">Length (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCone.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCone.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCone.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCone.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCone.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCone.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCone.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCone.Calibration3D(SpiralLab.Sirius2.Scanner.Rtc.IRtc,System.String@,System.String@,SpiralLab.Sirius2.Scanner.Rtc.SlscErrorCodes@)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417">
            <summary>
            EntityPDF417 entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417.QuiteZone">
            <summary>
            Quite Zone
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417.quiteZone">
            <summary>
            Quite zone
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417.IsTextDataGS1">
            <summary>
            GS1 format or not
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417.isTextDataGS1">
            <summary>
            GS1 format or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417.Encoding">
            <summary>
            Encoding (Default: UTF-8)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417.encoding">
            <summary>
            Encoding
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417.IsCompact">
            <summary>
            Compact format or not
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417.isCompact">
            <summary>
            Compact format or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417.Px">
            <summary>
            X Pixels
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417.Py">
            <summary>
            Y Pixels
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417.#ctor(System.String,SpiralLab.Sirius2.Winforms.Entity.Barcode2DCells,System.Int32,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="text">Text</param>
            <param name="cell"><c>Barcode2DCells</c></param>
            <param name="dotFactor">Cell dot factor (1*1, 2*2, ...)</param>
            <param name="width">Width (mm)</param>
            <param name="height">Height (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417.RegenEncode">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityPlane">
            <summary>
            EntityPlane entity
            </summary>
            <remarks>
            Recalculates a 3D-Correction table for a new user-defined target plane that may be shifted, tilted, and rotated. <br/>
            The new target plane must be provided in parameter form with a reference point and two direction vectors. <br/>
            Depending on how much shifted and tilted the new target plane is compared to the original target plane, the Correction file may not be useful anymore for 3d-points that are not in the target plane. <br/>
            This cannot be remedied through further 3d-correction. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.Repeats">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.In">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.Out">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.Mode">
            <summary>
            <c>PolygonMode</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.Reference">
            <summary>
            The reference point represents the new origin of the target plane, while the direction vectors represent the new X- and Y- directions in the target plane. 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.DirectionX">
            <summary>
            X direction of the target plane
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.DirectionY">
            <summary>
            Y direction of the target plane
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.Width">
            <summary>
            Width (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.Height">
            <summary>
            Height (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPlane._Reference">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPlane._DirectionX">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPlane._DirectionY">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.#ctor(OpenTK.Vector3)">
            <summary>
            Constructor
            </summary>
            <param name="reference">The reference point represents the new origin of the target plane, while the direction vectors represent the new X- and Y- directions in the target plane</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPlane.Calibration3D(SpiralLab.Sirius2.Scanner.Rtc.IRtc,System.String@,System.String@,SpiralLab.Sirius2.Scanner.Rtc.SlscErrorCodes@)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode">
            <summary>
            EntityQRCode entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.QuiteZone">
            <summary>
            Quite Zone
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.quiteZone">
            <summary>
            Quite Zone
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.IsTextDataGS1">
            <summary>
            GS1 format or not
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.isTextDataGS1">
            <summary>
            GS1 format or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.Encoding">
            <summary>
            Encoding (Default: UTF-8)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.encoding">
            <summary>
            Encoding
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.QrVersion">
            <summary>
            QR code version
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.qrVersion">
            <summary>
            QR code version
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.Px">
            <summary>
            Width(X) Pixels
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.px">
            <summary>
            X Pixels
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.Py">
            <summary>
            Height(Y) Pixels
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.py">
            <summary>
            Y Pixels
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.#ctor(System.String,SpiralLab.Sirius2.Winforms.Entity.Barcode2DCells,System.Int32,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="text">Text data</param>
            <param name="cell"><c>Barcode2DCells</c></param>
            <param name="dotFactor">Cell dot factor (1*1, 2*2, ...)</param>
            <param name="width">Width (mm)</param>
            <param name="height">Height (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode.RegenEncode">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix">
            <summary>
            EntityDataMatrix entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix.QuiteZone">
            <summary>
            Quite Zone
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix.quiteZone">
            <summary>
            Quite Zone
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix.IsTextDataGS1">
            <summary>
            GS1 format or not
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix.isTextDataGS1">
            <summary>
            GS1 format or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix.IsCompactEncoding">
            <summary>
            CompactEncoding or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix.IsC40">
            <summary>
            C40 or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix.IsSquare">
            <summary>
            Square
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix.Px">
            <summary>
            X Pixels
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix.px">
            <summary>
            X Pixels
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix.Py">
            <summary>
            Y Pixels
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix.py">
            <summary>
            Y Pixels
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix.#ctor(System.String,SpiralLab.Sirius2.Winforms.Entity.Barcode2DCells,System.Int32,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="text">Text data</param>
            <param name="cell"><c>Barcode2DCells</c></param>
            <param name="dotFactor">Cell dot factor (1*1, 2*2, ...)</param>
            <param name="width">Width (mm)</param>
            <param name="height">Height (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix.RegenEncode">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText">
            <summary>
            EntitySiriusCharacterSetText entity
            </summary>
            <remarks>
            Allowed glyph ascii code range from: 0 ~ <c>Config.SiriusFontAsciiMax</c>. <br/>
            Customizable font file format: cxf, lff <br/>
            <list type="utilities">
            <item><description>ttf2lff : https://github.com/LibreCAD/LibreCAD/tree/master/tools/ttf2lff </description></item>
            <item><description>ttf2lff : https://github.com/Rallaz/LibreCAD/tree/dwgsupp2/tools/ttf2lff </description></item>
            <item><description>jhf2lff : https://github.com/Rallaz/LibreCAD/blob/dwgsupp2/tools/ttf2lff/lfftransform.cpp </description></item>
            <item><description>jhf2c : http://sol.gfxile.net/hershey/hershey.cpp </description></item>
            </list>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.FontName">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.CharacterSetFormat">
            <summary>
            <c>CharacterSetFormats</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.CharacterSetDate">
            <summary>
            <c>CharacterSetDate</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.CharacterSetSerialNo">
            <summary>
            <c>CharacterSetSerialNo</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.CharacterSetTime">
            <summary>
            <c>CharacterSetTime</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.ConvertedText">
            <summary>
            Converted text data
            </summary>
            <remarks>
            <c>ConvertedText</c> is affected by <c>CharacterSetFormat</c> and set by internally. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.Height">
            <summary>
            Text height
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.height">
            <summary>
            Text height
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.LetterSpace">
            <summary>
            Letter space way
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.LetterSpacing">
            <summary>
            Letter spacing (mm)
            </summary>
            <remarks>
            Used with gap between each glyphs. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.WordSpacing">
            <summary>
            Word spacing (mm)
            </summary>
            <remarks>
            Used with white space (' '). <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.IsRegistered">
            <inheritdoc/>  
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText._ConvertedText">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText._FontName">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.group">
            <summary>
            Array of <c>EntityPolyline2D</c>
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.characterSet">
            <summary>
            Registered <c>CharacterSet</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.#ctor(SpiralLab.Sirius2.Winforms.Entity.CharacterSetFormats,System.String,System.Double,SpiralLab.Sirius2.Winforms.Entity.LetterSpaces,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="format"><c>CharacterSetFormats</c></param>
            <param name="fontName">Font name</param>
            <param name="height">Height (mm)</param>
            <param name="characterSpace"><c>LetterSpaces</c></param>
            <param name="letterSpacing">Letter Spaceing (mm)</param>
            <param name="wordSpacing">Word Spaceing (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText.Register(SpiralLab.Sirius2.Winforms.Marker.IMarker,SpiralLab.Sirius2.Scanner.Rtc.CharacterSets)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.LetterSpaces">
            <summary>
            LetterSpaces
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.LetterSpaces.Variable">
            <summary>
            Variable
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.LetterSpaces.Fixed">
            <summary>
            Fixed
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText">
            <summary>
            EntitySiriusText entity
            </summary>
            <remarks>
            Used with customizable font format: cxf, lff. <br/>
            Allowed glyph ascii code range from: 0 ~ <c>Config.SiriusFontAsciiMax</c>. <br/>
            Font converter utilities: <br/>
            <list type="utilities">
            <item><description>ttf2lff: https://github.com/LibreCAD/LibreCAD/tree/master/tools/ttf2lff </description></item>
            <item><description>ttf2lff: https://github.com/Rallaz/LibreCAD/tree/dwgsupp2/tools/ttf2lff </description></item>
            <item><description>jhf2lff: https://github.com/Rallaz/LibreCAD/blob/dwgsupp2/tools/ttf2lff/lfftransform.cpp </description></item>
            <item><description>jhf2c: http://sol.gfxile.net/hershey/hershey.cpp </description></item>
            </list>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.FontName">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.SourceText">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.sourceText">
            <summary>
            Source text
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.IsConvertedText">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.isConvertedText">
            <summary>
            Enable(or disable) converted text data 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.ConvertedText">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.Height">
            <summary>
            Text height
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.height">
            <summary>
            Text height
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.TextVerticalAlignment">
            <summary>
            String vertical alignment
            </summary>
            <remarks>
            Default: Near
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.LetterSpace">
            <summary>
            Letter space way
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.LetterSpacing">
            <summary>
            Letter spacing (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.WordSpacing">
            <summary>
            Word spacing (mm)
            </summary>
            <remarks>
            Also, used with white space. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.LineSpacing">
            <summary>
            Line spacing (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.IsReversed">
            <summary>
            Reversed pathes or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText._SourceText">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText._ConvertedText">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText._FontName">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.group">
            <summary>
            Array of <c>EntityPolyline2D</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.#ctor(System.String,System.String,System.Double,System.Double,SpiralLab.Sirius2.Winforms.Entity.LetterSpaces,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="fontName">Font name</param>
            <param name="text">Text data</param>
            <param name="height">Height (mm)</param>
            <param name="wordSpacing">Word spaceing (mm)</param>
            <param name="letterSpace"><c>LetterSpaces</c></param>
            <param name="letterSpacing">Letter spaceing (mm)</param>
            <param name="lineSpacing">Line spaceing (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.Explode">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.Reverse">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.ToPolylines">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.HitTest(SpiralLab.Sirius2.Winforms.IView,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.TextCircularDirections">
            <summary>
            Text Circular Directions
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.TextCircularDirections.ClockWise">
            <summary>
            Clock wise
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.TextCircularDirections.CounterClockWise">
            <summary>
            Counter clock wise
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText">
            <summary>
            EntityCircularText entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText.SourceText">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText.TextHorizontalAlignment">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText.TextVerticalAlignment">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText.IsReversed">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText.Direction">
            <summary>
            Text circular direction
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText.Radius">
            <summary>
            Text radius
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText.radius">
            <summary>
            Text radius
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText.StartAngle">
            <summary>
            Text starting angle (°)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText.LetterSpacing">
            <summary>
            Letter spacing (mm)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText.#ctor(System.String,System.String,System.Drawing.FontStyle,System.Double,SpiralLab.Sirius2.Winforms.Entity.TextCircularDirections,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="fontName">Font name</param>
            <param name="text">Text data</param>
            <param name="style"><c>System.Drawing.FontStyle</c></param>
            <param name="height">Height (mm)</param>
            <param name="direction"><c>TextCircularDirections</c></param>
            <param name="radius">Radius (mm)</param>
            <param name="startAngle">Start angle (°)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText.RegenVertices">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText">
            <summary>
            EntityCharacterSetText entity
            </summary>
            <remarks>
            Used with installed system fonts. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.FontName">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.CharacterSetFormat">
            <summary>
            <c>CharacterSetFormats</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.CharacterSetDate">
            <summary>
            <c>CharacterSetDate</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.CharacterSetSerialNo">
            <summary>
            <c>CharacterSetSerialNo</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.CharacterSetTime">
            <summary>
            <c>CharacterSetTime</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.ConvertedText">
            <summary>
            Converted text data
            </summary>
            <remarks>
            <c>ConvertedText</c> is affected by <c>CharacterSetFormat</c> and set by internally. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.Height">
            <summary>
            Text height
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.height">
            <summary>
            Text height
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.TextStyle">
            <summary>
            FontStyle
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.LetterSpace">
            <summary>
            Letter space way
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.LetterSpacing">
            <summary>
            Letter spacing (mm)
            </summary>
            <remarks>
            Used with gap between each glyphs. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.WordSpacing">
            <summary>
            Word spacing (mm)
            </summary>
            <remarks>
            Used with white space (' '). <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.IsRegistered">
            <inheritdoc/>  
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText._ConvertedText">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText._FontName">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.polylines">
            <summary>
            Array of <c>EntityPolyline2D</c>
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.characterSet">
            <summary>
            Registered <c>CharacterSet</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.#ctor(SpiralLab.Sirius2.Winforms.Entity.CharacterSetFormats,System.String,System.Double,System.Drawing.FontStyle,SpiralLab.Sirius2.Winforms.Entity.LetterSpaces,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="format"><c>CharacterSetFormats</c></param>
            <param name="fontName">Font name</param>
            <param name="height">Height (mm)</param>
            <param name="style"><c>System.Drawing.FontStyle</c></param>
            <param name="letterSpace"><c>LetterSpaces</c></param>
            <param name="letterSpacing">Letter spaceing (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.RegenVertices">
            <summary>
            Regen internal vertices
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText.Register(SpiralLab.Sirius2.Winforms.Marker.IMarker,SpiralLab.Sirius2.Scanner.Rtc.CharacterSets)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan">
            <summary>
            EntityTrepan entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan.InnerDiameter">
            <summary>
            Inner diameter (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan.OutterDiameter">
            <summary>
            Outter Diameter (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan.Revolutions">
            <summary>
            Revolutions 
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan.#ctor(OpenTK.Vector2,System.Double,System.Double,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="center">Center X,Y (mm)</param>
            <param name="innerDiameter">Inner diameter (mm)</param>
            <param name="outterDiameter">Outter diameter (mm)</param>
            <param name="revolutions">Revolutions</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan.#ctor(OpenTK.Vector3,System.Double,System.Double,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="center">Center X,Y,Z (mm)</param>
            <param name="innerDiameter">Inner diameter (mm)</param>
            <param name="outterDiameter">Outter diameter (mm)</param>
            <param name="revolutions">Revolutions</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan.Explode">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan.HitTest(SpiralLab.Sirius2.Winforms.IView,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityText">
            <summary>
            EntityText entity
            </summary>
            <remarks>
            Used by installed system fonts
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityText.FontName">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityText.SourceText">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityText.sourceText">
            <summary>
            Source text
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityText.IsConvertedText">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityText.isConvertedText">
            <summary>
            Enable(or disable) converted text data 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityText.ConvertedText">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityText.Height">
            <summary>
            Text height
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityText.height">
            <summary>
            Text height
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityText.TextHorizontalAlignment">
            <summary>
            String horizontal alignment
            </summary>
            <remarks>
            Default: Near 
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityText.TextVerticalAlignment">
            <summary>
            String vertical alignment
            </summary>
            <remarks>
            Default: Near
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityText.TextStyle">
            <summary>
            FontStyle
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityText.IsReversed">
            <summary>
            Reversed pathes or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityText.IsClosed">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityText._SourceText">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityText._ConvertedText">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityText._FontName">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityText.polylines">
            <summary>
            Array of <c>EntityPolyline2D</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.#ctor(System.String,System.String,System.Drawing.FontStyle,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="fontName">Font name</param>
            <param name="text">Text data</param>
            <param name="style"><c>System.Drawing.FontStyle</c></param>
            <param name="height">Height (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.Explode">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.Reverse">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.ToPolylines">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.Hatch(SpiralLab.Sirius2.Winforms.Entity.HatchModes,SpiralLab.Sirius2.Winforms.Entity.HatchJoints,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.RegenVertices">
            <summary>
            Regen internal vertices
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.HitTest(SpiralLab.Sirius2.Winforms.IView,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityText.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline3D">
            <summary>
            EntityPolyline3D entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline3D.IsClosed">
            <summary>
            Closed status
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline3D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline3D.#ctor(SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D[],System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="vertices">Array of <c>EntityVertex3D</c></param>
            <param name="isClosed">Closed path or not</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline3D.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline3D.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline3D.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline3D.Explode">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline3D.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline3D.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline3D.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline3D.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline3D.HitTest(SpiralLab.Sirius2.Winforms.IView,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline3D.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle">
            <summary>
            EntityRectangle entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.Width">
            <summary>
            Width (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.Height">
            <summary>
            Height (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.IsClosed">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.#ctor(OpenTK.Vector2,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="center">Center X,Y (mm)</param>
            <param name="width">Width (mm)</param>
            <param name="height">Height (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.#ctor(OpenTK.Vector3,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="center">Center X,Y,Z (mm)</param>
            <param name="width">Width (mm)</param>
            <param name="height">Height (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.Explode">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.Hatch(SpiralLab.Sirius2.Winforms.Entity.HatchModes,SpiralLab.Sirius2.Winforms.Entity.HatchJoints,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.ToPolylines">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle.Clip(SpiralLab.Sirius2.Winforms.Entity.BoundingBox)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityMoFWait">
            <summary>
            EntityMoFWait entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMoFWait.Condition">
            <summary>
            Encoder wait condition 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMoFWait.Encoder">
            <summary>
            Wait encoder X,Y
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMoFWait.Position">
            <summary>
            Wait encoder position (mm)
            </summary>
            <remarks>
            X,Y Distance From Scanner Head to Rotate Center
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMoFWait.Angle">
            <summary>
            Wait angular encoder angle (°)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFWait.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFWait.#ctor(SpiralLab.Sirius2.Scanner.Rtc.RtcEncoders,SpiralLab.Sirius2.Scanner.Rtc.RtcEncoderWaitConditions,System.Double)">
            <summary>
            Constructor (MoF XY)
            </summary>
            <param name="encoder"><c>RtcEncoders</c></param>
            <param name="condition"><c>EncoderWaitConditions</c></param>
            <param name="position">Wait position (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFWait.#ctor(SpiralLab.Sirius2.Scanner.Rtc.RtcEncoderWaitConditions,System.Double)">
            <summary>
            Constructor (MoF Angular)
            </summary>
            <param name="condition"><c>EncoderWaitConditions</c></param>
            <param name="angle">Wait degree (angle)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFWait.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFWait.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFWait.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFWait.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityMoFEnd">
            <summary>
            EntityMoFEnd entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMoFEnd.JumpTo">
            <summary>
            Angular MoF Center
            </summary>
            <remarks>
            X,Y Distance From Scanner Head to Rotate Center
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMoFEnd._JumpTo">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFEnd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFEnd.#ctor(OpenTK.Vector2)">
            <summary>
            Constructor
            </summary>
            <param name="jumpTo">Jump x,y location</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFEnd.#ctor(System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="x">Jump x location (mm)</param>
            <param name="y">Jump y location (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFEnd.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFEnd.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFEnd.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityMoFBegin">
            <summary>
            EntityMoFBegin entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMoFBegin.IsEncoderReset">
            <summary>
            Reset encoders or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMoFBegin.EncoderType">
            <summary>
            Encoder Type 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMoFBegin.AngularCenter">
            <summary>
            Angular MoF Center
            </summary>
            <remarks>
            X,Y Distance From Scanner Head to Rotate Center. <br/>
            Used with <c>RtcEncoderTypes.Angular</c> only. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMoFBegin._AngularCenter">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFBegin.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFBegin.#ctor(SpiralLab.Sirius2.Scanner.Rtc.RtcMoFTypes,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="type"><c>MoFEncoderType</c> (XY or Angular)</param>
            <param name="isEncoderReset">Reset encoders or rnot</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFBegin.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFBegin.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFBegin.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMoFBegin.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityTimer">
            <summary>
            EntityTimer entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityTimer.DelayMsec">
            <summary>
            Time (msec)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTimer.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTimer.#ctor(System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="msec">Delay time (msec)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTimer.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTimer.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTimer.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityTimer.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityImageText">
            <summary>
            EntityImageText entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.FontName">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.SourceText">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.sourceText">
            <summary>
            Source text
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.IsConvertedText">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.isConvertedText">
            <summary>
            Enable(or disable) converted text data 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.ConvertedText">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.TextHorizontalAlignment">
            <summary>
            String horizontal alignment
            </summary>
            <remarks>
            Default: Near (or Left)
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.TextStyle">
            <summary>
            FontStyle
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.PixelHeight">
            <summary>
            Height (pixel)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.pixelHeight">
            <summary>
            Height (pixel)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.IsFill">
            <summary>
            Fill
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.PixelOutline">
            <summary>
            Outline (pixel)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.pixelOutline">
            <summary>
            Outline size
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImageText._SourceText">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImageText._ConvertedText">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImageText._FontName">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.#ctor(System.String,System.String,System.Drawing.FontStyle,System.Boolean,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="fontName">Font(family) name</param>
            <param name="text">Text data</param>
            <param name="style">Font style</param>
            <param name="isFill">Is fill (or outline)</param>
            <param name="pixelOutline">Outline size (if outline only)</param>
            <param name="pixelHeight">Height (pixel)</param>
            <param name="height">Height (mm)</param>
            <param name="width">Width (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImageText.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.ZSortOrders">
            <summary>
            Z sort orders
            </summary>
            <remarks>
            Used with <c>EntityPointsCloud</c>. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.ZSortOrders.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.ZSortOrders.Ascending">
            <summary>
            Ascending (From Z- to Z+)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.ZSortOrders.Descending">
            <summary>
            Descending (From Z+ to Z-)
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud">
            <summary>
            EntityPointsCloud entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.Repeats">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.In">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.Out">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.VectorAndNormal">
            <summary>
            List of vertex and normal
            </summary>
            <remarks>
            List of (v1, n1, v2, n2, v3, n3),... <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.Mode">
            <summary>
            <c>PolygonMode</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.ZScale">
            <summary>
            Z scale factor (-, +)
            </summary>
            <remarks>
            Z scale factor calculated when <c>Calibration3D</c> has called. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.Offsets">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.ZOrder">
            <summary>
            Z sort order when <c>ExtractVertices</c>
            </summary>
            <remarks>
            <c>False</c>: Descending order. <br/>
            <c>True</c>: Ascending order. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud._VectorAndNormals">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud._ZScale">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.#ctor(OpenTK.Vector3[])">
            <summary>
            Constructor
            </summary>
            <param name="vertices">Array of vertices (x, nx, y, yn, zn)<br/>X1,Normal, Y1,Normal, Z1,Normal, X2,Normal, Y2,Normal, Z2,Normal,... <br/></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.RenderOffset(SpiralLab.Sirius2.Winforms.IView)">
            <summary>
            Do render offset of <c>IEntity</c> at <c>IView</c>
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.Calibration3D(SpiralLab.Sirius2.Scanner.Rtc.IRtc,System.String@,System.String@,SpiralLab.Sirius2.Scanner.Rtc.SlscErrorCodes@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.ActPointsCloudCalibration(OpenTK.Vector3[],SpiralLab.Sirius2.Scanner.Rtc.IRtc,System.String@,System.String@,SpiralLab.Sirius2.Scanner.Rtc.SlscErrorCodes@)">
            <summary>
            Convert 3D scanner field correction by array of vertices.
            </summary>
            <remarks>
            Input correction file : Used source correction file at <c>Rtc.CorrectionFiles[0].FileName</c>. <br/>
            Output correction file : If calibration had succeeded, correction table has load and selected by automatically at last table(TABLE4 or TABLE8) location. <br/>
            The target surface must be provided as a a series of points in 3d space. <br/>
            The function will interpolate between these points and adjust the Correction table so that the laser spot is always in focus on the given surface. <br/>
            The user later needs to only command 2d positions to the RTC and the focal shift is automatically adjusted. <br/>
            The coordinate system after the correction uses top view projection, meaning that X and Y are exactly the same as before. <br/>
            </remarks>
            <param name="vertices">Array of x,y,z vertex</param>
            <param name="rtc"><c>IRtc</c></param>
            <param name="inputCtFileName">Input correction filename</param>
            <param name="newCtFileName">Created new correction filename if succeeded</param>
            <param name="returnCode">Error code if failed</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud.ExtractVertices(OpenTK.Vector3[]@)">
            <summary>
            Extract transformed array of x,y,z vertex
            </summary>
            <remarks>
            <c>ZScale</c> factor will be applied(or applied) when <c>ExtractVertices</c> has called. <br/>
            Sorted z order by <c>IsZAscendingOrder</c>. <br/>
            </remarks>
            <param name="vertices">Created array of <c>Vector3</c> if succeeded</param>
            <returns>Success or failed</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.RasterDirections">
            <summary>
            RasterDirections
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.RasterDirections.LeftToRight">
            <summary>
            Left to right 
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.RasterDirections.RightToLeft">
            <summary>
            Right to left
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.RasterDirections.TopToBottom">
            <summary>
            Top to bottom
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.RasterDirections.BottomToTop">
            <summary>
            Bottom to top
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityImage">
            <summary>
            EntityImage entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.FileName">
            <summary>
            Filename
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.Width">
            <summary>
            Width (mm)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityImage.width">
            <summary>
            Width (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.Height">
            <summary>
            Height (mm)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityImage.height">
            <summary>
            Height (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.IsFixedAspectRatio">
            <summary>
            Fixed Aspect Ratio
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.PixelChannel">
            <summary>
            Pixel Output Extension Channel 
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityImage.pixelChannel">
            <summary>
            Pixel Output Extension Channel 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.Px">
            <summary>
            Px
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.Py">
            <summary>
            Py
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.RasterMode">
            <summary>
            Raster mode
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityImage.rasterMode">
            <summary>
            Raster mode
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.PixelPeriod">
            <summary>
            Pixel period (usec)
            </summary>
            <remarks>
            If <c>RasterModes.JumpAndShoot</c>, pixel period is not used. <br/>
            If <c>RasterModes.MicroVector</c>, pixel speed = pixel pitch(mm) / pixel period(s). <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityImage.pixelPeriod">
            <summary>
            Pixel Period (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.PixelTime">
            <summary>
            Pixel duration time (usec)
            </summary>
            <remarks>
            Pixel output time works like as output pulse width. should be lower than <c>PixelPeriod</c>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityImage.pixelTime">
            <summary>
            Pixel Time (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.PitchX">
            <summary>
            Pitch x (mm/pixel)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.PitchY">
            <summary>
            Pitch y (mm/pixel)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.DpiX">
            <summary>
            DPI x (dots/inch)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.DpiY">
            <summary>
            DPI y (dots/inch)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.PixelSpeed">
            <summary>
            Pixel Speed (mm/s)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.IsInvertColor">
            <summary>
            Invert Pixel Color
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage.Direction">
            <summary>
            Raster Direction
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage._BitmapImage">
            <summary>
            Image Encodering t Base64 
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityImage.bitmap">
            <summary>
            Bitmap resource for image
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityImage._FileName">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityImage.glBuffer">
            <summary>
            GLBuffer 
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImage.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImage.#ctor(System.String,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="fileName">Image filename</param>
            <param name="height">Height (mm)</param>
            <param name="width">Width (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImage.#ctor(System.Drawing.Bitmap,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="bitmap"><c>System.Drawing.Bitmap</c></param>
            <param name="height">Height (mm)</param>
            <param name="width">Width (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImage.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImage.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImage.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImage.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImage.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImage.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImage.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImage.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImage.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImage.MarkVerticalLine(System.Int32,System.Boolean,SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <summary>
            Mark vertical line 
            </summary>
            <param name="px">Index of x line</param>
            <param name="btmToTop"></param>
            <param name="marker"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityImage.MarkHorizontalLine(System.Int32,System.Boolean,SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <summary>
            Mark horizozntal line
            </summary>
            <param name="py">Index of y line</param>
            <param name="leftToRight"></param>
            <param name="marker"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityArc">
            <summary>
            EntityArc entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityArc.Radius">
            <summary>
            Radius (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityArc.StartAngle">
            <summary>
            Start angle (°)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityArc.SweepAngle">
            <summary>
            Sweep angle (°)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityArc.StartRampFactor">
            <summary>
            Start ramp factor (Default: 1)
            </summary>
            <remarks>(Not supported) RTC is not supported arc with ramp yet</remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityArc.EndRampFactor">
            <summary>
            End ramp factor (Default: 1)
            </summary>
            <remarks>(Not supported) RTC is not supported arc with ramp yet</remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityArc.IsClosed">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityArc.StepAngle">
            <summary>
            Step angle (°)
            <para>Default: 0</para>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.#ctor(OpenTK.Vector2,System.Double,System.Double,System.Double,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="center">Center X,Y (mm)</param>
            <param name="radius">Radius (mm)</param>
            <param name="startAngle">Start angle (°)</param>
            <param name="sweepAngle">Sweep angle (°)</param>
            <param name="stepAngle">Step angle (°) (Default: 0)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.#ctor(OpenTK.Vector3,System.Double,System.Double,System.Double,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="center">Center X,Y,Z (mm)</param>
            <param name="radius">Radius (mm)</param>
            <param name="startAngle">Start angle (°)</param>
            <param name="sweepAngle">Sweep angle (°)</param>
            <param name="stepAngle">Step angle (°) (Default: 0)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.Explode">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.ToPolylines">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.Hatch(SpiralLab.Sirius2.Winforms.Entity.HatchModes,SpiralLab.Sirius2.Winforms.Entity.HatchJoints,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.HitTest(SpiralLab.Sirius2.Winforms.IView,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.Reverse">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityArc.Clip(SpiralLab.Sirius2.Winforms.Entity.BoundingBox)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityBlock">
            <summary>
            EntityBlock
            <para>Container of entities</para>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBlock.Color">
            <summary>
            <c>EntityGroup</c> is not has its own color
            </summary>
            <remarks>
            Use children <c>IEntity</c> instead
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBlock.Repeats">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlock.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlock.#ctor(System.String,SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <summary>
            Constructor
            </summary>
            <param name="name">Block name</param>
            <param name="entities">Array of <c>IEntity</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlock.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlock.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlock.Explode">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlock.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlock.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlock.RegenBBox">
            <summary>
            Regen(or recalculate) bounding box
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlock.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlock.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlock.HitTest(SpiralLab.Sirius2.Winforms.IView,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlock.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert">
            <summary>
            EntityBlockInsert
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.Color">
            <summary>
            <c>EntityBlockInsert</c> is not used its own color
            <code>
            foreach(var item in block.Children)
                item.Color = System.Drawing.Color.Yellow;
            </code>
            </summary>
            <remarks>
            Assign <c>IEntity.Color</c> at <c>Children</c> instead. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.Owner">
            <summary>
            Master <c>Block</c> owner (assigned at runtime)
            <para>Must be exist owner <c>EntityBlock</c> in <c>IDocument.Blocks</c></para>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.MasterBlockName">
            <summary>
            Master block name
            <para>Must be exist master <c>EntityBlock</c> in <c>IDocument.Blocks</c></para>
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.masterBlockName">
            <summary>
            Master block name
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert._MasterBlockName">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.#ctor(System.String,OpenTK.Vector3)">
            <summary>
            Constructor
            <para>Must be exist master <c>EntityBlock</c> in <c>IDocument.Blocks</c></para>
            </summary>
            <param name="masterBlockName">Master blockname</param>
            <param name="deltaXyz">Dx, Dy, Dz (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.#ctor(System.String,System.Double,System.Double,System.Double)">
            <summary>
            Constructor
            <para>Must be exist master <c>EntityBlock</c> in <c>IDocument.Blocks</c></para>
            </summary>
            <param name="masterBlockName">Master blockname</param>
            <param name="dx">Dx (mm)</param>
            <param name="dy">Dy (mm)</param>
            <param name="dz">Dz (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.Explode">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.RegenBBox">
            <summary>
            Regen bounding box <c>BBox</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.HitTest(SpiralLab.Sirius2.Winforms.IView,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.BoundingBox">
            <summary>
            BoundingBox
            </summary>
            <remarks>
            Dimension by min x,y,z and max x,y,z
            Calcuated <c>Parent.ModelMatrix</c> to get real min, max values
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.Min">
            <summary>
            Min x,y,z (mm)
            </summary>
            <remarks>Value has NOT applied parent model matrix</remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.Max">
            <summary>
            Max x,y,z (mm)
            </summary>
            <remarks>Value has NOT applied parent model matrix</remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.Center">
            <summary>
            Center x,y,z (mm)
            </summary>
            <remarks>Value has applied parent model matrix</remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.Width">
            <summary>
            Width (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.Height">
            <summary>
            Height (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.RealMin">
            <summary>
            Real min x,y,z (mm)
            </summary>
            <remarks>Value has applied parent model matrix</remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.RealMax">
            <summary>
            Real max x,y,z (mm)
            </summary>
            <remarks>Value has applied parent model matrix</remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.RealCenter">
            <summary>
            Real center x,y,z (mm)
            </summary>
            <remarks>Value has applied parent model matrix</remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.RealWidth">
            <summary>
            Real. Width (mm)
            </summary>
            <remarks>
            Used value for scaling of parent model matrix 
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.RealHeight">
            <summary>
            Real. Height (mm)
            </summary>
            <remarks>
            Used value for scaling of parent model matrix 
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.RealDepth">
            <summary>
            Real. Depth (mm)
            </summary>
            <remarks>
            Used value for scaling of parent model matrix 
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.Parent">
            <summary>
            Parent of entity (Used by internally. Do NOT edit)
            <para>Not saved. automatically regenerate at runtime</para>
            </summary>
            <remarks>
            <c>Parent</c> entity must be assigned to transform parent's model matrix
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.ModelMatrix">
            <summary>
            4x4 parent's model matrix
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.IsEmpty">
            <summary>
            Empty dimension values or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox._Min">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox._Max">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.#ctor(OpenTK.Vector3,OpenTK.Vector3)">
            <summary>
            Constructor
            </summary>
            <param name="min">Min X,Y,Z</param>
            <param name="max">Max X,Y,Z</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.#ctor(OpenTK.Vector2,OpenTK.Vector2)">
            <summary>
            Constructor
            </summary>
            <param name="min">Min X,Y</param>
            <param name="max">Max X,Y</param>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.Empty">
            <summary>
            Create empty <c>BoundingBox</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.Clear">
            <summary>
            Clear internal data
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.ToString">
            <summary>
            Represent dimensnion of<c>BoundingBox</c>
            </summary>
            <returns>Real. dimensnion for <c>BoundingBox</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.Regen">
            <summary>
            Regenerate (or recalculate real min, max by original min, max)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.Render(SpiralLab.Sirius2.Winforms.IView)">
            <summary>
            Render boundgin box at <c>IView</c>
            </summary>
            <param name="view"><c>IView</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point)">
            <summary>
            Hittest by clicked mouse location
            </summary>
            <remarks>
            Min, Max (Before transformed)
            </remarks>
            <param name="view"><c>IView</c></param>
            <param name="mousePosition">Clicked mouse location</param>
            <returns>Is hitted or not</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.HitTest(SpiralLab.Sirius2.Winforms.IView,OpenTK.Vector2,OpenTK.Vector2)">
            <summary>
            Hittest(or intersected) by rectangle area 
            </summary>
            <remarks>
            Start, end location is corner of rectangle area. <br/>
            </remarks>
            <param name="view"><c>IView</c></param>
            <param name="start">Started location (mm)</param>
            <param name="end">Ended location (mm)</param>
            <returns>Is hitted(or intersected) or not</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.Intersect(System.Double,System.Double,System.Double)">
            <summary>
            Hittest(or intersected) by x, y location 
            </summary>
            <param name="x">X (mm)</param>
            <param name="y">Y (mm)</param>
            <param name="threshold">Threshold (mm)</param>
            <returns>Intersected(or included) or not</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.Intersect(OpenTK.Vector2,System.Double)">
            <summary>
            Intersected x, y position within bound box or not
            </summary>
            <param name="v">X,Y (mm) position</param>
            <param name="threshold">Threshold (mm)</param>
            <returns>Intersected(or included) or not</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.RealUnion(SpiralLab.Sirius2.Winforms.Entity.BoundingBox)">
            <summary>
            Union region only real(or transformed) coordinate values
            </summary>
            <param name="bbox"><c>BoundingBox</c></param>
            <remarks>
            Real bounding box means all vertices has matrix transfored (or applied).<br/>
            So only <c>RealMin</c>, <c>RealMax</c> values are meaningful.<br/>
            </remarks>
            <returns><c>BoundingBox</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.RealUnions(SpiralLab.Sirius2.Winforms.Entity.BoundingBox[])">
            <summary>
            Union region only real(or transformed) coordinate values
            </summary>
            <param name="bboxes">Array of <c>BoundingBox</c></param>
            <remarks>
            Real bounding box means all vertices has matrix transfored (or applied).<br/>
            So only <c>RealMin</c>, <c>RealMax</c> values are meaningful.<br/>
            </remarks>
            <returns><c>BoundingBox</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.RealBoundingBox(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Get real bounding box includes children <c>IEntity</c>
            </summary>
            <param name="entity">Target <c>IEntity</c></param>
            <remarks>
            Real bounding box means all vertices has matrix transfored (or applied).<br/>
            So only <c>RealMin</c>, <c>RealMax</c> values are meaningful.<br/>
            </remarks>
            <returns><c>BoundingBox</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.RealBoundingBox(SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <summary>
            Get real bounding box include children entities
            </summary>
            <param name="entities">Array of entities</param>
            <remarks>
            Real bounding box means all vertices has matrix transfored (or applied).<br/>
            So only <c>RealMin</c>, <c>RealMax</c> values are meaningful.<br/>
            </remarks>
            <returns><c>BoundingBox</c></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementEnd">
            <summary>
            EntityMeasurementEnd entity
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementEnd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementEnd.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementEnd.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementEnd.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin">
            <summary>
            EntityMeasurementBegin entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin.title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin.SamplingFrequency">
            <summary>
            Sample Frequency (Hz)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin.samplingFrequency">
            <summary>
            Sample Frequency (Hz)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin.Channels">
            <summary>
            Array of <c>MeasurementChannel</c>
            </summary>
            <remarks>
            RTC4: 2 channels
            RTC5: 4 channels
            RTC6: 8 channels
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin.channels">
            <summary>
            Array of <c>MeasurementChannel</c>
            </summary>        
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin.IsRawData">
            <summary>
            Raw Data Format or not 
            Default: False
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin.isRawData">
            <summary>
            Raw Data Format or not 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin._Title">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin.#ctor(System.Double,SpiralLab.Sirius2.Scanner.Rtc.MeasurementChannels[])">
            <summary>
            Constructor
            </summary>
            <param name="samplingFrequency">Sampling frequency (Hz)</param>
            <param name="channels">Array of <c>MeasurementChannel</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityControlBase">
            <summary>
            EntityControlBase
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityControlBase.Color">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityControlBase.IsRenderable">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityControlBase.IsHitTestable">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityControlBase.IsSelected">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityControlBase.Alignment">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityControlBase.ModelAlign">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityControlBase.ModelTranslate">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityControlBase.ModelScale">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityControlBase.ModelRotate">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityControlBase.Repeats">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityControlBase.In">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityControlBase.Out">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityControlBase.BBox">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityControlBase.ModelMatrix">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityControlBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityPenSyncAxis">
            <summary>
            EntityPenSyncAxis entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenSyncAxis.MinMarkSpeed">
            <summary>
            SyncAxis min mark speed (mm/s)
            </summary>
            <remarks>
            Activated if greater than 0
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenSyncAxis.minMarkSpeed">
            <summary>
            SyncAxis min mark speed (mm/s)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenSyncAxis.ApproxBlendLimit">
            <summary>
            SyncAxis approx. blend Limit (mm)
            </summary>
            <remarks>
            Activated if greater than 0
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenSyncAxis.approxBlendLimit">
            <summary>
            SyncAxis approx. Blend Limit (mm)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPenSyncAxis.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc">
            <summary>
            EntityPenRtc entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.Color">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.LaserFpk">
            <summary>
            FPK (usec)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.laserFpk">
            <summary>
            FPK (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.LaserQSwitchDelay">
            <summary>
            Q switch delay (usec)
            <para>Used with <c>LaserModes.YAG5</c> </para>
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.laserQSwitchDelay">
            <summary>
            Q switch delay (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.LaserOnDelay">
            <summary>
            Laser on delay (usec)
            </summary>
            <remarks>
            If too low, burn in at start location
            If too high, skip at start location
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.laserOnDelay">
            <summary>
            Laser on delay (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.LaserOffDelay">
            <summary>
            Laser off delay (usec)
            </summary>
            <remarks>
            If too low, skip at end location
            If too high, burn out at end location
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.laserOffDelay">
            <summary>
            Laser off delay (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.LaserOnShiftSCANa">
            <summary>
            Laser on shift for SCANahead
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.laserOnShiftSCANa">
            <summary>
            Laser on shift for SCANahead
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.LaserOffShiftSCANa">
            <summary>
            Laser off shift for SCANahead
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.laserOffShiftSCANa">
            <summary>
            Laser off shift for SCANahead (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.ScannerJumpDelay">
            <summary>
            Scanner jump delay (usec)
            </summary>
            <remarks>
            If too low, overshoot or vibrate at start location
            If too high, increase total processing time
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.scannerJumpDelay">
            <summary>
            Scanner jump delay (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.ScannerMarkDelay">
            <summary>
            Scanner mark delay (usec)
            </summary>
            <remarks>
            If too low, overshoot at end location
            If too high, increase total processing time
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.scannerMarkDelay">
            <summary>
            Scanner mark delay (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.ScannerPolygonDelay">
            <summary>
            Scanner polygon delay  (usec)
            </summary>
            <remarks>
            If too low, blending motion between corners (mark and mark)
            If too high, sharpness at corners (mark and mark) 
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.scannerPolygonDelay">
            <summary>
            Scanner polygon delay  (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.IsScannerVariablePolygonDelay">
            <summary>
            Enable/Disable variable scanner polygon delay
            </summary>
            <remarks>
            scale(angle) = 1 – Cosine(angle)
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.isScannerVariablePolygonDelay">
            <summary>
            Enable/Disable variable scanner polygon delay
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.ScannerVariablePolygonDelayEdgeLevel">
            <summary>
            Variable scanner polygon delay edge level (usec)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.scannerVariablePolygonDelayEdgeLevel">
            <summary>
            Variable scanner polygon delay edge level (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.IsScannerVariableJumpDelay">
            <summary>
            Enable/Disable variable scanner jump delay
            </summary>
            <remarks>
            Variable scanner jump delay depends jump distance
            Short distance : low delay time
            Long distance : high delay time
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.isScannerVariableJumpDelay">
            <summary>
            Enable/Disable variable scanner jump delay
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.ScannerVariableJumpDelayMin">
            <summary>
            Variable scanner jump delay min. time (usec)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.scannerVariableJumpDelayMin">
            <summary>
            Variable scanner jump delay min. time (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.ScannerVariableJumpLength">
            <summary>
            Variable scanner jump length (mm)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.scannerVariableJumpLength">
            <summary>
            Variable scanner jump length (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.IsSkyWritingEnabled">
            <summary>
            Enable/Disable skywriting
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.SkyWritingMode">
            <summary>
            Skywriting mode
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.LaserOnShift">
            <summary>
            Skywriting laser on shift (usec)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.laserOnShift">
            <summary>
            Skywriting laser on shift (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.TimeLag">
            <summary>
            Skywriting time lag (usec)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.timeLag">
            <summary>
            Skywriting time lag (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.Prev">
            <summary>
            Skywriting prev (usec)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.prev">
            <summary>
            Skywriting prev (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.Post">
            <summary>
            Skywriting post (usec)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.post">
            <summary>
            Skywriting post (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.AngularLimit">
            <summary>
            Skywriting angular limit at mode 3
            </summary>
            <remarks>
            Activated skywriting if greater than angular limit
            Example. If 90 degree, activated 91,92,...
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.angularLimit">
            <summary>
            Skywriting angular limit at mode 3
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.IsWobbelEnabled">
            <summary>
            Enable/Disable wobbel shape
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.WobbelPerpendicular">
            <summary>
            Wobbel perpendicular(or transversal) size (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.WobbelParallel">
            <summary>
            Wobbel parallel size (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.WobbelFrequency">
            <summary>
            Wobbel frequency (Hz)
            </summary>
            <remarks>
            CW if greater than 0 <br/>
            Mustbe lower than 0.1/TrackingErr <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.wobbelFrequency">
            <summary>
            Wobbel frequency (Hz)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.WobbelShape">
            <summary>
            Wobbel shape
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPenRtc.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityBase">
            <summary>
            EntityBase
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.SyncRoot">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Id">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.TypeName">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Color">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBase.color">
            <summary>
            Color of <c>IEntity</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Vector4Color">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Name">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBase.name">
            <summary>
            Name of <c>IEntity</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Description">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBase.description">
            <summary>
            Name of <c>IEntity</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.IsRenderable">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.IsMarkerable">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBase.isMarkerable">
            <summary>
            IsMarkerable
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.IsHitTestable">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.IsSelected">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.IsHasChildren">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.IsNeedToRegen">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Parent">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Children">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.ChildCount">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Alignment">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBase.alignment">
            <summary>
            <c>Alignments</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.ModelAlign">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBase.modelAlign">
            <summary>
            Model align
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.ModelTranslate">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBase.modelTranslate">
            <summary>
            Model translate
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.ModelScale">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBase.modelScale">
            <summary>
            Model scale
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.ModelRotate">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBase.modelRotate">
            <summary>
            Model rotate
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.View">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Node">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Tag">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Repeats">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBase.repeats">
            <summary>
            Repeat counts
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.In">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Out">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.BBox">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.ModelMatrix">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase.IsDisposed">
            <summary>
            Is disposed or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase._Name">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase._Description">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase._ModelTranslate">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase._ModelAlign">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase._ModelRotate">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase._Children">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityBase._IsDocumentDeserializing">
            <summary>
            Document is deserializing flag (used by internally)
            <para>To prevent invalid property value set when deserialize document</para>
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityBase._EntityId">
            <summary>
            Counts of created entities at runtime
            <para>Used by internally</para>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Entity name</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Dispose(System.Boolean)">
            <summary>
            Dispose internal resources
            </summary>
            <param name="disposing">Explicit dispose or not</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.ToString">
            <summary>
            Represent for <c>IEntity</c>
            </summary>
            <returns>Description for <c>IEntity</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Clone">
            <summary>
            Implement <c>ICloneable</c> of <c>EntityBase</c> 
            </summary>
            <remarks>Deep clone of <c>EntityBase</c></remarks>
            <returns><c>EntityBase</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.InternalClone(SpiralLab.Sirius2.Winforms.Entity.EntityBase)">
            <summary>
            Internal clone for deep copy
            </summary>
            <param name="entity">Source <c>EntityBase</c></param>
            <returns>Clone for <c>EntityBase</c> internal data</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.IsEqual(System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.RegenAlign">
            <summary>
            Re-adjust position for align by <c>Alignment</c> value
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.ResetModelMatrix(SpiralLab.Sirius2.Winforms.Entity.EntityBase)">
            <summary>
            Reset(or identity) model matrix 
            </summary>
            <param name="entity"><c>EntityBase</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.InternalHatchByLine(SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D[],SpiralLab.Sirius2.Winforms.Entity.HatchJoints,OpenTK.Vector3,OpenTK.Vector3,SpiralLab.Sirius2.Winforms.Entity.EntityGroup,System.Boolean,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Do hatch within <c>EntityPolyline2D</c>
            </summary>
            <remarks>
            Used with <c>HatchModes.Line</c> or <c>HatchModes.CrossLine</c>. <br/>
            Model matrix are not applied but accumulated. <br/>
            </remarks>
            <param name="polylines">Source array of <c>EntityPolyline2D</c></param>
            <param name="hatchJoint"><c>HatchJoints</c></param>
            <param name="min">Source dimension of min</param>
            <param name="max">Source dimension of max</param>
            <param name="hatchedGroup">Result hatch into  <c>EntityGroup</c></param>
            <param name="isZigZag">ZigZag</param>
            <param name="angle">Angle (°)</param>
            <param name="interval">Interval (mm)</param>
            <param name="exclude">Exclude (mm)</param>
            <param name="shift">Shift (mm)</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.InternalHatchByPolygon(SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D[],SpiralLab.Sirius2.Winforms.Entity.HatchJoints,SpiralLab.Sirius2.Winforms.Entity.EntityGroup,System.Double)">
            <summary>
            Do hatch within <c>EntityPolyline2D</c>
            </summary>
            <remarks>
            Used with <c>HatchModes.Polygon</c>. <br/>
            Model matrix are not applied but accumulated. <br/>
            </remarks>
            <param name="polylines">Source array of <c>EntityPolyline2D</c></param>
            <param name="hatchJoint"><c>HatchJoints</c></param>
            <param name="hatchedGroup">Result hatch into  <c>EntityGroup</c></param>
            <param name="interval">Interval (mm)</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.MarkPen(SpiralLab.Sirius2.Winforms.Marker.IMarker,SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Mark entity's pen parameter if color has changed 
            </summary>
            <param name="marker"><c>IMarker</c></param>
            <param name="entity"><c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.HitTest(SpiralLab.Sirius2.Winforms.IView,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Translate(OpenTK.Vector3)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Translate(OpenTK.Vector2)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Translate(System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.RotateX(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.RotateY(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.RotateZ(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Rotate(System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityBase.Scale(System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.Alignments">
            <summary>
            Alignments
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Alignments.None">
            <summary>
            None (or baseline alignment)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Alignments.Custom">
            <summary>
            Custom 
            </summary>
            <remarks>
            User editable by <c>ModelAlign</c>. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Alignments.TopLeft">
            <summary>
            Top left
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Alignments.TopCenter">
            <summary>
            Top center
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Alignments.TopRight">
            <summary>
            Top right
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Alignments.MiddleLeft">
            <summary>
            Middle left
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Alignments.MiddleCenter">
            <summary>
            Middle center
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Alignments.MiddleRight">
            <summary>
            Middle right
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Alignments.BottomLeft">
            <summary>
            Bottom left
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Alignments.BottomCenter">
            <summary>
            Bottom center
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.Alignments.BottomRight">
            <summary>
            Bottom right
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">
            <summary>
            IEntity interface
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.SyncRoot">
            <summary>
            Synchronization object 
            </summary>
            <remarks>
            Used for prevent cross-thread issue. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.Id">
            <summary>
            ID of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
            <remarks>
            Automatically assigned (and increased) value at runtime. <br/>
            Not saved.<br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.TypeName">
            <summary>
            Name of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> type
            </summary>
            <remarks>
            Exactly same result with <c>GetType().Name</c>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.Color">
            <summary>
            Color of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
            <remarks>
            Should be one of <see cref="P:SpiralLab.Sirius2.Winforms.Config.PenColors">Config.PenColors</see> values. <br/>
            Used <c>Color</c> value when do mark or render <c>IEntity</c>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.Vector4Color">
            <summary>
            Color of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
            <remarks>
            To convert <see cref="T:System.Drawing.Color">System.Drawing.Color</see> to <see cref="T:OpenTK.Vector4">OpenTK.Vector4</see> format. <br/>
            Used by internally. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.Name">
            <summary>
            Name of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.Description">
            <summary>
            Description of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.IsRenderable">
            <summary>
            Allow do render <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> or not
            </summary>
            <remarks>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IRenderable">IRenderable</see> interface. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.IsHitTestable">
            <summary>
            Allow do hit-test <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IRenderable">IRenderable</see> or not
            </summary>
            <remarks>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IRenderable">IRenderable</see> interface. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.IsSelected">
            <summary>
            Selected status
            </summary>
            <remarks>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IRenderable">IRenderable</see> interface. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.IsMarkerable">
            <summary>
            Allow do mark <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> or not
            </summary>
            <remarks>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IMarkerable">IMarkerable</see> interface. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.IsNeedToRegen">
            <summary>
            Is need to <see cref="M:SpiralLab.Sirius2.Winforms.Entity.IEntity.Regen">Regen</see> or not
            </summary>
            <remarks>
            If <c>False</c>, regenerated itself whenever <see cref="M:SpiralLab.Sirius2.Winforms.Entity.IMarkerable.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">Mark</see> or <see cref="M:SpiralLab.Sirius2.Winforms.Entity.IRenderable.Render(SpiralLab.Sirius2.Winforms.IView)">Render</see> by automatically. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.Parent">
            <summary>
            Parent of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
            <remarks>
            If <c>Parent</c> has assigned, <c>Parent</c> of <c>ModelMatrix</c> will be applied (or accumulated). <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.IsHasChildren">
            <summary>
            Is has children of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.Children">
            <summary>
            List children of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
            <remarks>
            <c>Children</c> are shown at <c>TreeView</c> control as child <c>TreeNode</c>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ChildCount">
            <summary>
            Counts children of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
            <remarks>
            Exactly same result with <c>Children.Count</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.In">
            <summary>
            In(or start) X,Y,Z (mm)
            </summary>
            <remarks>
            Result value are transformed(or applied) by model matrix. <br/>
            Recalculated by <c>RegenInOut</c>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.Out">
            <summary>
            Out(or end) X,Y,Z (mm)
            </summary>
            <remarks>
            Result value are transformed(or applied) by model matrix. <br/>
            Recalculated by <c>RegenInOut</c>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.BBox">
            <summary>
            Bounding Box of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
            <remarks>
            Dimension information of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>. <br/>
            Recalculated real coordinate values by <see cref="M:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.Regen">BoundingBox.Regen</see>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.Alignment">
            <summary>
            Alignments
            </summary>
            <remarks>
            Alignment information of  <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>. <br/>
            Used with <see cref="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.Min">BoundingBox.Min</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Entity.BoundingBox.Max">BoundingBox.Max</see> and <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelAlign">ModelAlign</see>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelAlign">
            <summary>
            Model align
            </summary>
            <remarks>
            Translate for alignment if <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.Alignment">Alignment</see> value has assigned with valid. <br/>
            Calculated when <c>Alignment</c> has modified. <br/>
            Real alignment = <c>BBox.Min</c> + <c>ModelAlign</c><br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelTranslate">
            <summary>
            Model translate
            </summary>
            <remarks>
            Translated distance by dx, dy and dz (mm). <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelScale">
            <summary>
            Model scale
            </summary>
            <remarks>
            Scaled factors by sx, sy and sz (Must be > 0). <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelRotate">
            <summary>
            Model rotate
            </summary>
            <remarks>
            Rotated degree values at x,y and z axis (°). <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelMatrix">
            <summary>
            Model matrix
            </summary>
            <remarks>
            4x4 matrix for transformation. <br/>
            <c>ModelMatrix</c> = <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelAlign">ModelAlign</see> * <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelScale">ModelScale</see> * <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelRotate">ModelRotate</see> * <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelTranslate">ModelTranslate</see> 
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.Node">
            <summary>
            <c>Treeview</c> node
            </summary>
            <remarks>
            <c>Node.Tag</c> value has assigned to <c>IEntity</c> by internally. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.Tag">
            <summary>
            User data
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IEntity.IsEqual(System.Drawing.Color)">
            <summary>
            Indicates whether the current color of <c>IEntity</c> is equal to another color
            </summary>
            <remarks>
            Compared 32-bit ARGB value of color only. <br/>
            </remarks>
            <param name="color"><c>System.Drawing.Color</c></param>
            <returns><c>True</c> if the current color of pen is equal to the color</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IEntity.Regen">
            <summary>
            Regenerate internal data by forcily (or manually)
            </summary>
            <remarks>
            Regenerate whole vertices, bounding box, in, out location, alignment and so on. <br/>
            <c>IEntity</c> would be regenerated whenever do <c>IDocument.ActAdd</c> by automatically<br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IEntity.RegenInOut">
            <summary>
            Regenerate <c>In</c>, <c>Out</c> location
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IEntity.RegenAlign">
            <summary>
            Regenerate <c>ModelAlign</c> location
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IEntity.Translate(OpenTK.Vector3)">
            <summary>
            Translate dx, dy, dz
            </summary>
            <remarks>
            Applied into <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelTranslate">ModelTranslate</see>. <br/>
            </remarks>
            <param name="deltaXyz"><c>Vector3</c> for dx, dy, dz (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IEntity.Translate(OpenTK.Vector2)">
            <summary>
            Translate dx, dy
            </summary>
            <remarks>
            Applied into <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelTranslate">ModelTranslate</see>. <br/>
            </remarks>
            <param name="deltaXy"><c>Vector2</c> for dx, dy (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IEntity.Translate(System.Double,System.Double,System.Double)">
            <summary>
            Translate dx, dy, dz
            </summary>
            <remarks>
            Applied into <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelTranslate">ModelTranslate</see>. <br/>
            </remarks>
            <param name="dx">dx (mm)</param>
            <param name="dy">dy (mm)</param>
            <param name="dz">dz (mm) (Default= 0)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IEntity.RotateX(System.Double)">
            <summary>
            Rotate at x axis
            </summary>
            <remarks>
            Applied into <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelRotate">ModelRotate.X</see>. <br/>
            </remarks>
            <param name="dAngle">Delta degree (°)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IEntity.RotateY(System.Double)">
            <summary>
            Rotate at y axis
            </summary>
            <remarks>
            Applied into <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelRotate">ModelRotate.Y</see>. <br/>
            </remarks>
            <param name="dAngle">Delta degree (°)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IEntity.RotateZ(System.Double)">
            <summary>
            Rotate at z axis
            </summary>
            <remarks>
            Applied into <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelRotate">ModelRotate.Z</see>. <br/>
            </remarks>
            <param name="dAngle">Delta degree (°)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IEntity.Rotate(System.Double,System.Double,System.Double)">
            <summary>
            Rotate at x,y,z axes
            </summary>
            <remarks>
            Applied into <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelRotate">ModelRotate</see>. <br/>
            </remarks>
            <param name="dAngleX">Delta degree x (°)</param>
            <param name="dAngleY">Delta degree y (°)</param>
            <param name="dAngleZ">Delta degree z (°)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.IEntity.Scale(System.Double)">
            <summary>
            Scale sx, sy, sz
            </summary>
            <remarks>
            Applied into <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.ModelScale">ModelScale</see>. <br/>
            Should be greater than zero (scale factor > 0)
            </remarks>
            <param name="deltaScale">Delta scale</param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityFace">
            <summary>
            EntityFace
            <para>Triangle with normals (= x,nx,y,ny,z,nx)</para>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityFace.Color">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityFace.Vertices">
            <summary>
            Vertices for triangle and normal
            </summary>
            <remarks>
            6 Vertices (= x,nx,y,ny,z,nx) <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityFace._Vertices">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFace.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFace.#ctor(OpenTK.Vector3[])">
            <summary>
            Constructor
            </summary>
            <param name="vertices">Should be 6 vertices for x,nx,y,ny,z,nx</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFace.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFace.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFace.Translate(OpenTK.Vector3)">
            <summary>
            Transit dx, dy, dz (mm)
            </summary>
            <param name="delta"> dx, dy, dz (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFace.ToTransform(OpenTK.Matrix4)">
            <summary>
            Transform <c>EntityFace</c> by 4x4 Matrix
            </summary>
            <param name="matrix">Transform <c>Matrix4</c></param>
            <returns>Transformed(or created new) <c>EntityFace</c></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityGroup">
            <summary>
            EntityGroup entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.Color">
            <summary>
            <c>EntityGroup</c> is not used its own <c>Color</c>
            <code>
            // Set Color at child entities instead
            foreach(var item in group.Children)
                item.Color = System.Drawing.Color.Yellow;
            </code>
            </summary>
            <remarks>
            Assign <c>IEntity.Color</c> at <c>Children</c> instead. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.IsClosed">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Name</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.#ctor(System.String,SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <summary>
            Constructor
            </summary>
            <param name="name">Name</param>
            <param name="entities">Array of <c>IEntity</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.PathSort">
            <summary>
            Sort path order by <c>In</c>, <c>Out</c>
            </summary>
            <remarks>
            Path could be reversed to connect <c>In</c>, <c>Out</c> between <c>IEntity</c>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.PathMerge">
            <summary>
            Merge path into <c>EntityPolyline2D</c>
            </summary>
            <returns>Sucess of failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.Explode">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.ToPolylines">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.Hatch(SpiralLab.Sirius2.Winforms.Entity.HatchModes,SpiralLab.Sirius2.Winforms.Entity.HatchJoints,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Do hatch for closed path at <c>IEntity</c>
            <para>It would be hatched by 2D (Z=0) coordinates only</para>
            </summary>
            <remarks>
            Used with internal array of <c>EntityPolyline</c> from <c>IEntity</c>. <br/>
            Used with <c>HatchJoints</c>, <c>isZigZag</c>, <c>angle</c>, <c>internal</c>, <c>exclude</c>, <c>shift</c> values for <c>HatchModes.Line</c> mode. <br/>
            Used with <c>HatchJoints</c>, <c>isZigZag</c>, <c>angle</c>, <c>angle2</c>, <c>internal</c>, <c>exclude</c>, <c>shift</c> values for <c>HatchModes.CrossLine</c> mode. <br/>
            Used with <c>HatchJoints</c>, <c>internal</c> values for <c>HatchModes.Polygon</c> mode. <br/>
            Model matrix are not applied but accumulated into hatched <c>EntityGroup</c>. <br/>
            </remarks>
            <param name="hatchMode"><c>HatchModes</c></param>
            <param name="hatchJoint"><c>HatchJoints</c></param>
            <param name="isZigZag">ZigZag</param>
            <param name="angle">Angle 1st</param>
            <param name="angle2">Angle 2nd for <c>CrossLine</c></param>        
            <param name="interval">Interval (mm)</param>
            <param name="exclude">Exclude (mm)</param>        
            <param name="shift">Shift offset (mm)</param>  
            <returns>Hatched <c>EntityGroup</c> entity</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.HitTest(SpiralLab.Sirius2.Winforms.IView,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.Reverse">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityGroup.Clip(SpiralLab.Sirius2.Winforms.Entity.BoundingBox)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityLayerSyncAxis">
            <summary>
            EntityLayerSyncAxis entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayerSyncAxis.MotionType">
            <summary>
            SyncAxis motion type
            </summary>
            <remarks>
            <c>MotionType</c>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityLayerSyncAxis.motionType">
            <summary>
            SyncAxis motion type
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayerSyncAxis.BandWidth">
            <summary>
            SyncAxis band width (Hz)
            </summary>
            <remarks>
            Higher value: Increase work load at stage.<br/>
            Lower value: Increase work load at scanner. <br/>
            Lower than 0.23 are not allowed. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityLayerSyncAxis.bandWidth">
            <summary>
            SyncAxis band width (Hz)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLayerSyncAxis.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLayerSyncAxis.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Layer name</param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityLayerRtc">
            <summary>
            EntityLayerRtc entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayerRtc.IsALC">
            <summary>
            Enable(or disable) ALC (Automatic Laser Control) 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayerRtc.AlcMode">
            <summary>
            ALC (Automatic Laser Control) mode 
            </summary>
            <remarks>
            <c>AutoLaserControlMode</c>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayerRtc.AlcSignal">
            <summary>
            ALC (Automatic Laser Control) signal
            </summary>
            <remarks>
            <c>AutoLaserControlSignal</c>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayerRtc.AlcPercentage100">
            <summary>
            ALC (Automatic Laser Control) 100% output value
            </summary>
            <remarks>
            If <c>AutoLaserControlSignals.Analog1</c>, analog voltage. <br/>
            If <c>AutoLaserControlSignals.Analog2</c>, analog voltage. <br/>
            If <c>AutoLaserControlSignals.ExtDO8</c>, 8bits (0~255). <br/>
            If <c>AutoLaserControlSignals.ExtDO16</c>, 16bits (0~65535). <br/>
            If <c>AutoLaserControlSignals.PulseWidth</c>, usec. <br/>
            If <c>AutoLaserControlSignals.Frequency</c>, Hz. <br/>
            If <c>AutoLaserControlSignals.SpotDistance</c>, spot distance (mm). <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayerRtc.AlcMinValue">
            <summary>
            ALC (Automatic Laser Control) min. output value
            </summary>
            <remarks>
            If <c>AutoLaserControlSignals.Analog1</c>, analog voltage. <br/>
            If <c>AutoLaserControlSignals.Analog2</c>, analog voltage. <br/>
            If <c>AutoLaserControlSignals.ExtDO8</c>, 8bits (0~255). <br/>
            If <c>AutoLaserControlSignals.ExtDO16</c>, 16bits (0~65535). <br/>
            If <c>AutoLaserControlSignals.PulseWidth</c>, usec. <br/>
            If <c>AutoLaserControlSignals.Frequency</c>, Hz. <br/>
            If <c>AutoLaserControlSignals.SpotDistance</c>, not used. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayerRtc.AlcMaxValue">
            <summary>
            ALC (Automatic Laser Control) max. output value
            </summary>
            <remarks>
            If <c>AutoLaserControlSignals.Analog1</c>, analog voltage. <br/>
            If <c>AutoLaserControlSignals.Analog2</c>, analog voltage. <br/>
            If <c>AutoLaserControlSignals.ExtDO8</c>, 8bits (0~255). <br/>
            If <c>AutoLaserControlSignals.ExtDO16</c>, 16bits (0~65535). <br/>
            If <c>AutoLaserControlSignals.PulseWidth</c>, usec. <br/>
            If <c>AutoLaserControlSignals.Frequency</c>, Hz. <br/>
            If <c>AutoLaserControlSignals.SpotDistance</c>, not used. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayerRtc.AlcByPositionTable">
            <summary>
            ALC (Automatic Laser Control) with Position Dependent Compensate Table
            </summary>
            <remarks>
            Key: Distance(or radius) (mm) <br/>
            Value: Scale (0~4) <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLayerRtc.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLayerRtc.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Layer name</param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityLayer">
            <summary>
            EntityLayer entity
            </summary>
            <remarks>
            Inherited from <c>IEntity</c> &lt;- <c>EntityBase</c> &lt;- <c>EntityLayerRtc</c> &lt;- <c>EntityLayerSyncAxis</c> &lt;- <c>EntityLayer</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.Color">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.IsHitTestable">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.Alignment">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.ModelAlign">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.ModelTranslate">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.ModelScale">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.ModelRotate">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.BBox">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.ModelMatrix">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Name</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLayer.PropertyVisibility(SpiralLab.Sirius2.Scanner.Rtc.IRtc)">
            <summary>
            Property visibility for <c>IRtc</c>
            </summary>
            <param name="rtc"><c>IRtc</c></param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityPen">
            <summary>
            EntityPen entity
            </summary>
            <remarks>
            Inherited from <c>IEntity</c> &lt;- <c>EntityBase</c> &lt;- <c>EntityControlBase</c> &lt;- <c>EntityPenRtc</c> &lt;- <c>EntityPenSyncAxis</c> &lt;- <c>EntityPen</c> <br/>
            When <c>IDocument</c> has created, <c>EntityPen</c> are created by <see cref="E:SpiralLab.Sirius2.Winforms.Config.OnCreatePen">Config.OnCreatePen</see> event also. <br/>
            User can override do mark handler at <c>EntityPen</c> by <see cref="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnMarkPen">IMarker.OnMarkPen</see> event. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPen.Power">
            <summary>
            Output power (W)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPen.power">
            <summary>
            Output power (W)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPen.PowerMax">
            <summary>
            Laser source max power (W)
            </summary>
            <remarks>
            Should be assigned <c>ILaser.MaxPowerWatt</c> at first. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPen.PowerPercentage">
            <summary>
            Output power (%)
            </summary>
            <remarks>
            Should be assigned <c>PowerMax</c> at first. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPen.PowerMapCategory">
            <summary>
            Power category
            </summary>
            <remarks>
            Used with <c>IPowerMap</c> <br/>
            Should be assigned by one of categories at <c>IPowerMap.Categories</c>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPen.PowerMap">
            <summary>
            Assigned <c>IPowerMap</c> instance by automatically. <br/>
            Used by internally. Do NOT edit. <br/>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPen.Frequency">
            <summary>
            Pulse frequency (Hz)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPen.frequency">
            <summary>
            Pulse frequency (Hz)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPen.PulseWidth">
            <summary>
            Pulse width (usec)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPen.pulseWidth">
            <summary>
            Pulse width (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPen.PulsePeriod">
            <summary>
            Pulse period (usec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPen.PulsePitch">
            <summary>
            Estimated. pulse pitch (um)
            </summary>
            <remarks>
            Pulse pitch (um) = Mark speed(mm/s) * 1000 / Frequency(Hz)
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPen.PulseDutyCycle">
            <summary>
            Pulse duty cycle (%)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPen.pulseDutyCycle">
            <summary>
            Pulse duty cycle (%)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPen.JumpSpeed">
            <summary>
            Jump speed (mm/s)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPen.jumpSpeed">
            <summary>
            Jump speed (mm/s)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPen.MarkSpeed">
            <summary>
            Mark speed (mm/s)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.EntityPen.markSpeed">
            <summary>
            Mark speed (mm/s)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPen.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPen.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPen.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPen.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPen.Equals(SpiralLab.Sirius2.Winforms.Entity.EntityPen)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other"><c>EntityPen</c></param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPen.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPen.IsColorEqual(SpiralLab.Sirius2.Winforms.Entity.EntityPen)">
            <summary>
            Indicates whether the current color of pen entity is equal to another pen entity of the same type.
            </summary>
            <param name="pen"><c>EntityPen</c></param>
            <returns><c>True</c> if the current color of pen is equal to the other pen</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPen.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPen.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPen.PropertyVisibility(SpiralLab.Sirius2.Scanner.Rtc.IRtc)">
            <summary>
            Property visibility for <c>IRtc</c>
            </summary>
            <param name="rtc"><c>IRtc</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPen.PropertyVisibility(SpiralLab.Sirius2.Laser.ILaser)">
            <summary>
            Property visibility for <c>ILaser</c>
            </summary>
            <param name="laser"><c>ILaser</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPen.InternalMark(SpiralLab.Sirius2.Winforms.Marker.IMarker,SpiralLab.Sirius2.Winforms.Entity.EntityPen)">
            <summary>
            Internal do mark for <c>EntityPen</c>
            </summary>
            <param name="marker"><c>IMarker</c></param>
            <param name="pen"><c>EntityPen</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral">
            <summary>
            EntitySpiral entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.StartDiameter">
            <summary>
            Start diameter (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.EndDiameter">
            <summary>
            End Diameter (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.Height">
            <summary>
            Height (mm)
            </summary>
            <remarks>
            +: Height, Upper
            -: Depth, Lower
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.Revolutions">
            <summary>
            Revolutions 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.IsClosed">
            <summary>
            Closed or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.RadialPitch">
            <summary>
            Radial Pitch (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.HeightPitch">
            <summary>
            Height Pitch (mm)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.#ctor(OpenTK.Vector3,System.Double,System.Double,System.Double,System.UInt32,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="center">Center X,Y,Z (mm)</param>
            <param name="startDiameter">Start diameter (mm)</param>
            <param name="endDiameter">End diameter (mm)</param>
            <param name="height">Height (mm)</param>
            <param name="revolutions">Revolutions</param>
            <param name="isClosed">Closed path or not</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.Explode">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.HitTest(SpiralLab.Sirius2.Winforms.IView,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityPoints">
            <summary>
            EntityPoints entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.IsHardJump">
            <summary>
            (Experimental!) Hard jump
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.IsHardJumpLaserDelays">
            <summary>
            (Experimental!) Hard jump with override delays
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.HardJumpLaserOnDelay">
            <summary>
            (Experimental!) Hard jump laser on delay
            </summary>
            <remarks>
            Set <c>IsHardJumpLaserDelays</c> as True to use
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.HardJumpLaserOffDelay">
            <summary>
            (Experimental!) Hard jump laser off delay
            </summary>
            <remarks>
            Set <c>IsHardJumpLaserDelays</c> as True to use
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.HardJumpDelay">
            <summary>
            (Experimental!) Hard jump delay
            </summary>
            <remarks>
            Set <c>IsHardJumpLaserDelays</c> as True to use
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.#ctor(OpenTK.Vector2[],System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="locations">Array of location x,y</param>
            <param name="dwellTime">Dwell time (msec)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.#ctor(OpenTK.Vector3[],System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="locations">Array of location x,y,z</param>
            <param name="dwellTime">Dwell time (msec)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.Explode">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.HitTest(SpiralLab.Sirius2.Winforms.IView,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.Reverse">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoints.PropertyVisibility(SpiralLab.Sirius2.Scanner.Rtc.IRtc)">
            <summary>
            Property visibility for <c>IRtc</c>
            </summary>
            <param name="rtc"><c>IRtc</c></param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityPoint">
            <summary>
            EntityPoint entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPoint.DwellMsec">
            <summary>
            Dwell time (msec)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoint.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoint.#ctor(OpenTK.Vector2,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="location">Location x,y</param>
            <param name="dwellTime">Dwell time (msec)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoint.#ctor(OpenTK.Vector3,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="location">Location x,y,z</param>
            <param name="dwellTime">Dwell time (msec)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoint.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="x">X (mm)</param>
            <param name="y">Y (mm)</param>
            <param name="dwellTime">Dwell time (msec)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoint.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="x">X (mm)</param>
            <param name="y">Y (mm)</param>
            <param name="z">Z (mm)</param>
            <param name="dwellTime">Dwell time (msec)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoint.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoint.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoint.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoint.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoint.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoint.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPoint.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityLine">
            <summary>
            EntityLine entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLine.Start">
            <summary>
            Start X,Y,Z (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLine.StartRampFactor">
            <summary>
            Start ramp factor (Default: 1)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLine.End">
            <summary>
            End X,Y,Z (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLine.EndRampFactor">
            <summary>
            End ramp factor (Default: 1)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLine.Center">
            <summary>
            Center X,Y,Z (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLine.Length">
            <summary>
            Length (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLine.IsReverseMarkWithRepeats">
            <summary>
            Mark with reverse each repeat time when mark
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLine._Start">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityLine._End">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.#ctor(OpenTK.Vector2,OpenTK.Vector2)">
            <summary>
            Constructor
            </summary>
            <param name="start">Start x,y location</param>
            <param name="end">End x,y location</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.#ctor(OpenTK.Vector3,OpenTK.Vector3)">
            <summary>
            Constructor
            </summary>
            <param name="start">Start x,y,z location</param>
            <param name="end">End x,y,z location</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="startX">Start x (mm)</param>
            <param name="startY">Start y (mm)</param>
            <param name="endX">End x (mm)</param>
            <param name="endY">End y (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="startX">Start x (mm)</param>
            <param name="startY">Start y (mm)</param>
            <param name="startZ">Start z (mm)</param>
            <param name="endX">End x (mm)</param>
            <param name="endY">End y (mm)</param>
            <param name="endZ">End z (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.HitTest(SpiralLab.Sirius2.Winforms.IView,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.Reverse">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.Extend(System.Double,System.Double)">
            <summary>
            Extend length of <c>Start</c>, <c>End</c>
            </summary>
            <param name="startDistance">Extend length of <c>Start</c></param>
            <param name="endDistance">Extend length of <c>End</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.ToPolylines">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityLine.Clip(SpiralLab.Sirius2.Winforms.Entity.BoundingBox)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D">
            <summary>
            EntityPolyline2D entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.IsClosed">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.#ctor(SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D[],System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="vertices">Array of <c>EntityVertex2D</c><br/></param>
            <param name="isClosed">Closed path or not</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.Explode">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.ToVertices(System.Double)">
            <summary>
            Extract vertices from <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D">EntityPolyline2D</see> 
            </summary>
            <remarks>
            Divided arc into lines by <see cref="P:SpiralLab.Sirius2.Config.DivideArcToLinesDistance">Config.DivideArcToLinesDistance</see>. <br/>
            Vertices are not calculated(or applied) <c>Parent</c> model matrix. <br/>
            </remarks>
            <param name="minLength">Min. length (mm) to divide arc into lines<br/>Recommended: <see cref="P:SpiralLab.Sirius2.Config.DivideArcToLinesDistance">Config.DivideArcToLinesDistance</see>. <br/></param>
            <returns>Array of <c>Vector3</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.ToVertices(OpenTK.Matrix4)">
            <summary>
            Extract vertices from <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D">EntityPolyline2D</see> 
            </summary>
            <remarks>
            Divided arc into lines by <see cref="P:SpiralLab.Sirius2.Config.DivideArcToLinesDistance">Config.DivideArcToLinesDistance</see>. <br/>
            Vertices are calculated(or applied) by model matrix. <br/>
            </remarks>
            <param name="matrix">4x4 matrix</param>
            <returns>Array of <c>Vector3</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.Hatch(SpiralLab.Sirius2.Winforms.Entity.HatchModes,SpiralLab.Sirius2.Winforms.Entity.HatchJoints,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.HitTest(SpiralLab.Sirius2.Winforms.IView,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.Reverse">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.ToPolylines">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.Expand(SpiralLab.Sirius2.Winforms.Entity.HatchJoints,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.IsClockwisePolygon(OpenTK.Vector3[])">
            <summary>
            Clockwise winding or not
            </summary>
            <param name="polygon">Array of <c>Vector3</c></param>
            <returns>True(CW winding) or False (CCW winding)</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D.Clip(SpiralLab.Sirius2.Winforms.Entity.BoundingBox)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityFactory">
            <summary>
            EntityFactory
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateLine(OpenTK.Vector2,OpenTK.Vector2)">
            <summary>
            Create <c>EntityLine</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var line = EntityFactory.CreateLine(new Vector2(-40, 40), new Vector2(40, 40));
            document.ActAdd(line);
            </code>
            </summary>
            <param name="start">Start x,y (mm)</param>
            <param name="end">End x,y (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityLine">EntityLine</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateLine(OpenTK.Vector3,OpenTK.Vector3)">
            <summary>
            Create <c>EntityLine</c> entity
            </summary>
            <param name="start">Start x,y,z (mm)</param>
            <param name="end">End x,y,z (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityLine">EntityLine</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateLine(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create <c>EntityLine</c> entity
            </summary>
            <param name="startX">Start x</param>
            <param name="startY">Start y</param>
            <param name="endX">End x</param>
            <param name="endY">End y</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityLine">EntityLine</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateLine(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create <c>EntityLine</c> entity
            </summary>
            <param name="startX">Start x</param>
            <param name="startY">Start y</param>
            <param name="startZ">Start z</param>
            <param name="endX">End x</param>
            <param name="endY">End y</param>
            <param name="endZ">End z</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityLine">EntityLine</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreatePoint(OpenTK.Vector2,System.Double)">
            <summary>
            Create <c>EntityPoint</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var point =  EntityFactory.CreatePoint(new Vector2(-3, 1), 1);
            document.ActAdd(point);
            </code>
            </summary>
            <param name="location">x,y (mm) location</param>
            <param name="dwellTime">Dwell time (msec)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPoint">EntityPoint</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreatePoint(System.Double,System.Double,System.Double)">
            <summary>
            Create <c>EntityPoint</c> entity
            </summary>
            <param name="x">X</param>
            <param name="y">Y </param>
            <param name="dwellTime">Dwell time (msec)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPoint">EntityPoint</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreatePoint(OpenTK.Vector3,System.Double)">
            <summary>
            Create <c>EntityPoint</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var point =  EntityFactory.CreatePoint(new Vector3(-3, 1, 0), 1);
            document.ActAdd(point);
            </code>
            </summary>
            <param name="location">x,y (mm) location</param>
            <param name="dwellTime">Dwell time (msec)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPoint">EntityPoint</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreatePoint(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create <c>EntityPoint</c> entity
            </summary>
            <param name="x">X location (mm)</param>
            <param name="y">Y location (mm)</param>
            <param name="z">Z location (mm)</param>
            <param name="dwellTime">Dwell time (msec)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPoint">EntityPoint</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreatePoints(OpenTK.Vector2[],System.Double)">
            <summary>
            Create <c>EntityPoints</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var list = new List&lt;Vector2&gt;(3);
            list.Add(new Vector2(-2, 2));
            list.Add(new Vector2(-3, 2));
            list.Add(new Vector2(-4, 2));
            var points = EntityFactory.CreatePoints(list.ToArray(), 1);
            document.ActAdd(points);
            </code>
            </summary>
            <param name="locations">Array of x,y (mm) location</param>
            <param name="dwellTime">Dwell time (msec)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPoints">EntityPoints</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreatePoints(OpenTK.Vector3[],System.Double)">
            <summary>
            Create <c>EntityPoints</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var list = new List&lt;Vector3&gt;(3);
            list.Add(new Vector3(-2, 2, 0));
            list.Add(new Vector3(-3, 2, 0));
            list.Add(new Vector3(-4, 2, 0));
            var points = EntityFactory.CreatePoints(list.ToArray(), 1);
            document.ActAdd(points);
            </code>
            </summary>
            <param name="locations">Array of x,y,z (mm) location</param>
            <param name="dwellTime">Dwell time (msec)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPoints">EntityPoints</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateArc(OpenTK.Vector2,System.Double,System.Double,System.Double,System.UInt32)">
            <summary>
            Create <c>EntityArc</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var arc1 = EntityFactory.CreateArc(Vector2.Zero, 10, 0, 360);
            arc1.Translate(20, 20);
            document.ActAdd(arc1);
            var arc2 = EntityFactory.CreateArc(Vector2.Zero, 8, 90, -300);
            arc2.Translate(20, 20);
            document.ActAdd(arc2);
            </code>
            </summary>
            <param name="center">X, Y Center (mm)</param>
            <param name="radius">Radius (mm)</param>
            <param name="startAngle">Start angle (°)</param>
            <param name="sweepAngle">Sweep angle (°)</param>
            <param name="stepAngle">Step angle (°) (Default: 0)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityArc">EntityArc</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateArc(System.Double,System.Double,System.Double,System.Double,System.Double,System.UInt32)">
            <summary>
            Create <c>EntityArc</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var arc1 = EntityFactory.CreateArc(Vector2.Zero, 10, 0, 360);
            arc1.Translate(20, 20);
            document.ActAdd(arc1);
            var arc2 = EntityFactory.CreateArc(Vector2.Zero, 8, 90, -300);
            arc2.Translate(20, 20);
            document.ActAdd(arc2);
            </code>
            </summary>
            <param name="cx">X center (mm)</param>
            <param name="cy">Y center (mm)</param>
            <param name="radius">Radius (mm)</param>
            <param name="startAngle">Start angle (°)</param>
            <param name="sweepAngle">Sweep angle (°)</param>
            <param name="stepAngle">Step angle (°) (Default: 0)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityArc">EntityArc</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateArc(OpenTK.Vector3,System.Double,System.Double,System.Double,System.UInt32)">
            <summary>
            Create <c>EntityArc</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var arc1 = EntityFactory.CreateArc(Vector3.Zero, 10, 0, 360);
            arc1.Translate(20, 20);
            document.ActAdd(arc1);
            var arc2 = EntityFactory.CreateArc(Vector3.Zero, 8, 90, -300);
            arc2.Translate(20, 20);
            document.ActAdd(arc2);
            </code>
            </summary>
            <param name="center">X, Y, Z center (mm)</param>
            <param name="radius">Radius (mm)</param>
            <param name="startAngle">Start angle (°)</param>
            <param name="sweepAngle">Sweep angle (°)</param>
            <param name="stepAngle">Step angle (°) (Default: 0)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityArc">EntityArc</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateArc(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.UInt32)">
            <summary>
            Create <c>EntityArc</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var arc1 = EntityFactory.CreateArc(0, 0, 0, 10, 0, 360);
            arc1.Translate(20, 20);
            document.ActAdd(arc1);
            var arc2 = EntityFactory.CreateArc(0, 0, 0, 8, 90, -300);
            arc2.Translate(20, 20);
            document.ActAdd(arc2);
            </code>
            </summary>
            <param name="cx">X center (mm)</param>
            <param name="cy">Y center (mm)</param>
            <param name="cz">Z center (mm)</param>
            <param name="radius">Radius (mm)</param>
            <param name="startAngle">Start angle (°)</param>
            <param name="sweepAngle">Sweep angle (°)</param>
            <param name="stepAngle">Step angle (°) (Default: 0)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityArc">EntityArc</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateRectangle(OpenTK.Vector2,System.Double,System.Double)">
            <summary>
            Create <c>EntityRectangle</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var rect = EntityFactory.CreateRectangle(new Vector2(10, -10), 10, 5);
            document.ActAdd(rect);
            </code>
            </summary>
            <param name="center">Center x, y</param>
            <param name="width">Width (mm)</param>
            <param name="height">Height (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle">EntityRectangle</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateRectangle(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create <c>EntityRectangle</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var rect = EntityFactory.CreateRectangle(10, -10, 10, 5);
            document.ActAdd(rect);
            </code>
            </summary>
            <param name="cx">Center x (mm) </param>
            <param name="cy">Center y (mm)</param>
            <param name="width">Width (mm)</param>
            <param name="height">Height (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle">EntityRectangle</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateRectangle(OpenTK.Vector3,System.Double,System.Double)">
            <summary>
            Create <c>EntityRectangle</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var rect = EntityFactory.CreateRectangle(new Vector3(10, -10, 0), 10, 5);
            document.ActAdd(rect);
            </code>
            </summary>
            <param name="center">Center x,y,z (mm) location</param>
            <param name="width">Width (mm)</param>
            <param name="height">Height (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle">EntityRectangle</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateRectangle(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create <c>EntityRectangle</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var rect = EntityFactory.CreateRectangle(10, -10, 0, 10, 5);
            document.ActAdd(rect);
            </code>
            </summary>
            <param name="cx">Center x (mm) </param>
            <param name="cy">Center y (mm)</param>
            <param name="cz">Center z (mm)</param>
            <param name="width">Width (mm)</param>
            <param name="height">Height (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityRectangle">EntityRectangle</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateSpiral(OpenTK.Vector2,System.Double,System.Double,System.Double,System.UInt32,System.Boolean)">
            <summary>
            Create <c>EntitySpiral</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var spiral = EntityFactory.CreateSpiral(Vector2.Zero, 8, 12, 5, 20, false);
            spiral.Scale(0.9);
            spiral.Rotate(-50, 0, 0);
            spiral.Translate(-35, 0);
            document.ActAdd(spiral);
            </code>
            </summary>
            <param name="center">Center x, y (mm)</param>
            <param name="startDiameter">Inner diameter (mm)</param>
            <param name="endDiameter">Outter diameter (mm)</param>
            <param name="height">Height (mm)</param>
            <param name="revolutions">Revolutions</param>
            <param name="isClosed">Closed path or not</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral">EntitySpiral</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateSpiral(System.Double,System.Double,System.Double,System.Double,System.Double,System.UInt32,System.Boolean)">
            <summary>
            Create <c>EntitySpiral</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var spiral = EntityFactory.CreateSpiral(0, 0, 8, 12, 5, 20, false);
            spiral.Scale(0.9);
            spiral.Rotate(-50, 0, 0);
            spiral.Translate(-35, 0);
            document.ActAdd(spiral);
            </code>
            </summary>
            <param name="cx">Center x (mm)</param>
            <param name="cy">Center y (mm)</param>
            <param name="startDiameter">Inner diameter (mm)</param>
            <param name="endDiameter">Outter diameter (mm)</param>
            <param name="height">Height (mm)</param>
            <param name="revolutions">Revolutions</param>
            <param name="isClosed">Closed path or not</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral">EntitySpiral</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateSpiral(OpenTK.Vector3,System.Double,System.Double,System.Double,System.UInt32,System.Boolean)">
            <summary>
            Create <c>EntitySpiral</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var spiral = EntityFactory.CreateSpiral(Vector3.Zero, 8, 12, 5, 20, false);
            spiral.Scale(0.9);
            spiral.Rotate(-50, 0, 0);
            spiral.Translate(-35, 0);
            document.ActAdd(spiral);
            </code>
            </summary>
            <param name="center">Center x, y, z (mm)</param>
            <param name="startDiameter">Inner diameter (mm)</param>
            <param name="endDiameter">Outter diameter (mm)</param>
            <param name="height">Height (mm)</param>
            <param name="revolutions">Revolutions</param>
            <param name="isClosed">Closed path or not</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral">EntitySpiral</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateSpiral(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.UInt32,System.Boolean)">
            <summary>
            Create <c>EntitySpiral</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var spiral = EntityFactory.CreateSpiral(0, 0, 0, 8, 12, 5, 20, false);
            spiral.Scale(0.9);
            spiral.Rotate(-50, 0, 0);
            spiral.Translate(-35, 0);
            document.ActAdd(spiral);
            </code>
            </summary>
            <param name="cx">Center x (mm)</param>
            <param name="cy">Center y (mm)</param>
            <param name="cz">Center z (mm)</param>
            <param name="startDiameter">Inner diameter (mm)</param>
            <param name="endDiameter">Outter diameter (mm)</param>
            <param name="height">Height (mm)</param>
            <param name="revolutions">Revolutions</param>
            <param name="isClosed">Closed path or not</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntitySpiral">EntitySpiral</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateTrepan(OpenTK.Vector2,System.Double,System.Double,System.UInt32)">
            <summary>
            Create <c>EntityTrepan</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var trepan = EntityFactory.EntityTrepan(Vector2.Zero, 1, 5, 10);
            document.ActAdd(trepan);
            </code>
            </summary>
            <param name="center">Center x,y (mm) location (mm)</param>
            <param name="innerDiameter">Inner diameter (mm)</param>
            <param name="outterDiameter">Outter diameter (mm)</param>
            <param name="revolutions">Revolutions</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan">EntityTrepan</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateTrepan(System.Double,System.Double,System.Double,System.Double,System.UInt32)">
            <summary>
            Create <c>EntityTrepan</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var trepan = EntityFactory.EntityTrepan(0, 0, 1, 5, 10);
            document.ActAdd(trepan);
            </code>
            </summary>
            <param name="cx">Center x (mm)</param>
            <param name="cy">Center y (mm)</param>
            <param name="innerDiameter">Inner diameter (mm)</param>
            <param name="outterDiameter">Outter diameter (mm)</param>
            <param name="revolutions">Revolutions</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan">EntityTrepan</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateTrepan(OpenTK.Vector3,System.Double,System.Double,System.UInt32)">
            <summary>
            Create <c>EntityTrepan</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var trepan = EntityFactory.EntityTrepan(Vector3.Zero, 1, 5, 10);
            document.ActAdd(trepan);
            </code>
            </summary>
            <param name="center">Center x,y,z (mm) location (mm)</param>
            <param name="innerDiameter">Inner diameter (mm)</param>
            <param name="outterDiameter">Outter diameter (mm)</param>
            <param name="revolutions">Revolutions</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan">EntityTrepan</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateTrepan(System.Double,System.Double,System.Double,System.Double,System.Double,System.UInt32)">
            <summary>
            Create <c>EntityTrepan</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var trepan = EntityFactory.EntityTrepan(0, 0, 0, 1, 5, 10);
            document.ActAdd(trepan);
            </code>
            </summary>
            <param name="cx">Center x (mm)</param>
            <param name="cy">Center y (mm)</param>
            <param name="cz">Center z (mm)</param>
            <param name="innerDiameter">Inner diameter (mm)</param>
            <param name="outterDiameter">Outter diameter (mm)</param>
            <param name="revolutions">Revolutions</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityTrepan">EntityTrepan</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreatePolyline2D(SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D[],System.Boolean)">
            <summary>
            Create <c>CreatePolyline2D</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var vertices = new List&lt;EntityVertex2D&gt;(5);
            vertices.Add(new EntityVertex2D(0, 0));
            vertices.Add(new EntityVertex2D(-10, -10));
            vertices.Add(new EntityVertex2D(-20, -25));
            vertices.Add(new EntityVertex2D(-2, -30, 0.8));
            vertices.Add(new EntityVertex2D(1, 1));
            var polyline = EntityFactory.CreatePolyline2D(vertices.ToArray(), true);
            polyline.Translate(-10, -10, 0);
            document.ActAdd(polyline);
            </code>
            </summary>
            <param name="vertices">Array of <c>Vertex2D</c></param>
            <param name="isClosed">Closed path or not</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D">EntityPolyline2D</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateStereoLithography(System.String,SpiralLab.Sirius2.Winforms.Entity.EntityStl@)">
            <summary>
            Create <c>EntityStl</c> entity by STL file
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            if (EntityFactory.CreateStereoLithography(Path.Combine("sample", "Nefertiti_face.stl"), out var stl))
            {
                stl.Alignment = Alignments.MiddleCenter;
                stl.Scale(0.2);
                stl.Translate(30, 10);
                stl.RotateZ(-90);
                document.ActAdd(stl);
            }
            </code>
            </summary>
            <param name="fileName">StereoLithography(.stl) filename</param>
            <param name="stlEntity">Created <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityStl">EntityStl</see> entity</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateDxf(System.String,SpiralLab.Sirius2.Winforms.Entity.EntityGroup@)">
            <summary>
            Create <c>EntityGroup</c> entity by Dxf file
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            if (EntityFactory.CreateDxf(Path.Combine("sample", "BIKE.dxf"), out var dxf))
            {
                dxf.Alignment = Alignments.MiddleCenter;
                dxf.Scale(0.02);
                document.ActAdd(dxf);
            }
            </code>
            </summary>
            <param name="fileName">Dxf(.dxf) filename</param>
            <param name="dxfEntity">Created dxf entity by <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityGroup">EntityGroup</see></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateHpgl(System.String,SpiralLab.Sirius2.Winforms.Entity.EntityGroup@)">
            <summary>
            Create <c>EntityGroup</c> entity by HPGL(PLT) file
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            if (EntityFactory.CreateHpgl(Path.Combine("sample", "SimplexOpt.plt"), out var hpgl))
            {
                hpgl.Alignment = Alignments.MiddleCenter;
                hpgl.Scale(0.02);
                document.ActAdd(hpgl);
            }
            </code>
            </summary>
            <param name="fileName">HPGL(.plt) filename</param>
            <param name="hpglEntity">Created hpgl entity by <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityGroup">EntityGroup</see></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateCurve(OpenTK.Vector2[])">
            <summary>
            Create <c>EntityCurve</c> entity by conic(or cubic) bezier spline
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            // Curve(conic spline) entity
            var vertices1 = new List&lt;Vector2&gt;(3);
            vertices1.Add(new Vector2(10, -3));
            vertices1.Add(new Vector2(11, -4));
            vertices1.Add(new Vector2(14, -1));
            var conicSpline = EntityFactory.CreateCurve(vertices1.ToArray());
            document.ActAdd(conicSpline);
            // Curve(cubic spline) entity
            var vertices2 = new List&lt;Vector2&gt;(4);
            vertices2.Add(new Vector2(10, -3));
            vertices2.Add(new Vector2(11, -4));
            vertices2.Add(new Vector2(14, -1));
            vertices2.Add(new Vector2(16, -2));
            var cubicSpline = EntityFactory.CreateCurve(vertices2.ToArray());
            cubicSpline.Translate(0, -2);
            document.ActAdd(cubicSpline);
            </code>
            </summary>
            <remarks>
            Conic: 3 vertices <br/>
            Cubic: 4 vertices <br/>
            </remarks>
            <param name="vertices">3 or 4 array of vertices</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityCurve">EntityCurve</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateGroup(System.String,SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <summary>
            Create <c>EntityGroup</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var arc1 = EntityFactory.CreateArc(Vector2.Zero, 1, 0, 360);
            arc1.Color = SpiralLab.Sirius2.Winforms.Config.PenColors[1];
            var arc2 = EntityFactory.CreateArc(Vector2.Zero, 2, 0, 360);
            arc2.Color = SpiralLab.Sirius2.Winforms.Config.PenColors[3];
            arc2.Translate(3, 2, 0);
            var rec = EntityFactory.CreateRectangle(Vector2.Zero, 5, 4);
            var group = EntityFactory.CreateGroup("MyGroup", new IEntity[] { arc1, arc2, rec });
            group.Translate(10, -20);
            document.ActAdd(group);
            </code>
            </summary>
            <remarks>
            Dimension of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityGroup">EntityGroup</see> is calculated when created
            </remarks>
            <param name="name">Name</param>
            <param name="entities">Array of <c>IEntity</c></param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityGroup">EntityGroup</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateImage(System.String,System.Double,System.Double)">
            <summary>
            Create <c>EntityImage</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var image = EntityFactory.CreateImage(Path.Combine("sample", "lena.bmp", 10, 10);
            document.ActAdd(image);
            </code>
            </summary>
            <remarks>
            Not supported <see cref="F:SpiralLab.Sirius2.Scanner.Rtc.RasterModes.MicroVector">RasterModes.MicroVector</see> with <see cref="T:SpiralLab.Sirius2.Scanner.Rtc.SyncAxis.IRtcSyncAxis">IRtcSyncAxis</see> <br/>
            </remarks>
            <param name="fileName">Image filename</param>
            <param name="height">Height (mm)</param>
            <param name="width">Width (mm) (If width is 0, aspect-ratio will be calculated by automatically)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityImage">EntityImage</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateImage(System.Drawing.Bitmap,System.Double,System.Double)">
            <summary>
            Create <c>EntityImage</c> entity
            </summary>
            <remarks>
            User must do dispose returned <c>System.Drawing.Bitmap</c> resource. <br/>
            </remarks>
            <remarks>
            Not supported <see cref="F:SpiralLab.Sirius2.Scanner.Rtc.RasterModes.MicroVector">RasterModes.MicroVector</see> with <see cref="T:SpiralLab.Sirius2.Scanner.Rtc.SyncAxis.IRtcSyncAxis">IRtcSyncAxis</see> <br/>
            </remarks>
            <param name="bitmap"><c>System.Drawing.Bitmap</c></param>
            <param name="height">Height (mm)</param>
            <param name="width">Width (mm) (If width is 0, aspect-ratio will be calculated by automatically)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityImage">EntityImage</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateRaster(System.Double,System.String,System.Boolean)">
            <summary>
            Create <c>EntityRaster</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var fileName = Path.Combine("sample", "lena.bmp");
            var raster = EntityFactory.CreateRaster(2, fileName);
            raster.RasterMode = RasterModes.MicroVector;
            raster.PixelPeriod = 1000;
            raster.PixelTime = 100;
            raster.Direction = RasterDirections.LeftToRight;
            document.ActAdd(raster);
            </code>
            </summary>
            <remarks>
            Extract x,y array of weights from image. <br/>
            Not supported <see cref="F:SpiralLab.Sirius2.Scanner.Rtc.RasterModes.MicroVector">RasterModes.MicroVector</see> with <see cref="T:SpiralLab.Sirius2.Scanner.Rtc.SyncAxis.IRtcSyncAxis">IRtcSyncAxis</see> <br/>
            </remarks>
            <param name="height">Height (mm)</param>
            <param name="imageFileName">Image filename (extract array of x, y weight values from 0 ~ 1)</param>
            <param name="isInverted">Invert weight values or not</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityRaster">EntityRaster</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateRaster(System.Double,System.Double,System.Double[0:,0:])">
            <summary>
            Create <c>EntityRaster</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            // 2D array of weights from 0 ~ 1
            var weights = new float[100,100];
            ...
            var raster = EntityFactory.CreateRaster(2, 2, weights);
            raster.RasterMode = RasterModes.MicroVector;
            raster.PixelPeriod = 1000;
            raster.PixelTime = 100;
            raster.Direction = RasterDirections.LeftToRight;
            document.ActAdd(raster);
            </code>
            </summary>
            <remarks>
            x, y  pixels by array of x,y <br/>
            Not supported <see cref="F:SpiralLab.Sirius2.Scanner.Rtc.RasterModes.MicroVector">RasterModes.MicroVector</see> with <see cref="T:SpiralLab.Sirius2.Scanner.Rtc.SyncAxis.IRtcSyncAxis">IRtcSyncAxis</see> <br/>
            </remarks>
            <param name="width">Width (mm)</param>
            <param name="height">Height (mm)</param>
            <param name="weights">Array of x, y weight values from 0 ~ 1<br/>Origin from left bottom <br/></param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityRaster">EntityRaster</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateImageText(System.String,System.String,System.Drawing.FontStyle,System.Boolean,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Create <c>EntityImageText</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var imagetext = EntityFactory.CreateImageText("Arial", $"1234567890{Environment.NewLine}ABCDEFGHIJKLMNOPQRSTUVWXYZ{Environment.NewLine}`~!@#$%^*()-_=+[{{]|}}\\|;:'\",./?{Environment.NewLine}abcdefghijklmnopqrstuvwxyz", FontStyle.Regular, false, 3, 64, 10);
            document.ActAdd(imagetext);
            </code>
            </summary>
            <remarks>
            Not supported <see cref="F:SpiralLab.Sirius2.Scanner.Rtc.RasterModes.MicroVector">RasterModes.MicroVector</see> with <see cref="T:SpiralLab.Sirius2.Scanner.Rtc.SyncAxis.IRtcSyncAxis">IRtcSyncAxis</see> <br/>
            </remarks>
            <param name="fontName">Font family name.<br/>Should be assigned as one of <see cref="P:SpiralLab.Sirius2.Winforms.Config.InstalledFontNames">Config.InstalledFontNames</see>.</param>
            <param name="text">Text data</param>
            <param name="style"><c>System.Drawing.FontStyle</c></param>
            <param name="isFill">Fill (or outline)</param>
            <param name="pixelOutline">Outline size (pixel)</param>
            <param name="pixelHeight">Height size (pixel)</param>
            <param name="height">Height (mm)</param>
            <param name="width">Width (mm) (If width is 0, aspect-ratio will be calculated by automatically)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityImageText">EntityImageText</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateText(System.String,System.String,System.Drawing.FontStyle,System.Double)">
            <summary>
            Create <c>EntityText</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var text = EntityFactory.CreateText("Arial", $"1234567890{Environment.NewLine}ABCDEFGHIJKLMNOPQRSTUVWXYZ{Environment.NewLine}`~!@#$%^*()-_=+[{{]|}}\\|;:'\",./?{Environment.NewLine}abcdefghijklmnopqrstuvwxyz", FontStyle.Bold, 2.5f);
            document.ActAdd(text);
            </code>
            </summary>
            <param name="fontName">Font family name.<br/>Should be assigned as one of <see cref="P:SpiralLab.Sirius2.Winforms.Config.InstalledFontNames">Config.InstalledFontNames</see>.</param>
            <param name="text">Text data</param>
            <param name="style"><c>System.Drawing.FontStyle</c></param>
            <param name="height">Height (mm)</param>        
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityText">EntityText</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateCircularText(System.String,System.String,System.Drawing.FontStyle,System.Double,SpiralLab.Sirius2.Winforms.Entity.TextCircularDirections,System.Double,System.Double)">
            <summary>
            Create <c>EntityCircularText</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var text = EntityFactory.CreateCircularText("Arial", $"1234567890{Environment.NewLine}ABCDEFGHIJKLMNOPQRSTUVWXYZ{Environment.NewLine}`~!@#$%^*()-_=+[{{]|}}\\|;:'\",./?{Environment.NewLine}abcdefghijklmnopqrstuvwxyz", FontStyle.Bold, 2.5, 10);
            document.ActAdd(text);
            </code>
            </summary>
            <param name="fontName">Font family name.<br/>SShould be assigned as one of <see cref="P:SpiralLab.Sirius2.Winforms.Config.InstalledFontNames">Config.InstalledFontNames</see>.</param>
            <param name="text">Text data</param>
            <param name="style"><c>System.Drawing.FontStyle</c></param>
            <param name="height">Height (mm)</param>       
            <param name="direction"><c>TextCircularDirections</c></param>   
            <param name="radius">Radius (mm)</param>  
            <param name="startAngle">Starting angle(mm)</param>  
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityCircularText">EntityCircularText</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateCharacterSetText(System.String,SpiralLab.Sirius2.Winforms.Entity.CharacterSetFormats,System.Double)">
            <summary>
            Create <c>CreateCharacterSetText</c> entity
            <para>Used with RTC5,6 only (not syncAXIS)</para>
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var textHour = EntityFactory.CreateCharacterSetText("Arial", CharacterSetFormats.Time, 5);
            textHour.CharacterSetTime.TimeFormat = TimeFormats.Hours24;
            var textMin = EntityFactory.CreateCharacterSetText("Arial", CharacterSetFormats.Time, 5);
            textMin.CharacterSetTime.TimeFormat = TimeFormats.Minutes;
            var textSec = EntityFactory.CreateCharacterSetText("Arial", CharacterSetFormats.Time, 5);
            textSec.CharacterSetTime.TimeFormat = TimeFormats.Seconds;
            document.ActAdd(textHour);
            document.ActAdd(textMin);
            document.ActAdd(textSec);
            </code>
            </summary>
            <param name="fontName">Font family name.<br/>Should be one of <see cref="P:SpiralLab.Sirius2.Winforms.Config.InstalledFontNames">Config.InstalledFontNames</see>.</param>
            <param name="format"><c>CharacterSetFormats</c></param>
            <param name="height">Height (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityCharacterSetText">EntityCharacterSetText</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateSiriusText(System.String,System.String,System.Double)">
            <summary>
            Create <c>EntitySiriusText</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var text = EntityFactory.CreateSiriusText("romans2.cxf", $"1234567890{Environment.NewLine}ABCDEFGHIJKLMNOPQRSTUVWXYZ{Environment.NewLine}`~!@#$%^*()-_=+[{{]|}}\\|;:'\",./?{Environment.NewLine}abcdefghijklmnopqrstuvwxyz", 2.5);
            document.ActAdd(text);
            </code>
            </summary>
            <param name="fontName">Cxf(or lff) font filename.<br/>Should be exist at <see cref="P:SpiralLab.Sirius2.Winforms.Config.SiriusFontPath">Config.SiriusFontPath</see> path.<br/> </param>
            <param name="text">Text data</param>
            <param name="height">Height (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText">EntitySiriusText</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateSiriusCharacterSetText(System.String,SpiralLab.Sirius2.Winforms.Entity.CharacterSetFormats,System.Double)">
            <summary>
            Create <c>EntitySiriusCharacterSetText</c> entity
            <para>Used with RTC5,6 only (not syncAXIS)</para>
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var textSerial = EntityFactory.CreateSiriusCharacterSetText("romans2.cxf", CharacterSetFormats.Time, 5);
            textSerial.CharacterSetSerialNo.NumOfDigits = 4;
            textSerial.CharacterSetSerialNo.SerialFormat = SerialNoFormats.LeadingWithZero;
            document.ActAdd(textSerial);
            ...
            var rtcCharacterSet = rtc as IRtcCharacterSet;
            rtcCharacterSet.SerialStartNo = 1000;
            rtcCharacterSet.SerialIncrementStep = 1;
            </code>
            </summary>
            <param name="fontName">Cxf(or lff) font filename.<br/>Should be exist at <see cref="P:SpiralLab.Sirius2.Winforms.Config.SiriusFontPath">Config.SiriusFontPath</see> path.<br/> </param>
            <param name="format"><c>CharacterSetFormats</c></param>
            <param name="height">Height (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusCharacterSetText">EntitySiriusCharacterSetText</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateBlock(System.String,SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <summary>
            Create <c>EntityBlock</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var vertices = new List&lt;EntityVertex2D&gt;(4);
            vertices.Add(new EntityVertex2D(10, 10));
            vertices.Add(new EntityVertex2D(10, 15));
            vertices.Add(new EntityVertex2D(5, 20));
            vertices.Add(new EntityVertex2D(4, 8));
            var polyline = EntityFactory.CreatePolyline2D(vertices.ToArray());
            var block = EntityFactory.CreateBlock("MyBlock", new IEntity[] { polyline });
            document.ActAdd(block);
            </code>
            </summary>
            <param name="blockName">Block name</param>
            <param name="entities">Child array of <c>IEntity</c></param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityBlock">EntityBlock</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateBlockInsert(System.String,OpenTK.Vector3)">
            <summary>
            Create <c>EntityBlockInsert</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            document.ActAdd(block);
            
            var insert1 = EntityFactory.CreateBlockInsert(block.Name);
            document.ActAdd(insert1, Vector3.Zero);
            var insert2 = EntityFactory.CreateBlockInsert(block.Name, new Vector3(-1, 2, 0));
            insert2.Scale(1.5);
            insert2.RotateZ(30);
            document.ActAdd(insert2);
            </code>
            </summary>
            <remarks>
            Target name of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityBlock">EntityBlock</see> should be exist at <see cref="P:SpiralLab.Sirius2.Winforms.IDocumentData.Blocks">IDocumentData.Blocks</see>. <br/>
            </remarks>
            <param name="blockName">Master block name</param>
            <param name="deltaXyz">Dx, Dy, Dz (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert">EntityBlockInsert</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateBlockInsert(System.String,System.Double,System.Double,System.Double)">
            <summary>
            Create <c>EntityBlockInsert</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            document.ActAdd(block);
            
            var insert1 = EntityFactory.CreateBlockInsert(block.Name);
            document.ActAdd(insert1);
            var insert2 = EntityFactory.CreateBlockInsert(block.Name);
            insert2.Scale(1.5);
            insert2.RotateZ(30);
            insert2.Translate(-1, 2, 0);
            document.ActAdd(insert2);
            </code>
            </summary>
            <remarks>
            Target name of <c>EntityBlack</c> should be exist at <c>Document.Blocks</c>
            </remarks>
            <param name="blockName">Master block name</param>
            <param name="dx">Dx (mm)</param>
            <param name="dy">Dy (mm)</param>
            <param name="dz">Dz (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert">EntityBlockInsert</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateDataMatrix(System.String,SpiralLab.Sirius2.Winforms.Entity.Barcode2DCells,System.Int32,System.Double,System.Double)">
            <summary>
            Create <c>EntityDataMatrix</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var dm = EntityFactory.CreateDataMatrix("0123456789", BarcodeCells.Dots, 3, 4, 4);
            dm.CellDot.RasterMode = RasterModes.JumpAndShoot;
            dm.CellDot.PixelChannel = ExtensionChannels.ExtAO2;
            dm.CellDot.PixelPeriod = 1000;
            dm.CellDot.PixelPeriod = 100;
            dm.CellDot.IsZigZag = false;
            dm.Translate(-2, 2);
            document.ActAdd(dm);
            </code>
            </summary>
            <param name="text">Text data</param>
            <param name="cell"><c>Barcode2DCells</c></param>
            <param name="dotFactor">Cell dot factor (1*1, 2*2, ...)</param>
            <param name="width">Width (mm)</param>
            <param name="height">Height (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityDataMatrix">EntityDataMatrix</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateQRCode(System.String,SpiralLab.Sirius2.Winforms.Entity.Barcode2DCells,System.Int32,System.Double,System.Double)">
            <summary>
            Create <c>EntityQRCode</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var qr = EntityFactory.CreateQRCode("0123456789", BarcodeCells.Hatch, 3, 4, 4);
            qr.CellHatch.HatchMode = HatchModes.CrossLine;
            qr.CellHatch.HatchInterval = 0.05f;
            qr.CellHatch.HatchAngle = 100;
            qr.CellHatch.HatchAngle2 = 10;
            qr.Translate(-2, 2);
            document.ActAdd(qr);
            </code>
            </summary>
            <param name="text">Text data</param>
            <param name="cell"><c>Barcode2DCells</c></param>
            <param name="dotFactor">Cell dot factor (1*1, 2*2, ...)</param>
            <param name="width">Width (mm)</param>
            <param name="height">Height (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityQRCode">EntityQRCode</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreatePDF417(System.String,SpiralLab.Sirius2.Winforms.Entity.Barcode2DCells,System.Int32,System.Double,System.Double)">
            <summary>
            Create <c>EntityPDF417</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var qr = EntityFactory.EntityPDF417("0123456789", BarcodeCells.Hatch, 3, 4);
            qr.Translate(-2, 2);
            document.ActAdd(qr);
            </code>
            </summary>
            <param name="text">Text data</param>
            <param name="cell"><c>Barcode2DCells</c></param>
            <param name="dotFactor">Cell dot factor (1*1, 2*2, ...)</param>
            <param name="width">Width (mm)</param>
            <param name="height">Height (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPDF417">EntityPDF417</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateBarcode(System.String,SpiralLab.Sirius2.Winforms.Entity.Barcode1DFormats,System.Int32,System.Double,System.Double)">
            <summary>
            Create <c>EntityBarcode1D</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var bcd = EntityFactory.EntityBarcode1D("0123456789", Barcode1DFormats.Code128, 3, 4, 4);
            bcd.Translate(-2, 2);
            document.ActAdd(bcd);
            </code>
            </summary>
            <param name="text">Text data</param>
            <param name="format"><c>Barcode1DFormats</c></param>
            <param name="dotFactor">Cell dot factor (1, 2, ...)</param>
            <param name="width">Width (mm)</param>
            <param name="height">Height (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityBarcode1D">EntityBarcode1D</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateLayer(System.String)">
            <summary>
            Create <c>EntityLayer</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var layer1 = EntityFactory.CreateLayer("0");
            document.ActAdd(layer1);
            </code>
            </summary>
            <param name="name">Layer name</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityLayer">EntityLayer</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateTimer(System.Double)">
            <summary>
            Create <c>EntityTimer</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var timer = EntityFactory.CreateTimer(0.1);
            document.ActAdd(timer);
            </code>
            </summary>
            <param name="mesc">Delay time (msec)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityTimer">EntityTimer</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateJumpTo(OpenTK.Vector3)">
            <summary>
            Create <c>EntityJumpTo</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var jumpTo = EntityFactory.CreateJumpTo(new Vector(0,10,0));
            document.ActAdd(jumpTo);
            </code>
            </summary>
            <param name="jumpTo">Jump x,y,z (mm) location</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityJumpTo">EntityJumpTo</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateJumpTo(System.Double,System.Double,System.Double)">
            <summary>
            Create <c>EntityJumpTo</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var jumpTo = EntityFactory.CreateJumpTo(0, 10);
            document.ActAdd(jumpTo);
            </code>
            </summary>
            <param name="x">Jump x location (mm)</param>
            <param name="y">Jump y location (mm)</param>
            <param name="z">Jump z location (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityJumpTo">EntityJumpTo</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateMeasurementBegin(System.Double,SpiralLab.Sirius2.Scanner.Rtc.MeasurementChannels[])">
            <summary>
            Create <c>EntityMeasurementBegin</c> entity
            <para>Used with RTC5,6 only (not syncAXIS)</para>
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var begin = EntityFactory.CreateMeasurementBegin(10*1000);
            begin.Channels = new MeasurementChannels[]
            {
                MeasurementChannels.SampleX,
                MeasurementChannels.SampleY,
                MeasurementChannels.SampleZ,
                MeasurementChannels.LaserOn,
            };
            var end = EntityFactory.CreateMeasurementEnd();
            document.ActInsert(begin, document.ActiveLayer, 0);
            document.ActAdd(end);
            </code>
            </summary>
            <param name="samplingFrequency">Frequency (Hz)</param>
            <param name="channels">Target channels</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin">EntityMeasurementBegin</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateMeasurementEnd">
            <summary>
            Create <c>EntityMeasurementEnd</c> entity
            <para>Used with RTC5,6 only (not syncAXIS)</para>
            </summary>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementEnd">EntityMeasurementEnd</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateMoFBegin(SpiralLab.Sirius2.Scanner.Rtc.RtcMoFTypes,System.Boolean)">
            <summary>
            Create <c>EntityMoFBegin</c> entity
            <para>Used with RTC5,6 only (not syncAXIS)</para>
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var begin = EntityFactory.CreateMoFBegin(RtcEncoderTypes.XY);
            var end = EntityFactory.CreateMoFEnd(Vector2.Zero);
            document.ActInsert(begin, document.ActiveLayer, 0);
            document.ActAdd(end);
            </code>
            </summary>
            <param name="type"><c>MoFEncoderType</c></param>
            <param name="isEncoderReset">Reset encoders or not</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMoFBegin">EntityMoFBegin</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateMoFExternalStartDelay(SpiralLab.Sirius2.Scanner.Rtc.RtcEncoders,System.Double)">
            <summary>
            Create <c>EntityMoFExtStartDelay</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var extStartDelay = EntityFactory.EntityMoFExtStartDelay(RtcEncoders.EncX);
            document.ActAdd(extStartDelay);
            </code>
            </summary>
            <remarks>
            Used with if <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.IsExternalStart">IsExternalStart</see> is <c>True</c>. <br/>
            Used with if <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.ListType">ListType</see> is <see cref="F:SpiralLab.Sirius2.Scanner.Rtc.ListTypes.Single">ListTypes.Single</see>. <br/>
            Used with if <see cref="P:SpiralLab.Sirius2.Winforms.IDocumentData.Layers">IDocumentData.Layers</see> count is 1. <br/>
            </remarks>
            <param name="encoder"><c>RtcEncoders</c></param>
            <param name="distance">Distance (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMoFExtStartDelay">EntityMoFExtStartDelay</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateMoFWait(SpiralLab.Sirius2.Scanner.Rtc.RtcEncoders,SpiralLab.Sirius2.Scanner.Rtc.RtcEncoderWaitConditions,System.Double)">
            <summary>
            Create <c>EntityMoFWait</c> Wait for X/Y
            <para>Used with RTC5,6 only (not syncAXIS)</para>
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var entity = EntityFactory.CreateMoFWait(RtcEncoders.EncX, RtcEncoderWaitConditions.Over, 10);
            document.ActAdd(entity);
            </code>
            </summary>
            <remarks>
            Used with <see cref="M:SpiralLab.Sirius2.Scanner.Rtc.IRtcMoF.ListMofBegin(System.Boolean)">IRtcMoF.ListMofBegin</see>. <br/>
            </remarks>
            <param name="encoder"><c>RtcEncoders</c></param>
            <param name="condition"><c>EncoderWaitConditions</c></param>
            <param name="position">Wait position (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMoFWait">EntityMoFWait</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateMoFWait(SpiralLab.Sirius2.Scanner.Rtc.RtcEncoderWaitConditions,System.Double)">
            <summary>
            Create <c>EntityMoFWait</c> Wait for Angular
            <para>Used with RTC5,6 only (not syncAXIS)</para>
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var entity = EntityFactory.CreateMoFWait(RtcEncoderWaitConditions.Over, 90);
            document.ActAdd(entity);
            </code>
            </summary>
            <remarks>
            Used with <c>IRtcMoF.ListMofAngularBegin</c> <br/>
            </remarks>
            <param name="condition"><c>EncoderWaitConditions</c></param>
            <param name="angle">Wait degree (angle)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMoFWait">EntityMoFWait</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateMoFEnd(OpenTK.Vector2)">
            <summary>
            Create <c>EntityMoFEnd</c> entity
            <para>Used with RTC5,6 only (not syncAXIS)</para>
            </summary>
            <param name="jumpTo">Jump x,y (mm) location when MoF has ended</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMoFEnd">EntityMoFEnd</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateMoFEnd(System.Double,System.Double)">
            <summary>
            Create <c>EntityMoFEnd</c> entity
            <para>Used with RTC5,6 only (not syncAXIS)</para>
            </summary>
            <param name="x">Jump x location when MoF has ended</param>
            <param name="y">Jump x location when MoF has ended</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMoFEnd">EntityMoFEnd</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateZDefocus(System.Double)">
            <summary>
            Create <c>EntityZDefocus</c> entity
            <para>Used with RTC5,6 only (not syncAXIS)</para>
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var zDefocus = EntityFactory.CreateZDefocus(1);
            document.ActAdd(zDefocus);
            </code>
            </summary>
            <param name="zDefocus">Z defocus (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityZDefocus">EntityZDefocus</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateZDelta(System.Double)">
            <summary>
            Create <c>EntityZDelta</c> entity
            <para>Used with RTC5,6 only (not syncAXIS)</para>
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var zDelta = EntityFactory.CreateZDelta(0.5);
            document.ActAdd(zDelta);
            </code>
            </summary>
            <param name="zDelta">Z delta (mm)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityZDelta">EntityZDelta</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateRampBegin(SpiralLab.Sirius2.Scanner.Rtc.AutoLaserControlSignals,System.Double)">
            <summary>
            Create <c>EntityRampBegin</c> entity 
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var begin = EntityFactory.CreateRampBegin(AutoLaserControlSignals.Frequency, 50 * 1000);
            var end = EntityFactory.CreateRampEnd();
            document.ActInsert(begin, document.ActiveLayer, 0);
            document.ActAdd(end);
            </code>
            </summary>
            <remarks>
            ALC(Automatic laser control) with defined vector. <br/>
            Used with <see cref="M:SpiralLab.Sirius2.Scanner.Rtc.IRtcAutoLaserControl.ListAlcByVectorBegin``1(SpiralLab.Sirius2.Scanner.Rtc.AutoLaserControlSignals,``0)">IRtcAutoLaserControl.ListAlcByVectorBegin</see>. <br/>
            </remarks>
            <param name="signal"><c>AutoLaserControlSignal</c> (Ignored if syncAXIS)</param>
            <param name="startingValue">Staring signal value(Analog: ~10, DO: ~255, 65535, PulseWidth: us, Frequency: Hz) (Ignored if syncAXIS)z</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityRampBegin">EntityRampBegin</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateRampEnd">
            <summary>
            Create <c>EntityRampEnd</c> entity
            </summary>
            <remarks>
            ALC(Automatic laser control) with defined vector. <br/>
            Used with <see cref="M:SpiralLab.Sirius2.Scanner.Rtc.IRtcAutoLaserControl.ListAlcByVectorEnd">IRtcAutoLaserControl.ListAlcByVectorEnd</see>. <br/> 
            Used with <c>StartRampFactor</c>, <c>EndRampFactor</c> values at <c>EntityLine</c>, <c>EntityPolyline2D</c>. <br/> 
            </remarks>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityRampEnd">EntityRampEnd</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateWriteData(SpiralLab.Sirius2.Scanner.Rtc.ExtensionChannels,System.Double)">
            <summary>
            Create <c>EntityWriteData</c> entity 
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var entity = EntityFactory.CreateWriteData(ExtensionChannels.ExtAO2, 2);
            document.ActAdd(entity);
            </code>
            </summary>
            <param name="channel"><c>ExtensionChannels</c></param>
            <param name="data">Analog: ~10V or D.Out: ~255(8bits), ~65535(16bits)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityWriteData">EntityWriteData</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateWriteDataExt16(System.UInt32,System.Boolean)">
            <summary>
            Create <c>EntityWriteDataExt16</c> entity 
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var entity = EntityFactory.CreateWriteDataExt16(0, true);
            document.ActAdd(entity);
            </code>
            </summary>
            <remarks>
            Used with 16 bits digital output at EXTENSION 1 port. <br/>
            Used with and should be assigned one of <see cref="F:SpiralLab.Sirius2.Winforms.Config.DOut_RtcExtension1Port">Config.DOut_RtcExtension1Port</see>. <br/>
            Write digital output at RTC EXTENSION 1 port (16bits). <br/>
            </remarks>
            <param name="bitPosition">Bit position (0~15)</param>
            <param name="onOff">On(off)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16">EntityWriteDataExt16</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateWriteDataExt16Cond(System.String,System.String,System.String,SpiralLab.Sirius2.Scanner.Rtc.SignalEdges)">
            <summary>
            Create <c>EntityWriteDataExt16Cond</c> entity 
            <para>Used with RTC5,6 only (not syncAXIS)</para>
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var entity = EntityFactory.CreateWriteDataExt16Cond("0000 0000 0000 0000", "0000 0000 0000 0000", "0000 0000 0000 0000", True);
            document.ActAdd(entity);
            </code>
            </summary>
            <remarks>
            Used with 16 bits digital input and output at EXTENSION 1 port. <br/>
            Used with <see cref="F:SpiralLab.Sirius2.Winforms.Config.DIn_RtcExtension1Port">Config.DIn_RtcExtension1Port</see>. <br/>
            Used with <see cref="F:SpiralLab.Sirius2.Winforms.Config.DOut_RtcExtension1Port">Config.DOut_RtcExtension1Port</see>. <br/>
            If masked input bits condition has matched, then write masked output bits into EXTENSION 1 port. <br/>
            Don't care bit for '0'. <br/>
            </remarks>
            <param name="inputLowBitMask">Input low bit mask. like as (MSB)"0000 0000 0000 0000"(LSB)</param>
            <param name="inputHightBitMask">Input high bit mask. like as (MSB)"0000 0000 0000 0000"(LSB)</param>
            <param name="outputBitMask">Output bit mask. like as (MSB)"0000 0000 0000 0000"(LSB)</param>
            <param name="outputLevel"><c>SignalEdges</c>O for output level when condition has matched.</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityWriteDataExt16Cond">EntityWriteDataExt16Cond</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateWaitDataExt16Cond(System.String,System.String)">
            <summary>
            Create <c>EntityWriteDataExt16Cond</c> entity 
            <para>Used with RTC5,6 only (not syncAXIS)</para>
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var entity = EntityFactory.CreateWaitDataExt16Cond("0000 0000 0000 0000", "0000 0000 0000 0001");
            document.ActAdd(entity);
            </code>
            </summary>
            <remarks>
            Used with 16 bits digital input and output at EXTENSION 1 port. <br/>
            Used with <see cref="F:SpiralLab.Sirius2.Winforms.Config.DIn_RtcExtension1Port">Config.DIn_RtcExtension1Port</see>. <br/>
            Wait until if masked input bits condition has matched at EXTENSION 1 port. <br/>
            Don't care bit for '0'. <br/>
            </remarks>
            <param name="inputLowBitMask">Input low bit mask. like as (MSB)"0000 0000 0000 0000"(LSB)</param>
            <param name="inputHightBitMask">Input high bit mask. like as (MSB)"0000 0000 0000 0000"(LSB)</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16Cond">EntityWaitDataExt16Cond</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateWaitDataExt16EdgeCond(System.UInt32,SpiralLab.Sirius2.Scanner.Rtc.SignalEdges)">
            <summary>
            Create <c>EntityWaitDataExt16CondEdge</c> entity 
            <para>Used with RTC5,6 only (not syncAXIS)</para>
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var entity = EntityFactory.CreateWaitDataExt16EdgeCond(0, EntityWaitDataExt16CondEdge.SignalEdges.High);
            document.ActAdd(entity);
            </code>
            </summary>
            <remarks>
            Used with 16 bits digital input at EXTENSION 1 port. <br/>
            Used with and should be assigned one of <see cref="F:SpiralLab.Sirius2.Winforms.Config.DIn_RtcExtension1Port">Config.DIn_RtcExtension1Port</see>. <br/>
            Wait until input bit goes to HIGH(or LOW) condition has matched at EXTENSION 1 port. <br/>
            </remarks>
            <param name="bitPosition">Input bit (0~15)</param>
            <param name="signalEdge">Wait edge condition</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityWaitDataExt16EdgeCond">EntityWaitDataExt16CondEdge</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateVariable(System.UInt32,System.UInt32)">
            <summary>
            Create <c>EntityVariable</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var freeVariable = EntityFactory.CreateVariable(0, 1000);
            document.ActAdd(freeVariable);
            </code>
            <remarks>
            Used with <see cref="T:SpiralLab.Sirius2.Scanner.Rtc.IRtcExtension">IRtcExtension</see> only. <br/>
            </remarks>        
            </summary>
            <param name="no">0~7</param>
            <param name="data">Variable value</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityVariable">EntityVariable</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateScriptEvent">
            <summary>
            Create <c>EntityScriptEvent</c> entity
            <code>
            var document = siriusEditorUserControl1.Document;
            ...
            var scriptEvent = EntityFactory.CreateScriptEvent();
            document.ActAdd(scriptEvent);
            </code>
            </summary>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityVariable">EntityVariable</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreatePointsCloud(OpenTK.Vector3[])">
            <summary>
            Create <c>EntityPointsCloud</c> for 3D calibration
            </summary>
            <remarks>
            3D calibration entities are support convert new 3D correction file by <seealso cref="T:SpiralLab.Sirius2.Winforms.Entity.ICalibration3D"/>. <br/>
            </remarks>
            <param name="vertices">Array of vertices (x, nx, y, yn, zn)<br/>X1,Normal, Y1,Normal, Z1,Normal, X2,Normal, Y2,Normal, Z2,Normal,... <br/></param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud">EntityPointsCloud</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreatePlane(OpenTK.Vector3)">
            <summary>
            Create <c>EntityPlane</c> for 3D calibration
            </summary>
            <remarks>
            3D calibration entities are support convert new 3D correction file by <seealso cref="T:SpiralLab.Sirius2.Winforms.Entity.ICalibration3D"/>. <br/>
            </remarks>
            <param name="reference">New reference(or origin) location at surface</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPlane">EntityPlane</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityFactory.CreateCone(System.Double,System.Double,System.Double)">
            <summary>
            Create <c>EntityCone</c> for 3D calibration
            </summary>
            <remarks>
            If <see cref="P:SpiralLab.Sirius2.Winforms.Entity.EntityCone.RadiusReference">EntityCone.RadiusReference</see> and <see cref="P:SpiralLab.Sirius2.Winforms.Entity.EntityCone.RadiusEnd">EntityCone.RadiusEnd</see> are not equals, assumed as conic shape. <br/>
            If <see cref="P:SpiralLab.Sirius2.Winforms.Entity.EntityCone.RadiusReference">EntityCone.RadiusReference</see> and <see cref="P:SpiralLab.Sirius2.Winforms.Entity.EntityCone.RadiusEnd">EntityCone.RadiusEnd</see> are equals, assumed as cylinderic shape. <br/>
            3D calibration entities are support convert new 3D correction file by <seealso cref="T:SpiralLab.Sirius2.Winforms.Entity.ICalibration3D"/>. <br/>
            </remarks>
            <param name="radiusReference">Radius(mm) at reference(or origin) location</param>
            <param name="radiusEnd">Radius(mm) at end location</param>
            <param name="length"></param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityCone">EntityCone</see></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D">
            <summary>
            EntityVertex2D entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.Color">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.ModelScale">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.ModelRotate">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.Repeats">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.Bulge">
            <summary>
            Bulge (Atan/4)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.ToXyz">
            <summary>
            Extract x,y,z translate
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.RampFactor">
            <summary>
            Ramp factor (Default: 1)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.#ctor(OpenTK.Vector2,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="location">X,Y</param>
            <param name="bulge">Bulge (Atan/4)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="x">X</param>
            <param name="y">Y</param>
            <param name="bulge">Bulge (Atan/4)</param>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.Zero">
            <summary>
            Zero <c> EntityVertex2D</c>instance
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.Transform(OpenTK.Matrix4)">
            <summary>
            Apply(or transform) <c>EntityVertex2D</c> with 4x4 matrix
            </summary>
            <param name="matrix"><c>Matrix4</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.Equals(SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D)">
            <summary>
            Equality check
            </summary>
            <param name="other"><c>EntityVertex2D</c></param>
            <returns>Equal or not</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.Distance(SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D,SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D)">
            <summary>
            Distance between <c>EntityVertex2D</c>
            </summary>
            <param name="v1"><c>EntityVertex2D</c></param>
            <param name="v2"><c>EntityVertex2D</c></param>
            <returns>Distance</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.AngleZ(SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D,SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D)">
            <summary>
            Angle between <c>EntityVertex2D</c> at Z axis
            </summary>
            <param name="v1">From <c>EntityVertex2D</c></param>
            <param name="v2">To <c>EntityVertex2D</c></param>
            <returns>Degree</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.op_Subtraction(SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D,SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D)">
            <summary>
            Subtract between <c>EntityVertex2D</c>
            </summary>
            <param name="left"><c>EntityVertex2D</c></param>
            <param name="right"><c>EntityVertex2D</c></param>
            <returns><c>EntityVertex2D</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.AngleZ(SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D)">
            <summary>
            Angle of <c>EntityVertex2D</c> (From origin location)
            </summary>
            <param name="v"><c>EntityVertex2D</c></param>
            <returns>Radian</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex2D.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D">
            <summary>
            EntityVertex3D entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.Color">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.ModelScale">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.ModelRotate">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.Repeats">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.Bulge">
            <summary>
            Bulge (Atan/4)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.ToXyz">
            <summary>
            Extract x,y,z translate
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.RampFactor">
            <summary>
            Ramp factor (Default: 1)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.ModelMatrix">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.#ctor(OpenTK.Vector3,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="location">X,Y,Z</param>
            <param name="bulge">Bulge (Atan/4)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="x">X</param>
            <param name="y">Y</param>
            <param name="z">Z</param>
            <param name="bulge">Bulge (Atan/4)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.Transform(OpenTK.Matrix4)">
            <summary>
            Apply(or transform) <c>EntityVertex2D</c> with 4x4 matrix
            </summary>
            <param name="matrix"><c>Matrix4</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.Equals(SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D)">
            <summary>
            Equality check
            </summary>
            <param name="other"><c>EntityVertex3D</c></param>
            <returns>Equal or not</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.Distance(SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D,SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D)">
            <summary>
            Distance between <c>EntityVertex3D</c>
            </summary>
            <param name="v1"><c>EntityVertex3D</c></param>
            <param name="v2"><c>EntityVertex3D</c></param>
            <returns>Distance</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.AngleX(SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D,SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D)">
            <summary>
            Angle between <c>EntityVertex3D at X axis</c>
            </summary>
            <param name="v1">From <c>EntityVertex3D</c></param>
            <param name="v2">To <c>EntityVertex3D</c></param>
            <returns>Degree</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.AngleY(SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D,SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D)">
            <summary>
            Angle between <c>EntityVertex3D at Y axis</c>
            </summary>
            <param name="v1">From <c>EntityVertex3D</c></param>
            <param name="v2">To <c>EntityVertex3D</c></param>
            <returns>Degree</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.AngleZ(SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D,SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D)">
            <summary>
            Angle between <c>EntityVertex3D at Z axis</c>
            </summary>
            <param name="v1">From <c>EntityVertex3D</c></param>
            <param name="v2">To <c>EntityVertex3D</c></param>
            <returns>Degree</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.op_Subtraction(SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D,SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D)">
            <summary>
            Subtract between <c>EntityVertex3D</c>
            </summary>
            <param name="left"><c>EntityVertex3D</c></param>
            <param name="right"><c>EntityVertex3D</c></param>
            <returns><c>EntityVertex3D</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.AngleX(SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D)">
            <summary>
            Angle of <c>EntityVertex3D</c> (From origin location) at Z axis
            </summary>
            <param name="v"><c>EntityVertex3D</c></param>
            <returns>Radian</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.AngleY(SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D)">
            <summary>
            Angle of <c>EntityVertex3D</c> (From origin location) at Z axis
            </summary>
            <param name="v"><c>EntityVertex3D</c></param>
            <returns>Radian</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.AngleZ(SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D)">
            <summary>
            Angle of <c>EntityVertex3D</c> (From origin location) at Z axis
            </summary>
            <param name="v"><c>EntityVertex3D</c></param>
            <returns>Radian</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.RegenInOut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityVertex3D.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.STLModes">
            <summary>
            STL polygon modes
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.STLModes.Fill">
            <summary>
            Fill (solid)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.STLModes.Wireframe">
            <summary>
            Wiretframe (lines)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.STLModes.Points">
            <summary>
            Points (vertices)
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.STLMaterialFaceModes">
            <summary>
            <c>STLMaterialFaceModes</c>
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.STLMaterialFaceModes.Front">
            <summary>
            Front
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.STLMaterialFaceModes.Back">
            <summary>
            Back
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.STLMaterialFaceModes.FrontAndBack">
            <summary>
            Front and back
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.STLCullFaceModes">
            <summary>
            STL cull face modes
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.STLCullFaceModes.Front">
            <summary>
            Front
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.STLCullFaceModes.Back">
            <summary>
            Back
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.STLCullFaceModes.FrontAndBack">
            <summary>
            Front and back
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.STLFrontFaceDirections">
            <summary>
            STL front face directions
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.STLFrontFaceDirections.Cw">
            <summary>
            Clock wise
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.STLFrontFaceDirections.Ccw">
            <summary>
            Counter clock wise
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.STLZAligns">
            <summary>
            STL z aligns
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.STLZAligns.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.STLZAligns.Bottom">
            <summary>
            Align to bottom
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.STLZAligns.Center">
            <summary>
            Align to center
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Entity.STLZAligns.Top">
            <summary>
            Align to top
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Entity.EntityStl">
            <summary>
            EntityStl entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityStl.Repeats">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityStl.In">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityStl.Out">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityStl.FileName">
            <summary>
            STL Filename
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityStl.Mode">
            <summary>
            <c>STLMode</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Entity.EntityStl.Faces">
            <summary>
            Array of <c>EntityFace</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityStl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityStl.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="fileName">StereoLithography(.stl) filename</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityStl.#ctor(SpiralLab.Sirius2.Winforms.Entity.EntityFace[])">
            <summary>
            Constructor
            </summary>
            <param name="faces">Array of <c>EntityFace</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityStl.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityStl.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityStl.ToString">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityStl.Clone">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityStl.Regen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityStl.Render(SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityStl.HitTest(SpiralLab.Sirius2.Winforms.IView,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Entity.EntityStl.ExtractPointsCloud(OpenTK.Vector3,SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud@)">
            <summary>
            Extract point clouds from STL surface and return <c>EntityPointsCloud</c>
            </summary>
            <param name="dir">Directional vector</param>
            <param name="entityPointsColud">Created <c>EntityPointCloud</c> if succeeded</param>
            <returns>Success or failed</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.PropertyGridLocalizationAttribute">
            <summary>
            i17n (aka multi-languages)
            </summary>
            <remarks>
            Programmed by Toughman from <seealso href="http://www.youngsoft.co.kr/">(c)Youngsoft</seealso> <br/>
            </remarks>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.PropertyGridLocalizationAttribute.LocalizedCategoryAttribute">
            <summary>
            Category attribute
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.PropertyGridLocalizationAttribute.LocalizedCategoryAttribute.#ctor(System.String,System.Type)">
            <summary>
            _C
            </summary>
            <param name="key"></param>
            <param name="classType"></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.PropertyGridLocalizationAttribute.LocalizedCategoryAttribute.GetString(System.String,System.Type)">
            <summary>
            Get string (_C)
            </summary>
            <param name="key"></param>
            <param name="classType"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.PropertyGridLocalizationAttribute.LocalizedDisplayNameAttribute">
            <summary>
            Display name attribute
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.PropertyGridLocalizationAttribute.LocalizedDisplayNameAttribute.#ctor(System.String,System.Type)">
            <summary>
            _DISP
            </summary>
            <param name="key"></param>
            <param name="classType"></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.PropertyGridLocalizationAttribute.LocalizedDisplayNameAttribute.GetString(System.String,System.Type)">
            <summary>
            Get string (_DISP)
            </summary>
            <param name="key"></param>
            <param name="classType"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.PropertyGridLocalizationAttribute.LocalizedDescriptionAttribute">
            <summary>
            Description attribute
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.PropertyGridLocalizationAttribute.LocalizedDescriptionAttribute.#ctor(System.String,System.Type)">
            <summary>
            _DESC
            </summary>
            <param name="key"></param>
            <param name="classType"></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.PropertyGridLocalizationAttribute.LocalizedDescriptionAttribute.GetString(System.String,System.Type)">
            <summary>
            Get string (_DESC)
            </summary>
            <param name="key"></param>
            <param name="classType"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.TextRegisterHelper">
            <summary>
            TextRegisterHelper
            </summary>
            <remarks>
            RTC characterset helper for register. <br/>
            Used with <c>ITextRegisterable</c> only. <br/>
            Used with RTC5 or RTC6 only. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.TextRegisterHelper.Register(SpiralLab.Sirius2.Winforms.Entity.ITextRegisterable[],SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <summary>
            Register(or download) text characterset into RTC
            </summary>
            <remarks>
            If <c>ITextRegisterable</c> entity has regened(or modified), it should be re-registered. <br/>
            This function called leads to CPU burst. so need to consider optimized calls. <br/> 
            Used with RTC5, RTC6 only. <br/>
            Used with <c>IRtcCharacterSet</c> only. <br/>
            Characterset buffer at RTC would be overwritten. <br/>
            </remarks>
            <param name="textRegisterables"><c>ITextRegisterable</c></param>
            <param name="marker"><c>IMaker</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.TextRegisterHelper.Unregister(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <summary>
            Unregister(or clear) characterset at RTC
            </summary>
            <remarks>
            Should be called <c>Unregister</c> if need to clear charactersets at RTC buffer. <br/>
            </remarks>
            <param name="marker"><c>IMarker</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.LffFont">
            <summary>
            LffFont
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Common.LffFont.CapitalHeight">
            <summary>
            Capital height (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Common.LffFont.XHeight">
            <summary>
            X height (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Common.LffFont.Ascender">
            <summary>
            https://learn.microsoft.com/en-us/dotnet/desktop/winforms/advanced/how-to-obtain-font-metrics?view=netframeworkdesktop-4.8
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Common.LffFont.Author">
            <summary>
            폰트 파일에 지정된 저자
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Common.LffFont.Name">
            <summary>
            폰트파일에 지정된 이름
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Common.LffFont.Encoding">
            <summary>
            폰트 파일에 지정된 엔코딩 포맷
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.LffFont.#ctor(System.String)">
            <summary>
            Constructor 
            </summary>
            <param name="fontFileName">llf font filename</param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.LffFontsCache">
            <summary>
            LffFontsCache
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.LffFontsCache.Load(System.String)">
            <summary>
            Load lff font into cache
            </summary>
            <param name="fontFileName">Lff font filename</param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.CxfFont">
            <summary>
            CxfFont
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Common.CxfFont.CapitalHeight">
            <summary>
            Capital height (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Common.CxfFont.XHeight">
            <summary>
            X height (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Common.CxfFont.Ascender">
            <summary>
            https://learn.microsoft.com/en-us/dotnet/desktop/winforms/advanced/how-to-obtain-font-metrics?view=netframeworkdesktop-4.8
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Common.CxfFont.Author">
            <summary>
            폰트 파일에 지정된 저자
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Common.CxfFont.Name">
            <summary>
            폰트파일에 지정된 이름
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Common.CxfFont.Encoding">
            <summary>
            폰트 파일에 지정된 엔코딩 포맷
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.CxfFont.#ctor(System.String)">
            <summary>
            Constructor 
            </summary>
            <param name="fontFileName">cxf font filename</param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.CxfFontsCache">
            <summary>
            CxfFontsCache
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.CxfFontsCache.Load(System.String)">
            <summary>
            Load cxf font into cache
            </summary>
            <param name="fontFileName">Cxf font filename</param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.FontHelper">
            <summary>
            FontHelper
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.FontHelper.GetOutlines(System.String,System.String,System.Single,System.Int32,System.Drawing.StringAlignment,System.Drawing.StringAlignment,System.Boolean,System.Drawing.RectangleF@,SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D[]@)">
            <summary>
            Get outline of font text string
            </summary>
            <param name="fontName"></param>
            <param name="text"></param>
            <param name="height"></param>
            <param name="fontStyle"><c>System.Drawing.FontStyle</c></param>
            <param name="horizontalAlignment"><c>StringAlignment</c></param>
            <param name="verticalAlignment"><c>StringAlignment</c></param>
            <param name="isReversed">Reverse character order or not</param>
            <param name="rectf"></param>
            <param name="polylines">Created array of <c>EntityPolyline2D</c></param>
            <returns>Success or not</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.TextHelper">
            <summary>
            TextHelper
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.TextHelper.EncodeTo(System.String)">
            <summary>
            Encode string to Base64 
            </summary>
            <param name="str">string</param>
            <returns>Base64</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.TextHelper.DecodeFrom(System.String)">
            <summary>
            Decode Base64 to string
            </summary>
            <param name="base64String">base64 formatted string</param>
            <returns>string</returns>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Common.Gdi.POINTFLOAT.X">
            <summary>
            Specifies the horizontal (x) coordinate of a point.
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Common.Gdi.POINTFLOAT.Y">
            <summary>
            Specifies the vertical (y) coordinate of a point.
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Common.Gdi.GLYPHMETRICSFLOAT.gmfBlackBoxX">
            <summary>
            Specifies the width of the smallest rectangle (the glyph's black box) that completely encloses the glyph.
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Common.Gdi.GLYPHMETRICSFLOAT.gmfBlackBoxY">
            <summary>
            Specifies the height of the smallest rectangle (the glyph's black box) that completely encloses the glyph.
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Common.Gdi.GLYPHMETRICSFLOAT.gmfptGlyphOrigin">
            <summary>
            Specifies the x and y coordinates of the upper-left corner of the smallest rectangle that completely encloses the glyph.
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Common.Gdi.GLYPHMETRICSFLOAT.gmfCellIncX">
            <summary>
            Specifies the horizontal distance from the origin of the current character cell to the origin of the next character cell.
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Common.Gdi.GLYPHMETRICSFLOAT.gmfCellIncY">
            <summary>
            Specifies the vertical distance from the origin of the current character cell to the origin of the next character cell.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.Gdi.ABC">
            <summary>
            https://learn.microsoft.com/en-us/windows/win32/gdi/character-widths
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.BitmapHelper">
            <summary>
            BitmapHelper
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.BitmapHelper.EncodeTo(System.Drawing.Bitmap)">
            <summary>
            Encode bitmap to base64 encoding
            </summary>
            <param name="bitmap">Bitmap</param>
            <returns>Base64</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.BitmapHelper.DecodeFrom(System.String)">
            <summary>
            Decode base64 encoding to bitmap
            </summary>
            <param name="base64String">base64 formatted string</param>
            <returns>Bitmap</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.BitmapHelper.ConvertToBitmap(System.String)">
            <summary>
            Load bitmap to image
            </summary>
            <param name="fileName"></param>
            <returns><c>System.Drawing.Bitmap </c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.BitmapHelper.ConvertToBitmap(System.IO.Stream)">
            <summary>
            Convert stream to image
            </summary>
            <param name="stream">Stream</param>
            <returns>Bitmap</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.BitmapHelper.RGB2Gray(System.Drawing.Color)">
            <summary>
            RGB to gray
            </summary>
            <param name="color"><c>Color</c></param>
            <returns>Gray weight from 0 ~ 1</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.BitmapHelper.ToStream(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Image Extension
            </summary>
            <param name="image"><c>Image</c></param>
            <param name="format"><c>ImageFormat</c></param>
            <returns><c>Stream</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.BitmapHelper.CreateTextToImage(System.String,System.String,System.Double,System.Int32,System.Drawing.StringAlignment,System.Boolean,System.Double,System.Drawing.Bitmap@,System.Drawing.SizeF@)">
            <summary>
            Create bitmap text
            </summary>
            <param name="fontName">Font name</param>
            <param name="text">Text string</param>
            <param name="pixels">Height of pixel</param>
            <param name="fontStyle"><c>System.Drawing.FontStyle</c></param>
            <param name="isFill">Is outline only</param>
            <param name="outlineSize">Outline size (if outline only)</param>
            <param name="horizontalAlignment">Horizontal of <c>StringAlignment</c></param>
            <param name="bitmap">Created <c>System.Drawing.Bitmap</c></param>
            <param name="sizef">Create size of <c>System.Drawing.Bitmap</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.MathHelper">
            <summary>
            MathHelper
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.MathHelper.IntersectLineInLine(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Check intersected within lines or not
            </summary>
            <param name="x1">Start x for 1st point</param>
            <param name="y1">Start y for 1st point</param>
            <param name="x2">End x for 1st point</param>
            <param name="y2">End y for 1st point</param>
            <param name="x3">Start x for 2nd point</param>
            <param name="y3">Start x for 2nd point</param>
            <param name="x4">End x for 2nd point</param>
            <param name="y4">End y for 2nd point</param>
            <param name="collisionX">Intersected x (valid when returned <c>True</c>)</param>
            <param name="collisionY">Intersected y (valid when returned <c>True</c>)</param>
            <returns>Success to intersected or not</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.MathHelper.IntersectLineInRect(SpiralLab.Sirius2.Winforms.Entity.BoundingBox,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            직선이 사각형 영역 내에 있던가, 혹은 모서리의 일부가 교차(포함)하는지 여부
            </summary>
            <param name="bbox"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.MathHelper.IntersectPointInRect(SpiralLab.Sirius2.Winforms.Entity.BoundingBox,System.Double,System.Double,System.Double)">
            <summary>
            점이 사각형 영역 내에 포함되어 있는지 여부
            </summary>
            <param name="bbox"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.MathHelper.IntersectLineInRectWithCollision(SpiralLab.Sirius2.Winforms.Entity.BoundingBox,System.Double,System.Double,System.Double,System.Double,System.Collections.Generic.List{OpenTK.Vector2}@)">
            <summary>
            직선이 사각형 영역 내에 있던가, 혹은 모서리의 일부가 교차(포함)하는지 여부
            </summary>
            <param name="bbox"></param>
            <param name="startX"></param>
            <param name="startY"></param>
            <param name="endX"></param>
            <param name="endY"></param>
            <param name="collisions">충돌(교차)시 해당 좌표 배열 (하나 혹은 둘)</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.MathHelper.IntersectLineInRectWithCollision(SpiralLab.Sirius2.Winforms.Entity.BoundingBox,SpiralLab.Sirius2.Winforms.Entity.BoundingBox)">
            <summary>
            사각형이 서로 교차(포함 역시) 하는지 여부
            </summary>
            <param name="bbox1"></param>
            <param name="bbox2"></param>
            <returns></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.OpenTKHelper">
            <summary>
            OpenTK Helper
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKHelper.ScreenToWorldDistance(System.Drawing.Point,OpenTK.Vector3,OpenTK.Matrix4,OpenTK.Matrix4)">
            <summary>
            Screen to world coordinate and calculate distance from test point
            </summary>
            <param name="mouseLocation">Mouse x,y (pixel)</param>
            <param name="testPoint">Target point (x,y,z)</param>
            <param name="modelView">Modelview matrix</param>
            <param name="projection">Project matrix</param>
            <returns>Distance</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKHelper.ScreenToWorldPlaneZIntersect(System.Drawing.Point,OpenTK.Vector3,OpenTK.Matrix4,OpenTK.Matrix4)">
            <summary>
            Screen to world coordinate and intersecct z plane
            </summary>
            <param name="mouseLocation">Mouse x,y (pixel)</param>
            <param name="testPoint">Target point (x,y,z)</param>
            <param name="modelView">Modelview matrix</param>
            <param name="projection">Project matrix</param>
            <returns><c>Vector3</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKHelper.UnProject(System.Drawing.Point,OpenTK.Matrix4,OpenTK.Matrix4,OpenTK.Vector3@,OpenTK.Vector3@)">
            <summary>
            Screen to world coordinate and get near/far position
            </summary>
            <param name="mouseLocation">Mouse x,y (pixel)</param>
            <param name="modelView">Modelview matrix</param>
            <param name="projection">Project matrix</param>
            <param name="near">Camera near</param>
            <param name="far">Camera far</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKHelper.UnProject(OpenTK.Vector3,OpenTK.Matrix4,OpenTK.Matrix4)">
            <summary>
            Screen to world coordinate
            </summary>
            <param name="screenPosition"></param>
            <param name="modelView"></param>
            <param name="projection"></param>
            <returns><c>Vector3</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKHelper.ClosestPoint(OpenTK.Vector3,OpenTK.Vector3,OpenTK.Vector3)">
            <summary>
            Closest point from v at start -> end ray
            </summary>
            <param name="start">Start (or near)</param>
            <param name="end">End (or far)</param>
            <param name="v">Point (x,y,z)</param>
            <returns><c>Vector3</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKHelper.WorldToScreen(OpenTK.Vector3,OpenTK.Matrix4,OpenTK.Matrix4)">
            <summary>
            World to screen coordinate
            https://gamedev.stackexchange.com/questions/35263/converting-world-space-coordinate-to-screen-space-coordinate-and-getting-incorre
            </summary>
            <param name="worldPosition">World position</param>
            <param name="modelView">Model view matrix</param>
            <param name="projection">Projection matrix</param>
            <returns><c>Vector3</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKHelper.PointToLineDistance(OpenTK.Vector3,OpenTK.Vector3,OpenTK.Vector3)">
            <summary>
            Shortest distance from point and line
            </summary>
            <param name="start">Line from</param>
            <param name="end">Line to</param>
            <param name="v">Point (x,y,z)</param>
            <returns>Distance</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKHelper.LoadMatrix(OpenTK.Matrix4@)">
            <summary>
            Load 4x4 matrix into GL context
            </summary>
            <param name="matrix"><c>Matrix4</c></param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.OpenTKExtension">
            <summary>
            OpenTK extension
            <para>Convert type between System.Numerics and OpenTK</para>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKExtension.ToVector3(System.Drawing.Color)">
            <summary>
            System.Drawing.Color to OpenTK.Vector3
            </summary>
            <param name="color"><c>System.Drawing.Color </c></param>
            <returns><c>Vector3</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKExtension.ToVector4(System.Drawing.Color)">
            <summary>
            System.Drawing.Color to OpenTK.Vector4
            </summary>
            <param name="color"><c>System.Drawing.Color </c></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKExtension.ToNumeric(OpenTK.Vector2)">
            <summary>
            OpenTK.Vector2 to System.Numerics.Vector2
            </summary>
            <param name="v"><c>OpenTK.Vector3</c></param>
            <returns><c>Vector2</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKExtension.ToOpenTK(System.Numerics.Vector2)">
            <summary>
            System.Numerics.Vector2 to OpenTK.Vector2
            </summary>
            <param name="v"><c>System.Numerics.Vector2</c></param>
            <returns><c>Vector2</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKExtension.ToNumeric(OpenTK.Vector3)">
            <summary>
            OpenTK.Vector3 to System.Numerics.Vector3
            </summary>
            <param name="v"><c>OpenTK.Vector3</c></param>
            <returns><c>Vector3</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKExtension.ToOpenTK(System.Numerics.Vector3)">
            <summary>
            System.Numerics.Vector3 to OpenTK.Vector3
            </summary>
            <param name="v"><c>System.Numerics.Vector3</c></param>
            <returns><c>Vector3</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKExtension.ToNumeric(OpenTK.Matrix4)">
            <summary>
            OpenTK.Matrix4 to System.Numerics.Matrix4x4
            </summary>
            <param name="m"><c>OpenTK.Matrix4</c></param>
            <returns><c>Matrix4x4</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKExtension.ToOpenTK(System.Numerics.Matrix4x4)">
            <summary>
            System.Numerics.Matrix3x2 to OpenTK.Matrix3
            </summary>
            <param name="m"><c>System.Numerics.Matrix4x4</c></param>
             <returns><c>Matrix4x4</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKExtension.RoundUp(OpenTK.Vector3,System.Int32)">
            <summary>
            Round up floating point
            </summary>
            <param name="v">OpenTK.Matrix3</param>
            <param name="decimals"></param>
            <returns><c>Vector3</c></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.ScriptFileBrowser">
            <summary>
            CorrectionFileBrowser
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.ScriptFileBrowser.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.PenColorEditor">
            <summary>
            Pen color editor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.PenColorEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.PenColorEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.PenColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.PenColorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.PowerMapCategoryEditor">
            <summary>
            PowerMapCategoryEditor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.PowerMapCategoryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.PowerMapCategoryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.AlignmentEditor">
            <summary>
            Alignment editor  by trackbar
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.AlignmentEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.AlignmentEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.ScaleEditor">
            <summary>
            Scale editor  by trackbar
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.ScaleEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.ScaleEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.RotateEditor">
            <summary>
            Rotate z editor  by trackbar
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.RotateEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.RotateEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.OffsetEditor">
            <summary>
            Offset editor  by trackbar
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OffsetEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OffsetEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.FontNameEditor">
            <summary>
            Fontname (family) editor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.FontNameEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.FontNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.FontNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.SiriusFontNameConverter">
            <summary>
             Fontname (cxf, llf) converter
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.SiriusFontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.SiriusFontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.SiriusFontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.FloatTypeConverter">
            <summary>
            Double converter
            </summary>
            <remarks>
            Used with PropertyGrid
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.FloatTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.FloatTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.FloatTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.OpenTKVector2Converter">
            <summary>
            OpenTKVector2 format converter
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKVector2Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKVector2Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKVector2Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.OpenTKVector3Converter">
            <summary>
            OpenTKVector3 format converter
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKVector3Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKVector3Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKVector3Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.OpenTKVector4Converter">
            <summary>
            OpenTKVector4 format converter
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKVector4Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKVector4Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.OpenTKVector4Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.WriteDataExt16StringConverter">
             <summary>
            WriteDataExt16StringConverter
             </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.WriteDataExt16StringConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.WriteDataExt16StringConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.WriteDataExt16StringConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.ReadDataExt16StringConverter">
            <summary>
            ReadDataExt16StringConverter
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.ReadDataExt16StringConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.ReadDataExt16StringConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.ReadDataExt16StringConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.EnumHelper">
            <summary>
            Extract string from attribute Description of Enum 
            </summary>
            <remarks>
            [Description("??")] 
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.EnumHelper.GetDescription(System.Enum)">
            <summary>
            Get Description
            </summary>
            <param name="value"></param>
            <returns>String</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.HashCodeByPropertyExtensions">
            <summary>
            Hashcode helper (from properties)
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.PropertyGridHelper">
            <summary>
            PropertyGrid helper
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.PropertyGridHelper.PropertyBrowsable(System.Type,System.String,System.Boolean)">
            <summary>
            Browsable visible 
            </summary>
            <param name="type">Type</param>
            <param name="name">Property name</param>
            <param name="visible">visible or not</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.PropertyGridHelper.AddButton(System.Windows.Forms.PropertyGrid,System.String,System.String,System.Drawing.Image,System.EventHandler)">
            <summary>
            https://stackoverflow.com/questions/6525639/how-do-you-have-a-button-in-a-property-grid
            </summary>
            <param name="propertyGrid"></param>
            <param name="text"></param>
            <param name="toolTipText"></param>
            <param name="image"></param>
            <param name="eh"></param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Common.STLHelper">
            <summary>
            STLHelper
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.STLHelper.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="fileName">Filename</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Common.STLHelper.FacesToV3N3(SpiralLab.Sirius2.Winforms.Entity.EntityFace[],OpenTK.Vector3[]@)">
            <summary>
            V1+N1, V2+N2, ...
            </summary>
            <param name="faces"></param>
            <param name="vertexAndNormals">Array of V1+N1, V2+N2, ...</param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast">
            <summary>
            MarkerRtcFast
            </summary>
            <remarks>
            Used with RTC5,6,6e <br/>
            Used with <see cref="M:SpiralLab.Sirius2.Scanner.Rtc.IRtc.ListBegin(SpiralLab.Sirius2.Scanner.Rtc.ListTypes)">IRtc.ListBegin</see> and <see cref="M:SpiralLab.Sirius2.Scanner.Rtc.IRtc.ListEnd">IRtc.ListEnd</see>  to process whole <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityLayer">EntityLayer</see>for speed up. <br/>
            Disabled <see cref="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayerRtc.IsALC">EntityLayer.IsALC</see> feature. <br/>
            Disabled <c>IsExternalStart</c> feature. <br/>
            </remarks>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.MarkTargets">
            <summary>
            Mark targets
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.MarkTargets.All">
            <summary>
            All entities
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.MarkTargets.Selected">
            <summary>
            Selected entities
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.MarkTarget">
            <summary>
            Target entities to mark
            </summary>
            <remarks>
            Default: <see cref="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.MarkTargets.All">MarkTargets.All</see> <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.markTarget">
            <summary>
            Internal <c>MarkTargets</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.ListType">
            <summary>
            <c>ListType</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.Session">
            <summary>
            Array of <see cref="T:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession">MeasurementSession</see> 
            </summary>
            <remarks>
            Session = <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin">EntityMeasurementBegin</see> + <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementEnd">EntityMeasurementEnd</see> <br/>
            Valid when <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin">EntityMeasurementBegin</see> has executed. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.sessionQueue">
            <summary>
            Queue for <see cref="T:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession">MeasurementSession</see> 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.CurrentSession">
            <summary>
            Current (or last measurement session)
            </summary>
            <remarks>
            Valid when <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin">EntityMeasurementBegin</see> has executed. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.IsMeasurementPlot">
            <summary>
            Is plot measurement session to graph or not
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.isMeasurementPlot">
            <summary>
            Is plot measurement session to graph or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.MaxMeasurementTime">
            <summary>
            Max measurement time
            </summary>
            <remarks>
            RTC Max measurement time
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.IsCheckTempOk">
            <summary>
            Check scanner temperature when start of mark
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.IsCheckPowerOk">
            <summary>
            Check scanner power supply when start of mark
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.IsCheckPositionAck">
            <summary>
            Check scanner position acknowledge when start of mark
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.thread">
            <summary>
            Internal marker thread 
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.layers">
            <summary>
            List of layers to mark
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.#ctor(System.Int32,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="index">Index</param>
            <param name="name">Name</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.Dispose(System.Boolean)">
            <inheritdoc/>  
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.Ready(SpiralLab.Sirius2.Winforms.IDocument,SpiralLab.Sirius2.Winforms.IView,SpiralLab.Sirius2.Scanner.Rtc.IRtc,SpiralLab.Sirius2.Laser.ILaser,SpiralLab.Sirius2.PowerMeter.IPowerMeter,SpiralLab.Sirius2.Winforms.Remote.IRemote)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.RegisterCharacterSet">
            <summary>
            Register (or download) character set (font glyph) into RTC controller if <see cref="T:SpiralLab.Sirius2.Winforms.Entity.ITextRegisterable">ITextRegisterable</see> has exist. <br/>
            </summary>
            <remarks>
            If <c>ITextRegisterable</c> entity has exist and modifed, it should be registered(or downloaded). <br/>
            Re-registering(or downloading) takes time. <br/>
            </remarks>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.Start">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.Stop">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.Reset">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.LayerWork(System.Int32,SpiralLab.Sirius2.Winforms.Entity.EntityLayer,SpiralLab.Sirius2.Mathematics.Offset)">
            <summary>
            Mark each <c>EntityLayer</c>
            </summary>
            <remarks>
            Helpful current working sets are <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentOffsetIndex">CurrentOffsetIndex</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentOffset">CurrentOffset</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentLayerIndex">CurrentLayerIndex</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentLayer">CurrentLayer</see>. <br/>
            Consider as its working within async threads. <br/>
            </remarks> 
            <param name="offsetIndex">Current index of offset (0,1,2,...)</param>
            <param name="layer">Current <c>EntityLayer</c></param>
            <param name="offset">Current <c>Offset</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.EntityWork(System.Int32,SpiralLab.Sirius2.Winforms.Entity.EntityLayer,System.Int32,SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Mark each <c>IEntity</c>
            </summary>
            <remarks>
            Helpful current working sets are <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentOffsetIndex">CurrentOffsetIndex</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentOffset">CurrentOffset</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentLayerIndex">CurrentLayerIndex</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentLayer">CurrentLayer</see>. <br/>
            Consider as its working within async threads. <br/>
            </remarks> 
            <param name="offsetIndex">Current index of offset (0,1,2,...)</param>
            <param name="layer">Current <c>EntityLayer</c></param>
            <param name="entityIndex">Current index of entity</param>
            <param name="entity">Current <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.MarkerThreadLayers">
            <summary>
            Marker thread
            </summary>
            <remarks>        
            Move offset1 and Mark layers -> Move offset2 and Mark layers , ... <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtcFast.NotifyPlot">
            <summary>
            Plot measurement to graph by gnuplot
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession">
            <summary>
            MeasurementSession
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession.Marker">
            <summary>
            <c>IMarker</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession.Title">
            <summary>
            Title 
            </summary>
            <remarks>
            Plot title
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession.Job">
            <summary>
            Combined <see cref="T:SpiralLab.Sirius2.Scanner.IJob">IJob</see>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession.MeasurementBegin">
            <summary>
            Executed <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin">EntityMeasurementBegin</see> entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession.MeasurementEnd">
            <summary>
            Executed <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementEnd">EntityMeasurementEnd</see> entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession.FileName">
            <summary>
            Filename to auto saved
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession.IsEmpty">
            <summary>
            Empty data or not
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession.#ctor(SpiralLab.Sirius2.Winforms.Marker.IMarker,System.String,SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin,SpiralLab.Sirius2.Scanner.IJob)">
            <summary>
            Constructor
            </summary>
            <param name="marker"><c>IMarker</c></param>
            <param name="title">Title</param>
            <param name="entity"><c>IENtity</c></param>
            <param name="job"><c>IJob</c></param>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession.Empty">
            <summary>
            Create empty <c>MeasurementSession</c> instance
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession.ToString">
            <summary>
            Represent for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin">EntityMeasurementBegin</see> with <c>FileName</c>
            </summary>
            <returns>Description for <c>MeasurementSession</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession.Save(SpiralLab.Sirius2.Scanner.Rtc.IRtcMeasurement)">
            <summary>
            Save measurement result into file
            </summary>
            <param name="rtcMeasurement"><c>IRtcMeasurement</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession.Plot">
            <summary>
            Plot measurement result to graph
            </summary>
            <remarks>
            Used <see cref="P:SpiralLab.Sirius2.Config.MeasurementGNUPlotProgramPath">Config.MeasurementGNUPlotProgramPath</see> program.<br/>
            </remarks>
            <returns>Success or failed</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Marker.MarkerFactory">
            <summary>
            MarkerFactory
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerFactory.CreateVirtual(System.Int32)">
            <summary>
            Create Virtual Marker
            <code>
            var marker = MarkerFactory.CreateVirtual(0);
            </code>
            </summary>
            <param name="index">Index (starting from 0)</param>
            <returns><c>MarkerVirtual</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerFactory.CreateRtc(System.Int32)">
            <summary>
            Create RTC5,6 Marker
            <code>
            var marker1 = MarkerFactory.CreateRtc(0);
            var marker2 = MarkerFactory.CreateRtc(1);
            </code>
            </summary>
            <remarks>
            Supported <c>EntityLayer.IsALC</c> feature. <br/>
            Supported <c>IsExternalStart</c> feature. <br/> 
            </remarks>
            <param name="index">Index (starting from 0)</param>
            <returns><c>MarkerRtc</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerFactory.CreateRtcFast(System.Int32)">
            <summary>
            Create RTC5,6 Fast Marker
            <code>
            var marker1 = MarkerFactory.CreateRtcFast(0);
            var marker2 = MarkerFactory.CreateRtcFast(1);
            </code>
            </summary>
            <remarks>
            Disabled <c>EntityLayer.IsALC</c> feature. <br/>
            Disabled <c>IsExternalStart</c> feature. <br/>
            </remarks>
            <param name="index">Index (starting from 0)</param>
            <returns><c>MarkerRtcFast</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerFactory.CreateSyncAxis(System.Int32)">
            <summary>
            Create SyncAXIS(XL-SCAN) Marker
            <code>
            var marker = MarkerFactory.CreateSyncAxis(0);
            </code>
            </summary>
            <param name="index">Index (starting from 0)</param>
            <returns><c>MarkerSyncAxis</c></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Marker.MarkerBase">
            <summary>
            MarkerBase
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.PropertyChanged">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.OnStarted">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.OnEnded">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.OnBeforeLayer">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.OnAfterLayer">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.OnBeforeEntity">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.OnAfterEntity">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.OnMarkPen">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.OnScriptEvent">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.Index">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.Name">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.Document">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.View">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.Rtc">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.Laser">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.PowerMeter">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.Remote">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.Offsets">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.offsets">
            <summary>
            Array of <c>Offset</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentOffsetIndex">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.currentOffsetIndex">
            <summary>
            Current offset index
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentOffset">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.currentOffset">
            <summary>
            Current offset index
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentLayerIndex">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.currentLayerIndex">
            <summary>
            current layer index
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentLayer">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.currentLayer">
            <summary>
            Current layer
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentEntityIndex">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.currentEntityIndex">
            <summary>
            Current entity index
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentEntity">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.currentEntity">
            <summary>
            Current entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentPenColor">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.penColor">
            <summary>
            Current pen color
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.IsReady">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.isReady">
            <summary>
            Ready status
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.IsBusy">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.isBusy">
            <summary>
            Busy status
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.IsError">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.isError">
            <summary>
            Error status
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.IsJumpToOriginAfterFinished">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.AccumulatedMarks">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.accumulatedMarks">
            <summary>
            Accumulated counts of mark
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.TimeSpan">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.timeSpan">
            <summary>
            TimeSpan
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.OnTextConvert">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.IsTextRegistering">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.TextConvertScriptFile">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.TextConvertScriptInstance">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.IsScriptError">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.ScriptLineIfError">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.Tag">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.isInternalBusy">
            <summary>
            Worker thread is working or not
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.Dispose(System.Boolean)">
            <summary>
            Dispose internal resources
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.Ready(SpiralLab.Sirius2.Winforms.IDocument,SpiralLab.Sirius2.Winforms.IView,SpiralLab.Sirius2.Scanner.Rtc.IRtc,SpiralLab.Sirius2.Laser.ILaser,SpiralLab.Sirius2.PowerMeter.IPowerMeter,SpiralLab.Sirius2.Winforms.Remote.IRemote)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.Start">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.Stop">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.Reset">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.NotifyPropertyChanged(System.String)">
            <summary>
            Notify property value has change event
            </summary>
            <param name="propertyName">Property name</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.NotifyStarted">
            <summary>
            Notify makrer has started event
            </summary>
            <remarks>
            Consider as its working within async threads. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.NotifyEnded(System.Boolean)">
            <summary>
            Notify marker has finished event
            </summary>
            <remarks>
            Consider as its working within async threads. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.NotifyBeforeLayer(SpiralLab.Sirius2.Winforms.Entity.EntityLayer)">
            <summary>
            Notify before mark <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityLayer">EntityLayer</see> event
            </summary>
            <param name="layer"><c>EntityLayer</c></param>
            <remarks>
            Do something works before do <c>EntityLayer</c>. <br/>
            Consider as its working within async threads. <br/>
            </remarks>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.NotifyAfterLayer(SpiralLab.Sirius2.Winforms.Entity.EntityLayer)">
            <summary>
            Notify after mark <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityLayer">EntityLayer</see> event
            </summary>
            <param name="layer"><c>EntityLayer</c></param>
            <remarks>
            Do something to works after do <c>EntityLayer</c>. <br/>
            Consider as its working within async threads. <br/>
            </remarks>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.NotifyBeforeEntity(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Notify before mark <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> event
            </summary>
            <param name="entity"><c>IEntity</c></param>
            <remarks>
            Do something to works before do <c>IEntity</c>. <br/>
            Consider as its working within async threads. <br/>
            </remarks>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.NotifyAfterEntity(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Notify after mark <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>event
            </summary>
            <param name="entity"><c>IEntity</c></param>
            <remarks>
            Do something to works after do <c>IEntity</c>. <br/>
            Consider as its working within async threads. <br/>
            </remarks>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.NotifyTextConvert(SpiralLab.Sirius2.Winforms.Marker.IMarker,SpiralLab.Sirius2.Winforms.Entity.ITextConvertible)">
            <summary>
            Notify event for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible">ITextConvertible</see> when do <see cref="M:SpiralLab.Sirius2.Winforms.Entity.IMarkerable.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">Mark</see>
            </summary>
            <remarks>
            It works with <see cref="P:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible.IsConvertedText">ITextConvertible.IsConvertedText</see> is <c>True</c> only. <br/>
            Try to convert every do <see cref="M:SpiralLab.Sirius2.Winforms.Entity.IMarkerable.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">Mark</see>. <br/>
            Consider as its working within async threads. <br/>
            Used by internally. <br/>
            </remarks>
            <param name="marker"><see cref="T:SpiralLab.Sirius2.Winforms.Marker.IMarker">IMarker</see> (Can be <see cref="T:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual">MarkerVirtual</see> if do simulate laser path)</param>
            <param name="textConvertible"><c>ITextConvertible</c></param>
            <returns>Converted text data (if failed, <c>SourceText</c> has returned)</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.NotifyMarkPen(SpiralLab.Sirius2.Winforms.Entity.EntityPen)">
            <summary>
            Notify event for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPen">EntityPen</see> when do marks
            </summary>
            <param name="pen"><c>EntityPen</c></param>
            <remarks>
            Consider as its working within async threads. <br/>
            Used by internally. <br/>
            </remarks>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.NotifyScriptEvent(SpiralLab.Sirius2.Winforms.Marker.IMarker,SpiralLab.Sirius2.Winforms.Entity.EntityScriptEvent)">
            <summary>
            Notify event for <see cref="T:SpiralLab.Sirius2.Winforms.Script.IScript">IScript</see>
            </summary>
            <remarks>
            Consider as its working within async threads. <br/>
            Used by internally. <br/>
            </remarks>
            <param name="marker"><c>IMarker</c></param>
            <param name="entity"><c>EntityScriptEvent</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.PenEntityWork(SpiralLab.Sirius2.Winforms.Entity.EntityPen)">
            <summary>
            Default mark routine for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPen">EntityPen</see>
            </summary>
            <remarks>
            Consider as its working within async threads. <br/>
            </remarks>
            <param name="pen"><c>EntityPen</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual">
            <summary>
            MarkerVirtual
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual.thread">
            <summary>
            internal marker thread 
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual.layers">
            <summary>
            list of layers to mark
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual.#ctor(System.Int32,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="index">Index</param>
            <param name="name">Name</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual.Dispose(System.Boolean)">
            <inheritdoc/>  
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual.Ready(SpiralLab.Sirius2.Winforms.IDocument,SpiralLab.Sirius2.Winforms.IView,SpiralLab.Sirius2.Scanner.Rtc.IRtc,SpiralLab.Sirius2.Laser.ILaser,SpiralLab.Sirius2.PowerMeter.IPowerMeter,SpiralLab.Sirius2.Winforms.Remote.IRemote)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual.Start">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual.Stop">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual.Reset">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual.LayerWork(System.Int32,SpiralLab.Sirius2.Winforms.Entity.EntityLayer,SpiralLab.Sirius2.Mathematics.Offset)">
            <summary>
            Mark each <c>EntityLayer</c>
            </summary>
            <remarks>
            Consider as its working within async threads. <br/>
            Helpful current working sets are <c>CurrentOffsetIndex</c>, <c>CurrentOffset</c>, <c>CurrentLayerIndex</c>, <c>CurrentLayer</c>. <br/>
            </remarks> 
            <param name="offsetIndex">Current index of offset (0,1,2,...)</param>
            <param name="layer">Current <c>EntityLayer</c></param>
            <param name="offset">Current <c>Offset</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual.EntityWork(System.Int32,SpiralLab.Sirius2.Winforms.Entity.EntityLayer,System.Int32,SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Mark each <c>IEntity</c>
            </summary>
            <remarks>
            Consider as its working within async threads. <br/>
            Helpful current working sets are <c>CurrentOffsetIndex</c>, <c>CurrentOffset</c>, <c>CurrentLayerIndex</c>, <c>CurrentLayer</c>, <c>CurrentEntityIndex</c>, <c>CurrentEntity</c>. <br/>
            </remarks> 
            <param name="offsetIndex">Current index of offset (0,1,2,...)</param>
            <param name="layer">Current <c>EntityLayer</c></param>
            <param name="entityIndex">Current index of entity</param>
            <param name="entity">Current <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual.MarkerThread">
            <summary>
            Marker thread for async workds
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis">
            <summary>
            MarkerSyncAxis
            </summary>
            <remarks>
            Used with Rtc6SyncAxis <br/>
            Supported useful features like as <see cref="T:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.MarkProcedures">MarkProcedures</see> and <see cref="T:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.MarkTargets">MarkTargets</see>. <br/>
            </remarks>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.MarkTargets">
            <summary>
            Mark targets
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.MarkTargets.All">
            <summary>
            All entities
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.MarkTargets.Selected">
            <summary>
            Selected entities
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.MarkProcedures">
            <summary>
            Mark procedures
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.MarkProcedures.LayerFirst">
            <summary>
            Order of marks: Mark Layer(s) at Offset1 -> Mark Layer(s) at Offset2, ...
            <code>
            //Pseudo codes
            for (int i = 0; i &lt; Offsets.Length; i++)
            {
                foreach (var layer in Layers)
                {
                    Laser.ListBegin();
                    Rtc.ListBegin();
                    ...
                    LayerWork(i, layer, Offsets[i]);
                    ...
                    Laser.ListEnd();
                    Rtc.ListEnd();
                    Rtc.ListExecute(true);
                    ...
                }
            }
            </code>
            <remarks>
            Default: <c>MarkProcedures.LayerFirst</c>
            </remarks>
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.MarkProcedures.OffsetFirst">
            <summary>
            Order of marks: Mark Layer1 at Offset(s) -> Mark Layer2 at Offset(s), ... 
            <code>
            //Pseudo codes
            foreach (var layer in Layers)
            {
                Laser.ListBegin();
                Rtc.ListBegin();        
                for (int i = 0; i &lt; Offsets.Length; i++)
                {
                    ...
                    LayerWork(i, layer, Offsets[i]);
                    ...
                }
                Laser.ListEnd();
                Rtc.ListEnd();
                Rtc.ListExecute(true);
            }
            </code>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.MarkTarget">
            <summary>
            Target entities to mark
            </summary>
            <remarks>
            Default: <see cref="F:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.MarkTargets.All">MarkTargets.All</see> <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.markTarget">
            <summary>
            Internal <c>MarkTargets</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.MarkProcedure">
            <summary>
            Mark procedure
            </summary>
            <remarks>
            Default: <see cref="F:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.MarkProcedures.LayerFirst">MarkProcedures.LayerFirst</see> <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.markProcedure">
            <summary>
            Internal <c>MarkProcedures</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.OperationStatusColor">
            <summary>
            Op status 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.IsMeasurementPlot">
            <summary>
            Is plot simulation output to syncAxis viewer
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.isMeasurementPlot">
            <summary>
            Is plot measurement session to graph or not
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.thread">
            <summary>
            Internal marker thread 
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.layers">
            <summary>
            list of layers to mark
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.#ctor(System.Int32,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="index">Index</param>
            <param name="name">Name</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.Dispose(System.Boolean)">
            <inheritdoc/>  
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.Ready(SpiralLab.Sirius2.Winforms.IDocument,SpiralLab.Sirius2.Winforms.IView,SpiralLab.Sirius2.Scanner.Rtc.IRtc,SpiralLab.Sirius2.Laser.ILaser,SpiralLab.Sirius2.PowerMeter.IPowerMeter,SpiralLab.Sirius2.Winforms.Remote.IRemote)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.Start">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.Stop">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.Reset">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.LayerWork(System.Int32,SpiralLab.Sirius2.Winforms.Entity.EntityLayer,SpiralLab.Sirius2.Mathematics.Offset)">
            <summary>
            Mark each <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityLayer">EntityLayer</see> 
            </summary>
            <remarks>
            Helpful current working sets are <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentOffsetIndex">CurrentOffsetIndex</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentOffset">CurrentOffset</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentLayerIndex">CurrentLayerIndex</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentLayer">CurrentLayer</see>. <br/>
            Consider as its working within async threads. <br/>
            </remarks> 
            <param name="offsetIndex">Current index of offset (0,1,2,...)</param>
            <param name="layer">Current <c>EntityLayer</c></param>
            <param name="offset">Current <c>Offset</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.EntityWork(System.Int32,SpiralLab.Sirius2.Winforms.Entity.EntityLayer,System.Int32,SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Mark each <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> 
            </summary>
            <remarks>
            Helpful current working sets are <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentOffsetIndex">CurrentOffsetIndex</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentOffset">CurrentOffset</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentLayerIndex">CurrentLayerIndex</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentLayer">CurrentLayer</see>. <br/>
            Consider as its working within async threads. <br/>
            </remarks> 
            <param name="offsetIndex">Current index of offset (0,1,2,...)</param>
            <param name="layer">Current <c>EntityLayer</c></param>
            <param name="entityIndex">Current index of entity</param>
            <param name="entity">Current <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.MarkerThreadLayerFirst">
            <summary>
            Marker thread #1
            </summary>
            <remarks>
            <see cref="F:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.MarkProcedures.LayerFirst">LayerFirst</see> <br/>
            Move offset1 and Mark layers -> Move offset2 and Mark layers , ... <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.MarkerThreadOffsetFirst">
            <summary>
            Marker thread #2
            </summary>
            <remarks>
            <see cref="F:SpiralLab.Sirius2.Winforms.Marker.MarkerSyncAxis.MarkProcedures.OffsetFirst">OffsetFirst</see> <br/>
            Mark layer1 with offset1 and offset2, ... -> Mark layer2 with offset1 and offset2, ... <br/>
            </remarks>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc">
            <summary>
            MarkerRtc
            </summary>
            <remarks>
            Used with RTC5,6,6e <br/>
            Used with <see cref="M:SpiralLab.Sirius2.Scanner.Rtc.IRtc.ListBegin(SpiralLab.Sirius2.Scanner.Rtc.ListTypes)">IRtc.ListBegin</see> and <see cref="M:SpiralLab.Sirius2.Scanner.Rtc.IRtc.ListEnd">IRtc.ListEnd</see> at each <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityLayer">EntityLayer</see>. <br/>
            Supported <see cref="P:SpiralLab.Sirius2.Winforms.Entity.EntityLayerRtc.IsALC">EntityLayer.IsALC</see> feature. <br/>
            Supported <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.IsExternalStart">IsExternalStart</see> feature. <br/>
            Supported useful features like as <see cref="T:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkProcedures">MarkProcedures</see> and <see cref="T:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkTargets">MarkTargets</see>. <br/>
            </remarks>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkTargets">
            <summary>
            Mark targets
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkTargets.All">
            <summary>
            All entities
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkTargets.Selected">
            <summary>
            Selected entities
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkProcedures">
            <summary>
            Mark procedures
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkProcedures.LayerFirst">
            <summary>
            Order of marks: Mark Layer(s) at Offset1 -> Mark Layer(s) at Offset2, ...
            <code>
            //Pseudo codes
            for (int i = 0; i &lt; Offsets.Length; i++)
            {
                foreach (var layer in Layers)
                {
                    Laser.ListBegin();
                    Rtc.ListBegin();
                    ...
                    LayerWork(i, layer, Offsets[i]);
                    ...
                    Laser.ListEnd();
                    Rtc.ListEnd();
                    Rtc.ListExecute(true);
                    ...
                }
            }
            </code>
            <remarks>
            Default: <see cref="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkProcedures.LayerFirst">MarkProcedures.LayerFirst</see> <br/>
            </remarks>
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkProcedures.OffsetFirst">
            <summary>
            Order of marks: Mark Layer1 at Offset(s) -> Mark Layer2 at Offset(s), ... 
            <code>
            //Pseudo codes
            foreach (var layer in Layers)
            {
                Laser.ListBegin();
                Rtc.ListBegin();        
                for (int i = 0; i &lt; Offsets.Length; i++)
                {
                    ...
                    LayerWork(i, layer, Offsets[i]);
                    ...
                }
                Laser.ListEnd();
                Rtc.ListEnd();
                Rtc.ListExecute(true);
            }
            </code>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkTarget">
            <summary>
            Target entities to mark
            </summary>
            <remarks>
            Default: <see cref="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkTargets.All">MarkTargets.All</see> <br/>
            Notify <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">PropertyChanged</see> event. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.markTarget">
            <summary>
            Internal <c>MarkTargets</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkProcedure">
            <summary>
            Mark procedure
            </summary>
            <remarks>
            Default: <see cref="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkProcedures.LayerFirst">MarkProcedures.LayerFirst</see> <br/>
            Notify <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">PropertyChanged</see> event. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.markProcedure">
            <summary>
            Internal <c>MarkProcedures</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.IsExternalStart">
            <summary>
            Enable/Disable External /START trigger
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.IsRepeatList">
            <summary>
            Enable/Disable Repeat List Bufffer by Jump to Begin of List Infinitely
            </summary>
            <remarks>
            Used with <see cref="F:SpiralLab.Sirius2.Scanner.Rtc.ListTypes.Single">ListTypes.Single</see> and <see cref="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkProcedures.OffsetFirst">MarkProcedures.OffsetFirst</see> only. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.ListType">
            <summary>
            <c>ListType</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.Session">
            <summary>
            Array of <see cref="T:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession">MeasurementSession</see> 
            </summary>
            <remarks>
            Session = <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin">EntityMeasurementBegin</see> + <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementEnd">EntityMeasurementEnd</see> <br/>
            Valid when <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin">EntityMeasurementBegin</see> has executed. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.sessionQueue">
            <summary>
            Queue for <see cref="T:SpiralLab.Sirius2.Winforms.Marker.MeasurementSession">MeasurementSession</see> 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.CurrentSession">
            <summary>
            Current (or last measurement session)
            </summary>
            <remarks>
            Valid when <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityMeasurementBegin">EntityMeasurementBegin</see> has executed. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.IsMeasurementPlot">
            <summary>
            Is plot measurement session to graph or not
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.isMeasurementPlot">
            <summary>
            Is plot measurement session to graph or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MaxMeasurementTime">
            <summary>
            Max measurement time
            </summary>
            <remarks>
            RTC Max measurement time
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.IsCheckTempOk">
            <summary>
            Check scanner temperature when start of mark
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.IsCheckPowerOk">
            <summary>
            Check scanner power supply when start of mark
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.IsCheckPositionAck">
            <summary>
            Check scanner position acknowledge when start of mark
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.thread">
            <summary>
            Internal marker thread 
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.layers">
            <summary>
            List of layers to mark
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.#ctor(System.Int32,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="index">Index</param>
            <param name="name">Name</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.Dispose(System.Boolean)">
            <inheritdoc/>  
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.Ready(SpiralLab.Sirius2.Winforms.IDocument,SpiralLab.Sirius2.Winforms.IView,SpiralLab.Sirius2.Scanner.Rtc.IRtc,SpiralLab.Sirius2.Laser.ILaser,SpiralLab.Sirius2.PowerMeter.IPowerMeter,SpiralLab.Sirius2.Winforms.Remote.IRemote)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.RegisterCharacterSet">
            <summary>
            Register (or download) character set (font glyph) into RTC controller if <see cref="T:SpiralLab.Sirius2.Winforms.Entity.ITextRegisterable">ITextRegisterable</see> has exist. <br/>
            </summary>
            <remarks>
            If <c>ITextRegisterable</c> entity has exist and modifed, it should be registered(or downloaded). <br/>
            Re-registering(or downloading) takes time for downloading charactersets. <br/>
            </remarks>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.Start">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.Stop">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.Reset">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.LayerWork(System.Int32,SpiralLab.Sirius2.Winforms.Entity.EntityLayer,SpiralLab.Sirius2.Mathematics.Offset)">
            <summary>
            Mark each <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityLayer">EntityLayer</see> 
            </summary>
            <remarks>
            Helpful current working sets are <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentOffsetIndex">CurrentOffsetIndex</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentOffset">CurrentOffset</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentLayerIndex">CurrentLayerIndex</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentLayer">CurrentLayer</see>. <br/>
            Consider as its working within async threads. <br/>
            </remarks> 
            <param name="offsetIndex">Current index of offset (0,1,2,...)</param>
            <param name="layer">Current <c>EntityLayer</c></param>
            <param name="offset">Current <c>Offset</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.EntityWork(System.Int32,SpiralLab.Sirius2.Winforms.Entity.EntityLayer,System.Int32,SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Mark each <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> 
            </summary>
            <remarks>
            Helpful current working sets are <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentOffsetIndex">CurrentOffsetIndex</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentOffset">CurrentOffset</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentLayerIndex">CurrentLayerIndex</see>, <see cref="P:SpiralLab.Sirius2.Winforms.Marker.MarkerBase.CurrentLayer">CurrentLayer</see>. <br/>
            Consider as its working within async threads. <br/>
            </remarks> 
            <param name="offsetIndex">Current index of offset (0,1,2,...)</param>
            <param name="layer">Current <c>EntityLayer</c></param>
            <param name="entityIndex">Current index of entity</param>
            <param name="entity">Current <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkerThreadLayerFirst">
            <summary>
            Marker thread #1
            </summary>
            <remarks>
            <see cref="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkProcedures.LayerFirst">LayerFirst</see> <br/>
            Move offset1 and Mark layers -> Move offset2 and Mark layers , ... <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkerThreadOffsetFirst">
            <summary>
            Marker thread #2
            </summary>
            <remarks>
            <see cref="F:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.MarkProcedures.OffsetFirst">OffsetFirst</see> <br/>
            Mark layer1 with offset1 and offset2, ... -> Mark layer2 with offset1 and offset2, ... <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.MarkerRtc.NotifyPlot">
            <summary>
            Plot measurement to graph by gnuplot
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Marker.IMarker">
            <summary>
            IMarker interface
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnStarted">
            <summary>
            Event for marker has started
            </summary>
            <remarks>
            Consider as its working within async threads. <br/>
            </remarks> 
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnEnded">
            <summary>
            Event for marker has ended
            </summary>
            <remarks>
            Consider as its working within async threads. <br/>
            'True' is sucess to mark. <br/>
            'False' is fail to mark. <br/>
            </remarks> 
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnBeforeLayer">
            <summary>
            Event for before do layer works
            </summary>
            <remarks>
            Do external control works like as i/o, motion stage controls before mark layer.<br/>
            If returned False, mark progress would be stopped. <br/>
            Consider as its working within async threads. <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnAfterLayer">
            <summary>
            Event for after do layer works
            </summary>
            <remarks>
            Do external control works like as i/o, motion stage controls after mark layer.<br/>
            If returned False, mark progress would be stopped. <br/>
            Consider as its working within async threads. <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnBeforeEntity">
            <summary>
            Event for before do entity works
            </summary>
            <remarks>
            Consider as within RTC list buffer is executing.<br/>
            If returned False, mark progress would be stopped. <br/>
            Consider as its working within async threads. <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnAfterEntity">
            <summary>
            Event for after do layer works
            </summary>
            <remarks>
            Consider as within RTC list buffer is executing. <br/>
            If returned False, mark progress would be stopped. <br/>
            Consider as its working within async threads. <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnMarkPen">
             <summary>
             Event for do <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPen">EntityPen</see> marks
             <code>
             // User can override default mark routine for EntityPen
             marker.OnMarkPen += MyMarkPen;
             ...
             protected override bool MyMarkPen(EntityPen pen)
             {
                var rtc = marker.Rtc;
                var laser = marker.Laser;
                var rtcExtension = rtc as IRtcExtension;
                var rtcSkywriting = rtc as IRtcSkyWriting;
                var rtcWobbel = rtc as IRtcWobbel;
                var rtcSyncAxis = rtc as IRtcSyncAxis;
                bool success = true;
                bool isModifiedFrequency = false;
                if (laser is ILaserPowerControl laserPowerControl)
                {
                     switch (laserPowerControl.PowerControlMethod)
                     {
                         case PowerControlMethods.Frequency:
                             rtc.PulseWidth = pen.PulseWidth;
                             isModifiedFrequency = true;
                             break;
                         case PowerControlMethods.DutyCycle:
                             rtc.Frequency = pen.Frequency;
                             success &amp;= laserPowerControl.ListPower(pen.Power, pen.PowerMapCategory);
                             isModifiedFrequency = true;
                             break;
                         default:
                             success &amp;= laserPowerControl.ListPower(pen.Power, pen.PowerMapCategory);
                             break;
                     }
                }
                if (!isModifiedFrequency)
                     success &amp;= rtc.ListFrequency(pen.Frequency, pen.PulseWidth);
                success &amp;= rtc.ListDelay(pen.LaserOnDelay, pen.LaserOffDelay, pen.ScannerJumpDelay, pen.ScannerMarkDelay, pen.ScannerPolygonDelay);
                if (null != rtcExtension)
                {
                    if (pen.IsScannerVariablePolygonDelay || pen.IsScannerVariableJumpDelay)
                        success &amp;= rtcExtension.ListDelayVariable(pen.IsScannerVariablePolygonDelay, pen.ScannerVariablePolygonDelayEdgeLevel, pen.IsScannerVariableJumpDelay, pen.ScannerVariableJumpDelayMin, pen.ScannerVariableJumpLength);
                    else
                        success &amp;= rtcExtension.ListDelayVariable(false, 0, false, 0, 0);
                }
                success &amp;= rtc.ListSpeed(pen.JumpSpeed, pen.MarkSpeed);
            
                if (null != rtcExtension)
                {
                    success &amp;= rtcExtension.ListFirstPulseKiller(pen.LaserFpk);
                    success &amp;= rtcExtension.ListQSwitchDelay(pen.LaserQSwitchDelay);
                }
                if (null != rtcSkywriting)
                {
                     double cosineLimit = Math.Cos(Mathematics.MathHelper.DegToRad(pen.AngularLimit));
                     if (pen.IsSkyWritingEnabled)
                         success &amp;= rtcSkywriting.ListSkyWritingBegin(pen.SkyWritingMode, pen.LaserOnShift, pen.TimeLag, pen.Prev, pen.Post, cosineLimit);
                     else
                         success &amp;= rtcSkywriting.ListSkyWritingEnd();
                }
                if (null != rtcWobbel)
                {
                    if (pen.IsWobbelEnabled)
                        success &amp;= rtcWobbel.ListWobbelBegin(pen.WobbelParallel, pen.WobbelPerpendicular, pen.WobbelFrequency, pen.WobbelShape);
                    else
                        success &amp;= rtcWobbel.ListWobbelEnd();
                }
                if (null != rtcSyncAxis)
                {
                    if (pen.MinMarkSpeed > 0)
                        success &amp;= rtcSyncAxis.ListSpeedMinMark(pen.MinMarkSpeed);
                    if (pen.ApproxBlendLimit > 0)
                        success &amp;= rtcSyncAxis.ListApproxBlendLimit(pen.ApproxBlendLimit);
                }
                return success;
             }
             </code>
             </summary>
             <remarks>
             User can add event handler for override <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPen">EntityPen</see> mark routines. <br/>
             </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnScriptEvent">
            <summary>
            Event for <c>EntityScriptEvent</c> by <c>IScript</c> inherited from <c>ScriptBase</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.Document">
            <summary>
            <see cref="T:SpiralLab.Sirius2.Winforms.IDocument">IDocument</see> interface
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.View">
            <summary>
            <see cref="T:SpiralLab.Sirius2.Winforms.IView">IView</see> interface
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.Rtc">
            <summary>
            <see cref="T:SpiralLab.Sirius2.Scanner.Rtc.IRtc">IRtc</see> interface
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.Laser">
            <summary>
            <see cref="T:SpiralLab.Sirius2.Laser.ILaser">ILaser</see> interface
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.PowerMeter">
            <summary>
            <see cref="T:SpiralLab.Sirius2.PowerMeter.IPowerMeter">IPowerMeter</see> interface
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.Remote">
            <summary>
            <see cref="T:SpiralLab.Sirius2.Winforms.Remote.IRemote">IRemote</see> interface
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnTextConvert">
            <summary>
            Event for convert entity's text data
            <code>
            marker.OnTextConvert += Text_OnTextConvert;
            ...
            string Text_OnTextConvert(IMarker marker, ITextConvertible textConvertible)
            {
                var entity = textConvertible as IEntity;
                switch(entity.Name)
                {
                    case "TextEntityName1":
                        // For example, "yyyyMMdd HH:mm:ss"
                        return DateTime.Now.ToString(textConvertible.SourceText);
                    default:
                        return textConvertible.SourceText;
                }
            }
            </code>
            </summary>
            <remarks>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible">ITextConvertible</see> interface. <br/>
            User can use <see cref="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.TextConvertScriptFile">IMarker.TextConvertScriptFile</see> script file instead.
            User can register event handler to convert data of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible">ITextConvertible</see>. <br/>
            Event will be fired when <see cref="P:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible.IsConvertedText">ITextConvertible.IsConvertedText</see> is <c>True</c> only. <br/>
            Event will be fired whenever do <see cref="M:SpiralLab.Sirius2.Winforms.Entity.IMarkerable.Mark(SpiralLab.Sirius2.Winforms.Marker.IMarker)">IMarkerable.Mark</see> or <see cref="M:SpiralLab.Sirius2.Winforms.Entity.IEntity.Regen">IEntity.Regen</see>. <br/>
            If user event handler is not attached, used <see cref="P:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible.SourceText">ITextConvertible.SourceText</see> value. <br/>
            <see cref="T:SpiralLab.Sirius2.Winforms.Marker.IMarker">IMarker</see> value can be <c>NULL</c> while <see cref="M:SpiralLab.Sirius2.Winforms.Entity.IEntity.Regen">IEntity.Regen</see>. <br/>
            <see cref="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.CurrentOffsetIndex">IMarker.CurrentOffsetIndex</see> values are useful when marks at multiple offset positions. <br/>
            <see cref="T:SpiralLab.Sirius2.Winforms.Marker.IMarker">IMarker</see> can be set as <see cref="T:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual">MarkerVirtual</see> if do simulate laser path. <br/>
            Consider as its working within async threads. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.IsTextRegistering">
            <summary>
            Flag for registering <c>ITextRegisterable</c> entities or not
            </summary>
            <remarks>
            Do NOT edit. Used by internally. <br/>
            Used with <c>MarkerRtc</c> only. <br/>
            Used with <c>IRtcCharacterSet</c>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.TextConvertScriptFile">
            <summary>
            External script file
            <code>
            IMarker.TextConvertScriptFile = Path.Combine(Config.ScriptPath, "demo1.cs");
            //or to disable external script file
            IMarker.TextConvertScriptFile = string.Empty;
            </code>
            <code>
            public class UserScript : SpiralLab.Sirius2.Winforms.Script.ScriptBase
            {
                public UserScript(IMarker marker)
                    : base(marker)
                {
                    Name = "name";
                    Description = "description";
                }
                
                public override void OnStarted(IMarker marker)
                {
                }
                public override string OnTextConvert(IMarker marker, ITextConvertible textConvertible)
                {
                    ...
                    return textConvertible.SourceText;
                }
                public override void OnEnded(IMarker marker)
                {
                }
                ...
            }
            </code>
            </summary>
            <remarks>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible">ITextConvertible</see> interface. <br/>
            User can use <see cref="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnTextConvert">IMarker.OnTextConvert</see> event instead. <br/>
            Reference script files are "sample.cs", "demo1.cs", "demo2.cs" at <see cref="P:SpiralLab.Sirius2.Winforms.Config.ScriptPath">Config.ScriptPath</see>. <br/>
            <see cref="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnTextConvert">OnTextConvert</see> event will be fired when <see cref="P:SpiralLab.Sirius2.Winforms.Entity.ITextConvertible.IsConvertedText">ITextConvertible.IsConvertedText</see> is <c>True</c> only. <br/>
            <see cref="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnTextConvert">OnTextConvert</see> event will be fired whenever do <c>IMarkerable.Mark</c> or <c>IEntity.Regen</c>. <br/>
            <see cref="T:SpiralLab.Sirius2.Winforms.Marker.IMarker">IMarker</see> value can be <c>NULL</c> while <see cref="M:SpiralLab.Sirius2.Winforms.Entity.IEntity.Regen">IEntity.Regen</see>. <br/>
            <see cref="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.CurrentOffsetIndex">IMarker.CurrentOffsetIndex</see> values are useful when marks at multiple offset positions. <br/>
            <see cref="T:SpiralLab.Sirius2.Winforms.Marker.IMarker">IMarker</see> can be set as <see cref="T:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual">MarkerVirtual</see> if do simulate laser path. <br/>
            Consider as its working within async threads. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.TextConvertScriptInstance">
            <summary>
            Instance for created by external script
            </summary>
            <remarks>
            <code>
            //MarkerScriptBase instance woule be create if TextConvertScriptFile has assigned 
            TextConvertScriptInstance = new MarkerScript(marker);
            </code>
            If <c>TextConvertScriptFile</c> has assigned, <c>TextConvertInstance</c> would be created with new instance. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.IsScriptError">
            <summary>
            Result of compilation of script file
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.ScriptLineIfError">
            <summary>
            Script line of code if error has occured
            </summary>
            <remarks>
            Default : <br/>
            Valid if <c>IsScriptError</c> is <c>True</c>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.Offsets">
            <summary>
            Array of offset (dx, dy, dz and angle z)
            <code>
            var offsets = new SpiralLab.Sirius2.Mathematics.Offset[] 
            {
                new Offset(-10, 0, 0),
                new Offset(10, 0, 0),
            };
            marker.Offsets = offets;
            marker.Start(); 
            </code>
            </summary>
            <remarks>
            Default: <see cref="P:SpiralLab.Sirius2.Mathematics.Offset.Zero">SpiralLab.Sirius2.Mathematics.Offset.Zero</see>. <br/> 
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.CurrentOffsetIndex">
            <summary>
            Current working(or marking) offset index
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.CurrentOffset">
            <summary>
            Current working(or marking) offset 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.CurrentLayerIndex">
            <summary>
            Current working(or marking layer) index
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.CurrentLayer">
            <summary>
            Current working(or marking layer) 
            </summary>
            <remarks>
            Used with <c>IEntity.IsMarkerable</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.CurrentEntityIndex">
            <summary>
            Current working(or marking) entity index
            </summary>
            <remarks>
            Used with <c>IEntity.IsMarkerable</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.CurrentEntity">
            <summary>
            Current working(or marking) entity 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.CurrentPenColor">
            <summary>
            Current working(or marking) pen color
            </summary>
            <remarks>
            Set value by internally. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.IsJumpToOriginAfterFinished">
            <summary>
            Jump to origin (0,0) location after mark has finished
            </summary>
            <remarks>
            Must be <c>True</c> if using <see cref="T:SpiralLab.Sirius2.Scanner.Rtc.SyncAxis.IRtcSyncAxis">IRtcSyncAxis</see>. <br/>
            Do syncAXIS recalculate every trajectory planning from origin (0,0) location. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.AccumulatedMarks">
            <summary>
            Accumulated counts of mark
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.TimeSpan">
            <summary>
            Processing <c>TimeSpan</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.IsReady">
            <summary>
            Ready status
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.IsBusy">
            <summary>
            Busy status
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.IsError">
            <summary>
            Error status
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.Tag">
            <summary>
            User data
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.IMarker.Initialize">
            <summary>
            Initialize
            </summary>
            <returns>Success or not</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.IMarker.Ready(SpiralLab.Sirius2.Winforms.IDocument,SpiralLab.Sirius2.Winforms.IView,SpiralLab.Sirius2.Scanner.Rtc.IRtc,SpiralLab.Sirius2.Laser.ILaser,SpiralLab.Sirius2.PowerMeter.IPowerMeter,SpiralLab.Sirius2.Winforms.Remote.IRemote)">
            <summary>
            Ready
            </summary>
            <remarks>
            Must be once <see cref="M:SpiralLab.Sirius2.Winforms.Marker.IMarker.Ready(SpiralLab.Sirius2.Winforms.IDocument,SpiralLab.Sirius2.Winforms.IView,SpiralLab.Sirius2.Scanner.Rtc.IRtc,SpiralLab.Sirius2.Laser.ILaser,SpiralLab.Sirius2.PowerMeter.IPowerMeter,SpiralLab.Sirius2.Winforms.Remote.IRemote)">Ready</see> before do <see cref="M:SpiralLab.Sirius2.Winforms.Marker.IMarker.Start">Start</see>. <br/>
            </remarks>
            <param name="document"><c>IDocument</c></param>
            <param name="view"><c>IView</c></param>
            <param name="rtc"><c>IRtc</c></param>
            <param name="laser"><c>ILaser</c></param>
            <param name="powerMeter"><c>IPowerMeter</c></param>
            <param name="remote"><c>IRemote</c></param>
            <returns>Success or not</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.IMarker.Start">
            <summary>
            Start
            </summary>
            <remarks>
            Notify <see cref="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnStarted">OnStarted</see>, <see cref="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnEnded">OnEnded</see> event. <br/>
            Notify <see cref="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnBeforeLayer">OnBeforeLayer</see>, <see cref="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnAfterLayer">OnAfterLayer</see> event(s) for each layers. <br/>
            Notify <see cref="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnBeforeEntity">OnBeforeEntity</see>, <see cref="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnAfterEntity">OnAfterEntity</see> event(s) for each entities. <br/>
            Notify <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">PropertyChanged</see> events. <br/>
            </remarks>
            <returns>Success or not</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.IMarker.Stop">
            <summary>
            Stop
            </summary>
            <remarks>
            Notify <see cref="E:SpiralLab.Sirius2.Winforms.Marker.IMarker.OnEnded">OnEnded</see> event. <br/>
            Notify <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">PropertyChanged</see> events. <br/>
            </remarks>
            <returns>Success or not</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Marker.IMarker.Reset">
            <summary>
            Reset
            </summary>
            <remarks>
            If <see cref="P:SpiralLab.Sirius2.Winforms.Marker.IMarker.IsError">IsError</see> is <c>True</c>, try to <see cref="M:SpiralLab.Sirius2.Winforms.Marker.IMarker.Reset">Reset</see> for clear error status. <br/>
            Notify <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">PropertyChanged</see> events. <br/>
            </remarks>
            <returns>Success or not</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.marker.markerrtcfast">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.Check_C">
            <summary>
              Looks up a localized string similar to Check.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.External__START_DESC">
            <summary>
              Looks up a localized string similar to Enable/Disable External /START Trigger. (Used with ListTypes.Single only).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.External__START_DISP">
            <summary>
              Looks up a localized string similar to External /START.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.List_type_DESC">
            <summary>
              Looks up a localized string similar to RTC List Type. Single or Auto(Double) buffer.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.List_type_DISP">
            <summary>
              Looks up a localized string similar to List type.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.MaxMeasureTime_DESC">
            <summary>
              Looks up a localized string similar to Max. Time to Measurement (sec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.MaxMeasureTime_DISP">
            <summary>
              Looks up a localized string similar to Time.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.Measurement_C">
            <summary>
              Looks up a localized string similar to Measurement.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.Plot_DESC">
            <summary>
              Looks up a localized string similar to Measurement Plot as Graph After Finish to Mark. (Create Measurement Begin, End entity at First.(.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.Plot_DISP">
            <summary>
              Looks up a localized string similar to Measurement plot.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.Position_DESC">
            <summary>
              Looks up a localized string similar to Check Scanner Position Acknowledge Status before Start Mark.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.Position_DISP">
            <summary>
              Looks up a localized string similar to Position ack.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.Power_DESC">
            <summary>
              Looks up a localized string similar to Check Scanner Power Status when Start Mark.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.Power_DISP">
            <summary>
              Looks up a localized string similar to Power supply.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.Repeat_list_DESC">
            <summary>
              Looks up a localized string similar to Repeatly Jump to begin of list buffer (Used with ListTypes.Single and MarkProcedures.OffsetFirst only).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.Repeat_list_DISP">
            <summary>
              Looks up a localized string similar to Repeat list.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.Session_DESC">
            <summary>
              Looks up a localized string similar to Entity(MeasurementBegin) for Measurement Session.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.Session_DISP">
            <summary>
              Looks up a localized string similar to Measurement session.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.Temp_DESC">
            <summary>
              Looks up a localized string similar to Check Scanner Temperature Status when Start Mark.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtcfast.Temp_DISP">
            <summary>
              Looks up a localized string similar to Temperature.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.marker.markersyncaxis">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markersyncaxis.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markersyncaxis.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markersyncaxis.Measurement_C">
            <summary>
              Looks up a localized string similar to Measurement.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markersyncaxis.Operation_Status_DESC">
            <summary>
              Looks up a localized string similar to Operation Status.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markersyncaxis.Plot_DESC">
            <summary>
              Looks up a localized string similar to Plot as syncAXIS Viwer After Finish to Mark (Simulation Mode).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markersyncaxis.Plot_DISP">
            <summary>
              Looks up a localized string similar to Plot.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markersyncaxis.Status_DISP">
            <summary>
              Looks up a localized string similar to Status.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markersyncaxis.SyncAXIS_C">
            <summary>
              Looks up a localized string similar to SyncAxis.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.marker.markerbase">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.AccumulatedMarks_DESC">
            <summary>
              Looks up a localized string similar to Accumulated Mark Counts.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.AccumulatedMarks_DISP">
            <summary>
              Looks up a localized string similar to Marks.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Basic_C">
            <summary>
              Looks up a localized string similar to Basic.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Busy_DESC">
            <summary>
              Looks up a localized string similar to Busy Status.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Busy_DISP">
            <summary>
              Looks up a localized string similar to Busy.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Entity_DESC">
            <summary>
              Looks up a localized string similar to Current(Working) Entity.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Entity_DISP">
            <summary>
              Looks up a localized string similar to Entity.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Entity_Index_DESC">
            <summary>
              Looks up a localized string similar to Current(Working) Entity.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Entity_Index_DISP">
            <summary>
              Looks up a localized string similar to Entity index.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Error_DESC">
            <summary>
              Looks up a localized string similar to Error Status.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Error_DISP">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Index_DESC">
            <summary>
              Looks up a localized string similar to Index.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Index_DISP">
            <summary>
              Looks up a localized string similar to Index.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Jump_Origin_DESC">
            <summary>
              Looks up a localized string similar to Jump to Origin Location After Finish Mark.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Jump_Origin_DISP">
            <summary>
              Looks up a localized string similar to Jump origin.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Layer_DESC">
            <summary>
              Looks up a localized string similar to Current(Working) Layer.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Layer_DISP">
            <summary>
              Looks up a localized string similar to Layer.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Layer_Index_DESC">
            <summary>
              Looks up a localized string similar to Current(Working) Layer Index.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Layer_Index_DISP">
            <summary>
              Looks up a localized string similar to Layer index.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.MarkProc_DESC">
             <summary>
               Looks up a localized string similar to Mark Procedure (Layer First, Offset First)
            Layer First: Move offset1 and Mark layers -&gt; Move offset2 and Mark layers , ...
            Offset First: Mark layer1 with offset1 and offset2, ... -&gt; Mark layer2 with offset1 and offset2, ....
             </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.MarkProc_DISP">
            <summary>
              Looks up a localized string similar to Mark procedure.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.MarkTarget_DESC">
            <summary>
              Looks up a localized string similar to Mark Target for Entity (All or Selected).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.MarkTarget_DISP">
            <summary>
              Looks up a localized string similar to Mark target.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.MarkTime_DESC">
            <summary>
              Looks up a localized string similar to Mark Time (Start and End Time).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.MarkTime_DISP">
            <summary>
              Looks up a localized string similar to Time.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Name_DESC">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Name_DISP">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Offset_DESC">
            <summary>
              Looks up a localized string similar to Current(Working) Offset.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Offset_DISP">
            <summary>
              Looks up a localized string similar to Offset.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Offset_Index_DESC">
            <summary>
              Looks up a localized string similar to Current(Working) Offset Index.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Offset_Index_DISP">
            <summary>
              Looks up a localized string similar to Offset index.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Offsets_DESC">
            <summary>
              Looks up a localized string similar to Array of Offset (Dx, Dy, Dz and Angle Z).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Offsets_DISP">
            <summary>
              Looks up a localized string similar to Offsets.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Pen_Color_DESC">
            <summary>
              Looks up a localized string similar to Current(Working) Pen Color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Pen_Color_DISP">
            <summary>
              Looks up a localized string similar to Pen color.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Ready_DESC">
            <summary>
              Looks up a localized string similar to Ready Status.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Ready_DISP">
            <summary>
              Looks up a localized string similar to Ready.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Script_C">
            <summary>
              Looks up a localized string similar to Script.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.ScriptError_DESC">
            <summary>
              Looks up a localized string similar to Script Compilation Error(s) or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.ScriptError_DISP">
            <summary>
              Looks up a localized string similar to Script error.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.ScriptFile_DESC">
            <summary>
              Looks up a localized string similar to Script File.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.ScriptFile_DISP">
            <summary>
              Looks up a localized string similar to Script file.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.ScriptInstance_DESC">
            <summary>
              Looks up a localized string similar to Script instance.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.ScriptInstance_DISP">
            <summary>
              Looks up a localized string similar to Script instance (Inherited from MarkerScriptBase).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.ScriptLineIfError_DESC">
            <summary>
              Looks up a localized string similar to Script Line of Code If Error.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.ScriptLineIfError_DISP">
            <summary>
              Looks up a localized string similar to Script line.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Status_C">
            <summary>
              Looks up a localized string similar to Status.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerbase.Working_C">
            <summary>
              Looks up a localized string similar to Working.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.marker.markerrtc">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.Check_C">
            <summary>
              Looks up a localized string similar to Check.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.Data_C">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.External__START_DESC">
            <summary>
              Looks up a localized string similar to Enable/Disable External /START Trigger. (Used with ListTypes.Single only).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.External__START_DISP">
            <summary>
              Looks up a localized string similar to External /START.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.List_type_DESC">
            <summary>
              Looks up a localized string similar to RTC List Type. Single or Auto(Double) buffer.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.List_type_DISP">
            <summary>
              Looks up a localized string similar to List type.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.MaxMeasureTime_DESC">
            <summary>
              Looks up a localized string similar to Max. Time to Measurement (sec).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.MaxMeasureTime_DISP">
            <summary>
              Looks up a localized string similar to Time.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.Measurement_C">
            <summary>
              Looks up a localized string similar to Measurement.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.Plot_DESC">
            <summary>
              Looks up a localized string similar to Measurement Plot as Graph After Finish to Mark. (Create Measurement Begin, End entity at First.(.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.Plot_DISP">
            <summary>
              Looks up a localized string similar to Measurement plot.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.Position_DESC">
            <summary>
              Looks up a localized string similar to Check Scanner Position Acknowledge Status before Start Mark.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.Position_DISP">
            <summary>
              Looks up a localized string similar to Position ack.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.Power_DESC">
            <summary>
              Looks up a localized string similar to Check Scanner Power Status when Start Mark.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.Power_DISP">
            <summary>
              Looks up a localized string similar to Power supply.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.Repeat_list_DESC">
            <summary>
              Looks up a localized string similar to Repeatly Jump to begin of list buffer (Used with ListTypes.Single and MarkProcedures.OffsetFirst only).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.Repeat_list_DISP">
            <summary>
              Looks up a localized string similar to Repeat list.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.Session_DESC">
            <summary>
              Looks up a localized string similar to Entity(MeasurementBegin) for Measurement Session.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.Session_DISP">
            <summary>
              Looks up a localized string similar to Measurement session.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.Temp_DESC">
            <summary>
              Looks up a localized string similar to Check Scanner Temperature Status when Start Mark.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.marker.markerrtc.Temp_DISP">
            <summary>
              Looks up a localized string similar to Temperature.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.OpenGL.GLBufferFactory">
            <summary>
            GLBufferFactory
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLBufferFactory.CreateVertex3(OpenTK.Vector3[])">
            <summary>
            Array of vertex
            </summary>
            <param name="vertices">Array of x,y,z</param>
            <returns><c>GLVertex3Buffer</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLBufferFactory.CreateVertexNormal3(OpenTK.Vector3[])">
            <summary>
            Array of vertex and normal
            </summary>
            <param name="vertexAndNormal">Array of x,nx,y,ny,z,nz</param>
            <returns><c>GLVertex3Normal3Buffer</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLBufferFactory.CreateTexture(System.Drawing.Bitmap)">
            <summary>
            Array of vertex and normal
            </summary>
            <param name="bitmap">Texture <c>Bitmap</c></param>
            <returns><c>GLVertex3T2Buffer</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLBufferFactory.CreateTexture(System.String)">
            <summary>
            Array of vertex and normal
            </summary>
            <param name="imageFileName">Texture image filename</param>
            <returns><c>GLVertex3T2Buffer</c></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.OpenGL.GLVertex3T2Buffer">
            <summary>
            GLVertex3Buffer
            </summary>
            <remarks>
            Array of vertex and texture
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.OpenGL.GLVertex3T2Buffer.Texture">
            <summary>
            Texture
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLVertex3T2Buffer.#ctor(System.String)">
            <summary>
            GLVertex3T2Buffer
            </summary>
            <param name="imageFileName">Texture image filename</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLVertex3T2Buffer.#ctor(System.Drawing.Bitmap)">
            <summary>
            GLVertex3T2Buffer
            </summary>
            <param name="bitmap">Texture <c>Bitmap</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLVertex3T2Buffer.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLVertex3T2Buffer.Bind">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLVertex3T2Buffer.Render(OpenTK.Graphics.OpenGL.PrimitiveType)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.OpenGL.GLVertex3Normal3Buffer">
            <summary>
            GLVertex3Normal3Buffer
            </summary>
            <remarks>
            Array of vertex and normal
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLVertex3Normal3Buffer.#ctor(OpenTK.Vector3[])">
            <summary>
            Array of vertex and normal
            </summary>
            <param name="vertexAndNormal">Array of x,nx,y,ny,z,nz</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLVertex3Normal3Buffer.Render(OpenTK.Graphics.OpenGL.PrimitiveType)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.OpenGL.GLVertex3Buffer">
            <summary>
            GLVertex3Buffer
            </summary>
            <remarks>
            Float X,Y,Z * N
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLVertex3Buffer.#ctor(OpenTK.Vector3[])">
            <summary>
            Array of vertex
            </summary>
            <param name="vertices">Array of x,y,z</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLVertex3Buffer.Render(OpenTK.Graphics.OpenGL.PrimitiveType)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.OpenGL.ICamera">
            <summary>
            ICamera interface 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.Position">
            <summary>
            Position (Eye) vector
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.Up">
            <summary>
            Up vector
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.Front">
            <summary>
            Front vector
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.Right">
            <summary>
            Right vector
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.AspectRatio">
            <summary>
            Ratio of width/height 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.Fov">
            <summary>
            Fov (projection)
            </summary>
            <remarks>
            Angle of field of view. <br/>
            Zoom factor: 0 &lt; Fov &lt; 180. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.ViewMatrix">
            <summary>
            Calculated view-model (lookat) matrix
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.ProjectionMatrix">
            <summary>
            Calculated projection matrix
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.Reset">
            <summary>
            Reset as default
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.LookAt(OpenTK.Vector3)">
            <summary>
            Move look at position to target location
            </summary>
            <param name="target">Look at <c>Vector3</c> location</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.LookAt(OpenTK.Vector3,SpiralLab.Sirius2.Winforms.IView)">
            <summary>
            Move look at position to target location with smoothly
            </summary>
            <param name="target">Look at <c>Vector3</c> location</param>
            <param name="view">Target <c>IView</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.ZoomIn(System.Drawing.Point)">
            <summary>
            Zoom in
            </summary>
            <param name="mouseLocation">Mouse location</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.ZoomOut(System.Drawing.Point)">
            <summary>
            Zoom out
            </summary>
            <param name="mouseLocation">Mouse location</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.ZoomFit(SpiralLab.Sirius2.Winforms.Entity.BoundingBox)">
            <summary>
            Zoom fit
            </summary>
            <param name="bbox"><c>BoundingBox</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.YawPitch(System.Int32,System.Int32)">
            <summary>
            Yaw pitch control by mouse location
            </summary>
            <param name="dx">Dx (pixel)</param>
            <param name="dy">Dy (pixel)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.Upward">
            <summary>
            Keyboard W
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.Downward">
            <summary>
            Keybaord S
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.Leftward">
            <summary>
            Keybaord A
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.ICamera.Rightward">
            <summary>
            Keybaord D
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera">
            <summary>
            StaticCamera
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.Position">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.Up">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.Front">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.Right">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.Yaw">
            <summary>
            Rotate Look X
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.Pitch">
            <summary>
            Rotate Look Y
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.Fov">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.AspectRatio">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.ViewMatrix">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.ProjectionMatrix">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.#ctor(OpenTK.Vector3,System.Single)">
            <summary>
            Constructor
            </summary>
            <param name="position">Camera(or Eye) position</param>
            <param name="aspectRatio">Aspect ratio of width/height</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.Reset">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.LookAt(OpenTK.Vector3)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.LookAt(OpenTK.Vector3,SpiralLab.Sirius2.Winforms.IView)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.ZoomIn(System.Drawing.Point)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.ZoomOut(System.Drawing.Point)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.ZoomFit(SpiralLab.Sirius2.Winforms.Entity.BoundingBox)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.YawPitch(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.Upward">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.Downward">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.Leftward">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.StaticCamera.Rightward">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.OpenGL.GLBuffer">
            <summary>
            GLBuffer 
            </summary>
            <remarks>
            Represent for OpenGL's VBO, VAO
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.GLBuffer.Counts">
            <summary>
            Counts of vertices
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.GLBuffer.Vertices">
            <summary>
            Array of vertices
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.OpenGL.GLBuffer.Vbo">
            <summary>
            VBO handle
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.OpenGL.GLBuffer.Vao">
            <summary>
            VAO handle
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLBuffer.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLBuffer.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLBuffer.Dispose(System.Boolean)">
            <summary>
            Dispose internal resources
            </summary>
            <param name="disposing">Explicit dispose or not</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLBuffer.Bind">
            <summary>
            Bind
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.GLBuffer.Render(OpenTK.Graphics.OpenGL.PrimitiveType)">
            <summary>
            Draw array of vertices by assigned <c>PrimitiveType</c>
            </summary>
            <param name="primitiveType"><c>OpenTK.Graphics.OpenGL.PrimitiveType</c></param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.OpenGL.Shader">
            <summary>
            Shader
            </summary>
            <remarks>
            Shaders are written in GLSL, which is a language very similar to C in its semantics.<br/>
            The GLSL source is compiled *at runtime*, so it can optimize itself for the graphics card it's currently being used on.<br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.OpenGL.Shader.Handle">
            <summary>
            Program handle of shader
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.OpenGL.Shader._uniformLocations">
            <summary>
            Dictionary of uniforms 
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Shader.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="lineOfCodesVertex">Line of codes for vertex shader</param>
            <param name="lineOfCodesFrag">Line of codes for fragment shader</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Shader.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Shader.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Shader.Dispose(System.Boolean)">
            <summary>
            Dispose internal resources
            </summary>
            <param name="disposing">Explicit dispose or not</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Shader.CompileShader(System.Int32)">
            <summary>
            Compile shader
            </summary>
            <param name="shader"></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Shader.LinkProgram(System.Int32)">
            <summary>
            Linke shader
            </summary>
            <param name="program"></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Shader.Use">
            <summary>
            Enables the shader program
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Shader.GetAttribLocation(System.String)">
            <summary>
            The shader sources provided with this project use hardcoded layout(location)-s. If you want to do it dynamically,
            you can omit the layout(location=X) lines in the vertex shader, and use this in VertexAttribPointer instead of the hardcoded values.
            </summary>
            <param name="attribName">Attribute name from shader </param>
            <returns>Location of attribute</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Shader.SetInt(System.String,System.Int32)">
            <summary>
            Set a uniform int on this shader.
            </summary>
            <param name="name">The name of the uniform</param>
            <param name="data">The data to set</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Shader.SetFloat(System.String,System.Single)">
            <summary>
            Set a uniform float on this shader.
            </summary>
            <param name="name">The name of the uniform</param>
            <param name="data">The data to set</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Shader.SetMatrix3(System.String,OpenTK.Matrix3)">
            <summary>
            Set a uniform Matrix3 on this shader
            </summary>
            <param name="name">The name of the uniform</param>
            <param name="data">The data to set</param>
            <remarks>
              <para>
              The matrix is transposed before being sent to the shader.
              </para>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Shader.SetMatrix4(System.String,OpenTK.Matrix4)">
            <summary>
            Set a uniform Matrix4 on this shader
            </summary>
            <param name="name">The name of the uniform</param>
            <param name="data">The data to set</param>
            <remarks>
              <para>
              The matrix is transposed before being sent to the shader.
              </para>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Shader.SetVector2(System.String,OpenTK.Vector2)">
            <summary>
            Set a uniform Vector2 on this shader.
            </summary>
            <param name="name">The name of the uniform</param>
            <param name="data">The data to set</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Shader.SetVector3(System.String,OpenTK.Vector3)">
            <summary>
            Set a uniform Vector3 on this shader.
            </summary>
            <param name="name">The name of the uniform</param>
            <param name="data">The data to set</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Shader.SetVector4(System.String,OpenTK.Vector4)">
            <summary>
            Set a uniform Vector4 on this shader.
            </summary>
            <param name="name">The name of the uniform</param>
            <param name="data">The data to set</param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.OpenGL.ShaderFactory">
            <summary>
            ShaderFactory
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.ShaderFactory.CreateShader2D">
            <summary>
            Shader for 2D
            </summary>
            <remarks>
            Vertex shader: <c>ShaderLineOfCodes.VertexShaderV3</c> <br/>
            Fragment shader: <c>ShaderLineOfCodes.FragmentShader</c><br/>
            </remarks>
            <returns><c>Shader</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.ShaderFactory.CreateShader3D">
            <summary>
            Shader for 3D
            </summary>
            <remarks>
            Vertex shader: <c>ShaderLineOfCodes.VertexShaderV3N3</c> <br/>
            Fragment shader: <c>ShaderLineOfCodes.FragmentShaderLight</c><br/>
            </remarks>
            <returns><c>Shader</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.ShaderFactory.CreateShaderTexture">
            <summary>
            Shader for texture
            </summary>
            <remarks>
            Vertex shader: <c>ShaderLineOfCodes.VertexShaderV3T2</c> <br/>
            Fragment shader: <c>ShaderLineOfCodes.FragmentShaderT2</c><br/>
            </remarks>
            <returns><c>Shader</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.ShaderFactory.CreateShaderLightning">
            <summary>
            Shader for lightning
            </summary>
            <remarks>
            Vertex shader: <c>ShaderLineOfCodes.VertexShaderV3N3T2</c> <br/>
            Fragment shader: <c>ShaderLineOfCodes.FragmentShaderLight2</c><br/>
            </remarks>
            <returns><c>Shader</c></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.OpenGL.ShaderLineOfCodes">
            <summary>
            Line of codes for shader
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.OpenGL.ShaderLineOfCodes.VertexShaderV3">
            <summary>
            VertexShaderV3
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.OpenGL.ShaderLineOfCodes.VertexShaderV3N3">
            <summary>
            VertexShaderV3N3
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.OpenGL.ShaderLineOfCodes.VertexShaderV3T2">
            <summary>
            VertexShaderV3T2
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.OpenGL.ShaderLineOfCodes.VertexShaderV3N3T2">
            <summary>
            VertexShaderV3N3T2
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.OpenGL.ShaderLineOfCodes.FragmentShader">
            <summary>
            FragmentShader
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.OpenGL.ShaderLineOfCodes.FragmentShaderT2">
            <summary>
            FragmentShaderT2
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.OpenGL.ShaderLineOfCodes.FragmentShaderLight">
            <summary>
            FragmentShaderLight
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.OpenGL.ShaderLineOfCodes.FragmentShaderLight2">
            <summary>
            FragmentShaderLight2
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.OpenGL.Texture">
            <summary>
            Texture 
            </summary>
            <remarks>
            A helper class, much like Shader, meant to simplify loading textures.
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.OpenGL.Texture.Handle">
            <summary>
            Handle id
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.OpenGL.Texture.Width">
            <summary>
            Width (px)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.OpenGL.Texture.Height">
            <summary>
            Height (py)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Texture.LoadFromFile(System.String)">
            <summary>
            Load texture from file
            </summary>
            <param name="path">Path to file</param>
            <returns><c>Texture</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Texture.Load(System.Drawing.Bitmap)">
            <summary>
            Load texture from bitmap
            </summary>
            <param name="bitmap"><c>Bitmap</c></param>
            <returns><c>Texture</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Texture.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="glHandle">Texture handle</param>
            <param name="width">Width (px)</param>
            <param name="height">Height (py)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Texture.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Texture.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Texture.Dispose(System.Boolean)">
            <summary>
            Dispose internal resources
            </summary>
            <param name="disposing">Explicit dispose or not</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.OpenGL.Texture.Use(OpenTK.Graphics.OpenGL.TextureUnit)">
            <summary>
            Use
            </summary>
            <remarks>
            Activate texture
            Multiple textures can be bound, if your shader needs more than just one.
            If you want to do that, use GL.ActiveTexture to set which slot GL.BindTexture binds to.
            The OpenGL standard requires that there be at least 16, but there can be more depending on your graphics card.
            </remarks>
            <param name="unit"></param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Config">
            <summary>
            Configuration for <c>SpiralLab.Sirius2.Winforms</c> library
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.MaxLogItems">
            <summary>
            Max log messages at <c>LogUserControl</c> winforms
            </summary>
            <remarks>
            Default: 1000 <br/>
            If exceeded max log message, clear old one by automatically. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.AssemblyName">
            <summary>
            Package assembly filename
            </summary>
            <remarks>
            Default: "spirallab.sirius2.winforms.dll" <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.AssemblyVersion">
            <summary>
            Package assembly version
            </summary>
            <remarks>
            String (major.minor.builds) for version information. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.FileExtension">
            <summary>
            Default file extension
            </summary>
            <remarks>
            Default: ".sirius2" <br/><br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.FileOpenFilters">
            <summary>
            Open file filters
            </summary>
            <remarks>
            Default: "Supported files (sirius2)|*.sirius2;*.dxf|All files|*.*" <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.FileSaveFilters">
            <summary>
            Save file filters
            </summary>
            <remarks>
            Default: "Supported files (sirius2)|*.sirius2|All files|*.*"; <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.FileImportImageFilters">
            <summary>
            Import file filter for image files
            </summary>
            <remarks>
            Default: "Image files (jpg, jpeg, bmp, png, git, tif)|*.jpg;*.jpeg;*.bmp;*.png;*.gif;*.tif|All files|*.*" <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.FileImportModelFilters">
            <summary>
            Import file filter for vector(or 3D) files
            </summary>
            <remarks>
            Default: "Import files (stl, dxf, plt)|*.stl;*.dxf;*.plt|All files|*.*" <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.FileMeasurementFilter">
            <summary>
            Measurement file filters
            </summary>
            <remarks>
            Default: "Measurement file (txt)|*.txt;|All Files (*.*)|*.*" >br/> 
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.FileHeaderByteSize">
            <summary>
            File header bytes
            </summary>
            <remarks>
            Default: 128 <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.FileHeaderBytes">
            <summary>
            File header (array of byte)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.FileHeaderString">
            <summary>
            File header string
            </summary>
            <remarks>
            Dfault: <c>Powered.by.(c)SpiralLab.Sirius2.v.{ver.Major}.{ver.Minor}.{ver.Build}.{IsCompressedFileFormat}{Environment.NewLine}</c>" <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.IsCompressedFileFormat">
            <summary>
            File format with compressed or not
            </summary>
            <remarks>
            Used when <see cref="M:SpiralLab.Sirius2.Winforms.DocumentSerializer.SaveSirius(System.String,SpiralLab.Sirius2.Winforms.IDocument)">DocumentSerializer.SaveSirius</see>. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.FileKnownTypes">
            <summary>
            Type of internal objects at file 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.SamplePath">
            <summary>
            Sample file path (.dxf, .plt, ..stl, ..)
            </summary>
            <remarks>
            Default: <c>Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "sample")</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.RecipePath">
            <summary>
            Recipe file path (.sirius2)
            </summary>
            <remarks>
            Default: <c>Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "recipe")</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ScriptPath">
            <summary>
            Script file path
            </summary>
            <remarks>
            Default: <c>Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "script")</c> <br/>
            C sharp(.cs) script file. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.SiriusFontPath">
            <summary>
            Sirius font path (.cxf font file)
            </summary>
            <remarks>
            Default: <c>Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "siriusfonts")</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.PenColors">
            <summary>
            Array of <c>EntityPen</c> colors
            </summary>
            <remarks>
            Default: 10 colors
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Config.OnCreatePen">
            <summary>
            Event for create pen entity
            </summary>
            <remarks>
            User can register event handler to override configure pen entity. <br/>
            Event will be fired when creating <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPen">EntityPen</see> entity. <br/>
            If user event handler is not attached, default routine has executed. <br/>
            <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.Color">IEntity.Color</see> must be configured one of <see cref="P:SpiralLab.Sirius2.Winforms.Config.PenColors">Config.PenColors</see>. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Config.NotifyCreatePen(SpiralLab.Sirius2.Winforms.IDocument,System.Drawing.Color)">
            <summary>
            Notify create <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPen">EntityPen</see> entity
            </summary>
            <remarks>
            Used with <see cref="E:SpiralLab.Sirius2.Winforms.Config.OnCreatePen">Config.OnCreatePen</see>. <br/>
            Each <see cref="P:SpiralLab.Sirius2.Winforms.Config.PenColors">Config.PenColors</see> would be created. <br/>
            </remarks>
            <param name="document"><c>IDocument</c></param>
            <param name="color"><c>System.Drawing.Color</c></param>
            <returns><c>EntityPen</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Config.PenReset(SpiralLab.Sirius2.Winforms.IDocument,System.Drawing.Color,SpiralLab.Sirius2.Winforms.Entity.EntityPen)">
            <summary>
            Reset(or initialize) <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPen">EntityPen</see> values when created
            </summary>
            <param name="document"><c>IDocument</c></param>
            <param name="color"><c>System.Drawing.Color</c></param>
            <param name="pen"><c>EntityPen</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.InstalledFontNames">
            <summary>
            List of installed fonts at windows system
            </summary>
            <remarks>
            Installed names of font list. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ImageTextClearColor">
            <summary>
            Clear color for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityImageText">EntityImageText</see>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ImageTextFillBrush">
            <summary>
            Fill color for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityImageText">EntityImageText</see>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ImageTextPenColor">
            <summary>
            Pen color for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityImageText">EntityImageText</see>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ImageTextRenderingHint">
            <summary>
            Rendering hint for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityImageText">EntityImageText</see>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ImageTextSmoothingMode">
            <summary>
            Smoothing mode hint for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityImageText">EntityImageText</see>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.SiriusFontAsciiMax">
            <summary>
            Sirius font glyph limit for max ascii hexa
            </summary>
            <remarks>
            Default: 255 (It means, using 0~255 glyphs only) <br/>
            Supported file formats: cxf, lff <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.FontDefault">
            <summary>
            Default font for create <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityText">EntityText</see>
            </summary>
            <remarks>
            Default: Arial
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.FontDefaultSirius">
            <summary>
            Default font for create <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntitySiriusText">EntitySiriusText</see> 
            </summary>
            <remarks>
            Default: romans2.cxf
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ScriptReferenceAssemblies">
            <summary>
            Script reference assemblies (*.dll)
            </summary>
            <remarks>
            Used with when compile external script file. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ScriptTextConvertInstanceName">
            <summary>
            Script class(or instance) name 
            <code>
            public class UserScript : MarkerScriptBase
            {
                public UserScript(IMarker marker)
                    : base(marker)
                {
                    Name = "MyScript";
                    Description = "MyDescription";
                }
                
                public override void OnMarkerStarted(IMarker marker)
                {
                }
                public override string OnTextConvert(IMarker marker, ITextConvertible textConvertible)
                {
                    ...
                    return textConvertible.SourceText;
                }
                public override void OnMarkerEnded(IMarker marker)
                {
                }
            }
            </code>
            </summary>
            <remarks>
            User class of script should be inherited from <see cref="T:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase">MarkerScriptBase</see> <br/>
            Sample(or default) script file is exist at 'bin\script\default.cs' <br/>
            Default: "UserScript" <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.DxfSplineToPolygonalCounts">
            <summary>
            Divided line counts when convert dxf spline entity to lines
            </summary>
            <remarks>
            Default: 6 <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.IsDxfImportRemovedColor">
            <summary>
            Remove color of entities when import dxf
            </summary>
            <remarks>
            If <c>True</c>, overrided color is <see cref="P:SpiralLab.Sirius2.Winforms.Config.PenColors">Config.PenColors[0]</see> (aka. White) <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.IsDxfOpenRemovedColor">
            <summary>
            Remove color of entities when open dxf
            </summary>
            <remarks>
            If <c>True</c>, overrided color is <see cref="P:SpiralLab.Sirius2.Winforms.Config.PenColors">Config.PenColors[0]</see> (aka. White) <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.DxfTextDefaultFont">
            <summary>
            Convert font of text entity (like as Text, MText) at dxf file into assigned font
            </summary>
            <remarks>
            Default: Arial <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.STLAlignZ">
            <summary>
            Z Alignment when loading STL file 
            </summary>
            <remarks>
            Default: <see cref="F:SpiralLab.Sirius2.Winforms.Entity.STLZAligns.Bottom">STLZAligns.Bottom</see>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ExtractPointsCloudDirectionVector">
            <summary>
            Directional vector for extract points cloud from STL mode
            </summary>
            <remarks>
            Default: 0,0,-1 <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.IsRemoveEntityAfterPointCloudExtracted">
            <summary>
            Remove(or delete) source <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityStl">EntityStl</see> after extract(or create) <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud">EntityPointsCloud</see> or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.PrecisionForCalibration3DPosition">
            <summary>
            Round up position when do  <see cref="M:SpiralLab.Sirius2.Winforms.Entity.ICalibration3D.Calibration3D(SpiralLab.Sirius2.Scanner.Rtc.IRtc,System.String@,System.String@,SpiralLab.Sirius2.Scanner.Rtc.SlscErrorCodes@)">ICalibration3D.Calibration3D</see> to convert 3D scanner field correction 
            </summary>
            <remarks>
            Default: 2
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.TreeviewFontSize">
            <summary>
            Treeview node font size
            </summary>
            <remarks>
            Default: 9pt <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.TreeviewWarningNodeCounts">
            <summary>
            Treeview node counts for occur warning message if nodes counts has excceeded
            </summary>
            <remarks>
            Default: 500 <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.TreeviewNodeDefaultFont">
            <summary>
            Default treeview node font
            </summary>
            <remarks>
            Default: Arial <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.TreeviewNodeBoldFont">
            <summary>
            Bold treeview node font
            </summary>
            <remarks>
            Default: Arial with bold style. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.TreeviewNodeStrikeOutFont">
            <summary>
            Strikeout treeview node font
            </summary>
            <remarks>
            Default: Arial with strikeout style. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.TreeviewNodeBoldAndStrikeOutFont">
            <summary>
            Bold and Strikeout treeview node font
            </summary>
            <remarks>
            Default: Arial with bold and strikeout styles. <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Config.OnExtractPointsCloud">
            <summary>
            Event for create <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud">EntityPointsCloud</see> from 3D model
            </summary>
            <remarks>
            User can register event handler for customized extract points cloud from 3D model. <br/>
            Event will be fired when user select extract points cloud menu at <see cref="T:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl">SiriusEditorUserControl</see>. <br/>
            If user event handler is not attached, default routine has executed. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Config.NotifyExtractPointsCloud(SpiralLab.Sirius2.Winforms.IDocument,SpiralLab.Sirius2.Winforms.Entity.EntityStl,OpenTK.Vector3)">
            <summary>
            Notify create <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud">EntityPointsCloud</see> entity by extraction
            </summary>
            <param name="document"><c>IDocument</c></param>
            <param name="entity"><c>EntityStl</c></param>
            <param name="dir">Directional normal vector</param>
            <returns><c>EntityPointsCloud</c> (null, if failed)</returns>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Config.OnBlockInsert">
            <summary>
            Event for create custom array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert">EntityBlockInsert</see> at <see cref="T:SpiralLab.Sirius2.Winforms.UI.TreeViewUserControl">TreeViewUserControl</see>
            </summary>
            <remarks>
            User can register event handler for override <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert">EntityBlockInsert</see> entity. <br/>
            Event will be fired when user select block-insert menu at <see cref="T:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl">SiriusEditorUserControl</see>. <br/>
            If user event handler is not attached, default routine has executed. <br/>
            If returned array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert">EntityBlockInsert</see> (not <c>null</c>), values are inserted. <br/>
            </remarks>        
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Config.NotifyBlockInsert(SpiralLab.Sirius2.Winforms.IDocument,SpiralLab.Sirius2.Winforms.Entity.EntityBlock)">
            <summary>
            Notify event create for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityBlockInsert">EntityBlockInsert</see>
            </summary>
            <param name="document"><c>IDocument</c></param>
            <param name="block"><c>EntityBlock</c></param>
            <returns>Array of <c>EntityBlockInsert</c></returns>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewFovSize">
            <summary>
            Size of FOV area (WxH)
            </summary>
            <remarks>
            Default: <c>SizeF.Empty</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewVirtualImageSize">
            <summary>
            Size of virtual image field area (WxH)
            </summary>
            <remarks>
            Default: <c>SizeF.Empty</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewBackgroundColor">
            <summary>
            Color of background 
            </summary>
            <remarks>
            Default: <c>System.Drawing.Color.Black</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewLightColor">
            <summary>
            Color of light
            </summary>
            <remarks>
            Default: <c>Vector3(0.95f, 0.95f, 0.95f)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewLightPosition">
            <summary>
            Position of light
            </summary>
            <remarks>
            Default: <c>Vector3(-300, 300, 1000)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewFovColor">
            <summary>
            Color of FoV(Field of view) rectangle
            </summary>
            <remarks>
            Default: <c>Vector4(0.95f, 0.0f, 0.0f, 0.8f)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewVifColor">
            <summary>
            Color of Vif(Virtual image field) rectangle
            </summary>
            <remarks>
            Default: <c>Vector4(0.65f, 0.0f, 0.0f, 0.8f)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewAxisXColor">
            <summary>
            Color of x axis 
            </summary>
            <remarks>
            Default: <c>Vector4( 1f, 0f, 0.0f, 0.8f)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewAxisYColor">
            <summary>
            Color of y axis 
            </summary>
            <remarks>
            Default: <c>Vector4(0, 1f, 0.0f, 0.6f)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewAxisZColor">
            <summary>
            Color of z axis 
            </summary>
            <remarks>
            Default: <c>Vector4(1f, 1f, 0.0f, 0.8f)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewDefaultEntityColor">
            <summary>
            Color of default entity 
            </summary>
            <remarks>
            Default:<see cref="P:SpiralLab.Sirius2.Winforms.Config.PenColors">Config.PenColors[0]</see>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewSelectedBBoxColor">
            <summary>
            Color of bounding-box cube for selecting
            </summary>
            <remarks>
            Default: <c>Vector4(0.0f, 0.9f, 0.0f, 0.8f)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewClippingBBoxColor">
            <summary>
            Color of bounding-box cube for clipping 
            </summary>
            <remarks>
            Default: <c>Vector4(0.9f, 0.0f, 0.0f, 0.8f)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewRubberBandColor">
            <summary>
            Color of rubber-band rectangle
            </summary>
            <remarks>
            Default: <c>Vector4(1, 1, 1, 0.95f)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewGridPointsColor">
            <summary>
            Color of grid points
            </summary>
            <remarks>
            Default: <c>Vector4(1, 1, 1, 0.9f)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewSimulationJumpRayColor">
            <summary>
            Color of jump ray when be simulating
            </summary>
            <remarks>
            Default: <c>Vector4(0.4f, 0.4f, 0.4f, 0.9f)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewSimulationMarkRayColor">
            <summary>
            Color of mark ray when be simulating
            </summary>
            <remarks>
            Default: <c>Vector4(0.95f, 0.95f, 0, 0.85f)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewSimulationMarkPointColor">
            <summary>
            Color of mark laser point when be simulating
            </summary>
            <remarks>
            Default: <c>Vector4(1, 0, 0, 0.75f)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewSimulationMarkSphereDiameter">
            <summary>
            Diameter(or size of beam sphere) when be simulating 
            </summary>
            <remarks>
            Default: 0.3 <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewNormalVectorAtPointsCloudColor">
            <summary>
            Color of normal vectors at <c>EntityPointsCloud</c>
            </summary>
            <remarks>
            Default: <c>Vector4(0.9f, 0f, 0.0f, 0.35f)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewNormalVectorAtPointsCloudScale">
            <summary>
            Scale of normal vector at <c>EntityPointsCloud</c> 
            </summary>
            <remarks>
            Default: 0.1 <br/>
            Scaled size of normal vectors at <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPointsCloud">EntityPointsCloud</see>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.ViewSelectedEntitySizeofPointAndLine">
            <summary>
            If entity has selected, override line width and point size 
            </summary>
            <remarks>
            Default: 3 (Should be >= 1) <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.IsViewRenderBoundBoxWhenSelected">
            <summary>
            Is rendering bounding box of <c>IEntity</c> when selected
            </summary>
            <remarks>
            Default: <c>True</c> <br/>
            Activated only single entity has selected. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.CameraInitPosition">
            <summary>
            Camera init position
            </summary>
            <remarks>
            Default: <c>Vector3(0, 0, 200)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.CameraInitFov">
            <summary>
            Camera FOV
            </summary>
            <remarks>
            Default: 30 <br/>
            Camera has zoomed by fov. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.CameraXPositivePosition">
            <summary>
            Camera x+ position
            </summary>
            <remarks>
            Default: <c>Vector3(200, 0, 60)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.CameraXNegativePosition">
            <summary>
            Camera x- position
            </summary>
            <remarks>
            Default: <c>Vector3(-200, 0, 60)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.CameraYNegativePosition">
            <summary>
            Camera y- position
            </summary>
            <remarks>
            Default: <c>Vector3(0, -200, 60)</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.CamereaSensitivity">
            <summary>
            Camera yaw, pitch sensitivity 
            </summary>
            <remarks>
            Default: 0.005 <br/>
            Rotate yaw, pitch camera by holding mouse right button. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.CamereaLookAtSteps">
            <summary>
            When move camera lookat position, step counts of render for smooth effect
            </summary>
            <remarks>
            Default: 10 <br/>
            </remarks>  
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.IsCameraMoveAtPropertyGrid">
            <summary>
            Move camera smoothly when <c>IEntity.In</c> or <c>IEntity.Out</c> has selected
            </summary>
            <remarks>
            Default: <c>True</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.IsCameraMoveWhenSimulation">
            <summary>
            Move camera smoothly when activated simulation 
            </summary>
            <remarks>
            Default: <c>False</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.HitTestByHotTracking">
            <summary>
            Enable(or disable) hot tracking by mouse-over 
            </summary>
            <remarks>
            Default: <c>True</c> <br/>
            Do pre-hit testing whenever mouse is hovering over <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>. <br/>
            If <c>True</c>, it cause CPU-burst works load but responsed by shape of mouse cursor interactively. <br/>
            Should be configured before do <see cref="M:SpiralLab.Sirius2.Core.Initialize">Core.Initialize</see>. <br/>
            </remarks>  
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.HitTestThresholdByPixel">
            <summary>
            Threshold pixel counts when hit testing         
            </summary>
            <remarks>
            Default: 4px. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.KeyboardHelpMessage">
            <summary>
            Help message for shortcut key bindings
            </summary>
            <remarks>
            Copy: CTRL + C <br/>
            Cut:  CTRL + X <br/>
            Paste: CTRL + V <br/>
            Delete: CTRL + Delete <br/>
            Align to center: CTRL + H <br/>
            Camera zoom to fit: CTRL + F <br/>
            Camera reset: CTRL + R <br/>
            Camera -X: Left <br/>
            Camera +X: Right <br/>
            Camera -Y: Down <br/>
            Camera +Y: Up <br/>
            Rotate CCW (90°): CTRL + [ <br/>
            Rotate CCW (10°): CTRL + ALT + [ <br/>
            Rotate CCW (1°): CTRL + SHIFT + ALT + [ <br/>
            Rotate CW (90°): CTRL + ] <br/>
            Rotate CW (10°): CTRL + ALT + ] <br/>
            Rotate CW (1°): CTRL + SHIFT + ALT + ] <br/>
            Transit -X (1mm): CTRL + Left <br/>
            Transit -X (0.1mm): CTRL + ALT + Left <br/>
            Transit -X (0.01mm): CTRL + SHIFT + ALT + Left <br/>
            Transit +X (1mm): CTRL + Right <br/>
            Transit +X (0.1mm): CTRL + ALT + Right <br/>
            Transit +X (0.01mm): CTRL + SHIFT + ALT + Right <br/>
            Transit -Y (1mm): CTRL + Down <br/>
            Transit -Y (0.1mm): CTRL + ALT + Down <br/>
            Transit -Y (0.01mm): CTRL + SHIFT + ALT + Down <br/>
            Transit +Y (1mm): CTRL + Up <br/>
            Transit +Y (0.1mm): CTRL + ALT + Up <br/>
            Transit +Y (0.01mm): CTRL + SHIFT + ALT + Up <br/>
            Start Marker: F5 <br/>
            Stop Marker: CTRL + F5 <br/>
            Reset Marker: F6 <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.KeyboardTransitXYCtrl">
            <summary>
            Move distance when press keyboard: CTRL + (Left,Right,Up,Down)
            </summary>
            <remarks>
            Default: 1 mm <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.KeyboardTransitXYCtrlAlt">
            <summary>
            Move distance when press keyboard: CTRL + ALT + (Left,Right,Up,Down)
            </summary>
            <remarks>
            Default: 0.1 mm <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.KeyboardTransitXYCtrlAltShift">
            <summary>
            Move distance when press keyboard: CTRL + ALT + SHIFT + (Left,Right,Up,Down)
            </summary>
            <remarks>
            Default: 0.01 mm <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.KeyboardRotateCtrl">
            <summary>
            Rotate angle when press keyboard: CTRL + ([,])
            </summary>
            <remarks>
            Default: 90 deg <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.KeyboardRotateCtrlAlt">
            <summary>
            Rotate angle when press keyboard: CTRL + ALT + ([,])
            </summary>
            <remarks>
            Default: 10 deg <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.KeyboardRotateCtrlAltShift">
            <summary>
            Rotate angle when press keyboard: CTRL + ALT+ SHIFT + ([,])
            </summary>
            <remarks>
            Default: 1 deg <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.KeyboardMarkerStart">
            <summary>
            Shortcut key for marker start
            </summary>
            <remarks>
            Default: F5 <br/>
            Event would be fired when pressing <see cref="P:SpiralLab.Sirius2.Winforms.Config.KeyboardMarkerStart">Config.KeyboardMarkerStart</see> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.KeyboardMarkerStop">
            <summary>
            Shortcut key for marker stop
            </summary>
            <remarks>
            Default: F6 <br/>
            Event would be fired when pressing <see cref="P:SpiralLab.Sirius2.Winforms.Config.KeyboardMarkerStop">Config.KeyboardMarkerStop</see> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.KeyboardMarkerReset">
            <summary>
            Shortcut key for marker reset
            </summary>
            <remarks>
            Default: F8 <br/>
            Event would be fired when pressing <see cref="P:SpiralLab.Sirius2.Winforms.Config.KeyboardMarkerReset">Config.KeyboardMarkerReset</see> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.KeyboardMoveToCursor">
            <summary>
            Shortcut key for move to cursor position at <c>SiriusEditorControl</c>
            </summary>
            <remarks>
            Default: F9 <br/>
            Event would be fired when pressing <see cref="P:SpiralLab.Sirius2.Winforms.Config.KeyboardMoveToCursor">Config.KeyboardMoveToCursor</see> <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Config.OnMoveToCursor">
            <summary>
            Event for move to cursor position at <c>SiriusEditorControl</c>
            </summary>
            <remarks>
            User can assign event handler for move(or control) external stage to specific position. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Config.NotifyMoveToCursor(SpiralLab.Sirius2.Winforms.IDocument,OpenTK.Vector3)">
            <summary>
            Notify event for move cursor position by pressing <see cref="P:SpiralLab.Sirius2.Winforms.Config.KeyboardMoveToCursor">Config.KeyboardMoveToCursor</see>
            </summary>
            <remarks>
            For example, user can implement event hander by move external stage at specific location <br/>
            </remarks>
            <param name="document"><c>IDocument</c></param>
            <param name="position">X,Y,Z position</param>
            <returns>Success or failed</returns>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.DIn_RtcExtension1Port">
            <summary>
            List of digital input names at RTC Extension1 Port 
            </summary>
            <remarks>
            Default: D00, D01, D03, ... D15 <br/>
            Names for 16 bits. <br/>
            Should be configured before do <see cref="M:SpiralLab.Sirius2.Core.Initialize">Core.Initialize</see>. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.DIn_RtcLaserPort">
            <summary>
            List of digital input names at RTC Laser Port 
            </summary>
            <remarks>
            Default: D00, D01 <br/>
            Names for 2 bits. <br/>
            Should be configured before do <see cref="M:SpiralLab.Sirius2.Core.Initialize">Core.Initialize</see>. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.DOut_RtcExtension1Port">
            <summary>
            List of digital output names at RTC Extension1 Port
            </summary>
            <remarks>
            Default: D00, D01, D03, ... D15 <br/>
            Names for 16 bits. <br/>
            Should be configured before do <see cref="M:SpiralLab.Sirius2.Core.Initialize">Core.Initialize</see>. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.DOut_RtcExtension2Port">
            <summary>
            List of digital output names at RTC Extension2 Port 
            </summary>
            <remarks>
            Default: D00, D01, D03, ... D7 <br/>
            Names for 8 bits. <br/>
            Should be configured before do <see cref="M:SpiralLab.Sirius2.Core.Initialize">Core.Initialize</see>. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Config.DOut_RtcLaserPort">
            <summary>
             List of digital output names at RTC Laser Port 
            </summary>
            <remarks>
            Default: D00, D01 <br/>
            Names for 2 bits. <br/>
            Should be configured before do <see cref="M:SpiralLab.Sirius2.Core.Initialize">Core.Initialize</see>. <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Config.OnScannerFieldCorrection2DShow">
            <summary>
            Event for show(or popup) scanner field correction 2D by <see cref="T:SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm">RtcCorrection2DForm</see> winforms
            <code>
            SpiralLab.Sirius2.Winforms.Config.OnScannerFieldCorrection2D += Config_OnScannerFieldCorrection2D;
            RtcCorrection2D Config_OnScannerFieldCorrection2D(IRtc rtc)
            {
                // Create RtcCorrection2D by measured x,y error data
                int rows = 7;
                int cols = 7;
                float interval = 10.0f;
                var rtcCorrection2D = new RtcCorrection2D(rtc.KFactor, rows, cols, interval, interval, rtc.CorrectionFiles[(int)rtc.PrimaryHeadTable].FileName, string.Empty);
                float left = -interval * (float)(int)(cols / 2);
                float top = interval * (float)(int)(rows / 2);
                for (int row = 0; row &lt; rows; row++)
                {
                    for (int col = 0; col &lt; cols; col++)
                    {
                        rtcCorrection2D.AddRelative(row, col,
                            new System.Numerics.Vector2(left + col* interval, top - row* interval),
                            new System.Numerics.Vector2(errX, errY);
                        );
                    }
                }
                return rtcCorrection2D;
            }
            </code>
            </summary>
            <remarks>
            User can register event handler for open(or show) scanner field correction 2d winforms. <br/>
            Event will be fired when select scanner field correction 2D menu at <see cref="T:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl">SiriusEditorUserControl</see>. <br/>
            If user event handler is not attached, default routine has executed. <br/>
            If user event handler is attached, it should be create <see cref="T:SpiralLab.Sirius2.Scanner.Rtc.RtcCorrection2D">RtcCorrection2D</see> and return it. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Config.NotifyScannerFieldCorrection2DShow(SpiralLab.Sirius2.Scanner.Rtc.IRtc)">
            <summary>
            Notify show(or popup) scanner field correction 2D by <see cref="T:SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm">RtcCorrection2DForm</see> winforms
            </summary>
            <param name="rtc"><c>IRtc</c></param>
            <returns><c>RtcCorrection2D</c></returns>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Config.OnScannerFieldCorrection3DShow">
            <summary>
            Event for show(or popup) scanner field correction 2D by <see cref="T:SpiralLab.Sirius2.Winforms.UI.RtcCorrection3DForm">RtcCorrection3DForm</see> winforms
            <code>
            SpiralLab.Sirius2.Winforms.Config.OnScannerFieldCorrection3D += Config_OnScannerFieldCorrection3D;
            RtcCorrection3D Config_OnScannerFieldCorrection3D(IRtc rtc)
            {
                // Create RtcCorrection3D by measured x,y error data at z plane
                int rows = 3;
                int cols = 3;
                float zUpper = 20;
                float zLower = -20;
                float interval = 30;
                string sourceFile = rtc.CorrectionFiles[(int)rtc.PrimaryHeadTable].FileName
                string targetFile = string.Empty;
                float left = -interval * (float)(int)(cols / 2);
                float top = interval * (float)(int)(rows / 2);
                var correction3D = new RtcCorrection3D(seq.Rtc.KFactor, rows, cols, interval, zUpper, zLower, sourceFile, targetFile);
                for (int row = 0; row &lt; rows; row++)
                {
                    for (int col = 0; col &lt; cols; col++)
                    {
                        correction3D.AddRelative(row, col,
                            new Vector3( left + col* interval, top - row* interval, zLower),
                            new System.Numerics.Vector2(errX, errY, zLower)
                        );
                        correction3D.AddRelative(row, col,
                            new Vector3( left + col* interval, top - row* interval, zUpper),
                            new System.Numerics.Vector2(errX, errY, zUpper)
                        );
                    }
                }
                return correction3D;
            }
            </code>
            </summary>
            <remarks>
            User can register event handler for open(or show) scanner field correction 3d winforms. <br/>
            Event will be fired when select scanner field correction 3D menu at <see cref="T:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl">SiriusEditorUserControl</see> <br/>
            If user event handler is not attached, default routine has executed. <br/>
            If user event handler is attached, it should be create <see cref="T:SpiralLab.Sirius2.Scanner.Rtc.RtcCorrection3D">RtcCorrection3D</see> and return it. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Config.NotifyScannerFieldCorrection3DShow(SpiralLab.Sirius2.Scanner.Rtc.IRtc)">
            <summary>
            Notify show(or popup) scanner field correction 2D by <see cref="T:SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm">RtcCorrection2DForm</see> winforms
            </summary>
            <param name="rtc"><c>IRtc</c></param>
            <returns><c>RtcCorrection3D</c></returns>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Config.OnScannerFieldCorrection2DApply">
            <summary>
            Event for apply scanner field correction 2D by <see cref="T:SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm">RtcCorrection2DForm</see> winforms
            <code>
            SpiralLab.Sirius2.Winforms.Config.OnScannerFieldCorrection2DApply += Config_OnScannerFieldCorrection2DApply;
            void Config_OnScannerFieldCorrection2DApply(SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm form)
            {
               Debug.Assert(File.Exists(form.TargetCorrectionFile));
               bool success = true;
               var currentTable = form.Rtc.PrimaryHeadTable;
               success &amp;= form.Rtc.CtlLoadCorrectionFile(currentTable, form.RtcCorrection.TargetCorrectionFile);
               success &amp;= form.Rtc.CtlSelectCorrection(currentTable);
               Debug.Assert(success);
            }
            </code>
            <remarks>
            User can register event handler for apply scanner field correction 2d at winforms. <br/>
            Target correction table is <see cref="T:SpiralLab.Sirius2.Scanner.Rtc.CorrectionTables">CorrectionTables.PrimaryHeadTable</see>. <br/>
            Event will be fired when apply scanner field correction 2D at winforms. <br/>
            If user event handler is not attached, nothing has changed. <br/>
            </remarks>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Config.NotifyScannerFieldCorrection2DApply(SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm)">
            <summary>
            Notify show(or popup) scanner field correction 2D by <see cref="T:SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm">RtcCorrection2DForm</see>winforms
            </summary>
            <param name="form"><c>SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm</c></param>
            <returns>If there are no event handlers, returned <c>False</c></returns>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Config.OnScannerFieldCorrection3DApply">
            <summary>
            Event for apply scanner field correction 3D by <see cref="T:SpiralLab.Sirius2.Winforms.UI.RtcCorrection3DForm">RtcCorrection3DForm</see>winforms
            <c>Config.OnScannerFieldCorrection3DApply</c> is for create new 3D correction file (with new stretch factors). <br/>
            <c>Config.OnCalibration3D</c> is for create new 3D correction file (with new z depth table). <br/>
            <code>
            SpiralLab.Sirius2.Winforms.Config.OnScannerFieldCorrection3DApply += Config_OnScannerFieldCorrection3DApply;
            void Config_OnScannerFieldCorrection3DApply(SpiralLab.Sirius2.Winforms.UI.RtcCorrection3DForm form)
            {
               Debug.Assert(File.Exists(form.TargetCorrectionFile));
               bool success = true;
               var currentTable = form.Rtc.PrimaryHeadTable;
               success &amp;= form.Rtc.CtlLoadCorrectionFile(currentTable, form.RtcCorrection.TargetCorrectionFile);
               success &amp;= form.Rtc.CtlSelectCorrection(currentTable, currentTable);
               Debug.Assert(success);
            }
            </code>
            <remarks>
            User can register event handler for apply scanner field correction 3d at winforms. <br/>
            Target correction table is <see cref="T:SpiralLab.Sirius2.Scanner.Rtc.CorrectionTables">CorrectionTables.PrimaryHeadTable</see>. <br/>
            Event will be fired when apply scanner field correction 3D at winforms. <br/>
            If user event handler is not attached, nothing has changed. <br/>
            </remarks>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Config.NotifyScannerFieldCorrection3DApply(SpiralLab.Sirius2.Winforms.UI.RtcCorrection3DForm)">
            <summary>
            Notify show(or popup) scanner field correction 3D by <see cref="T:SpiralLab.Sirius2.Winforms.UI.RtcCorrection3DForm">RtcCorrection3DForm</see> winforms
            </summary>
            <param name="form"><c>SpiralLab.Sirius2.Winforms.UI.RtcCorrection3DForm</c></param>
            <returns>If there are no event handlers, returned <c>False</c></returns>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Config.OnCalibration3D">
            <summary>
            Event for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.ICalibration3D">ICalibration3D</see> has success to convert
            <para>
            <see cref="E:SpiralLab.Sirius2.Winforms.Config.OnScannerFieldCorrection3DApply">Config.OnScannerFieldCorrection3DApply</see> is for create new 3D correction file (with new stretch factors). <br/>
            <see cref="E:SpiralLab.Sirius2.Winforms.Config.OnCalibration3D">Config.OnCalibration3D</see> is for create new 3D correction file (with new z depth table). <br/>
            </para>
            </summary>
            <remarks>
            User can register event handler for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.ICalibration3D">ICalibration3D</see> has succeeded. <br/>
            Event will be fired when success to convert new scanner 3D field correction file by <see cref="T:SpiralLab.Sirius2.Winforms.Entity.ICalibration3D">ICalibration3D</see>. <br/>
            Both(Primary and secondary head) target correction table are <c>Table4</c> if RTC5. <br/>
            Both(Primary and secondary head) target correction table are <c>Table8</c> if RTC6. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Config.NotifyCalibration3D(SpiralLab.Sirius2.Winforms.Entity.ICalibration3D,SpiralLab.Sirius2.Scanner.Rtc.IRtc,SpiralLab.Sirius2.Scanner.Rtc.CorrectionTables,System.String,System.String)">
            <summary>
            Notify success to convert <see cref="T:SpiralLab.Sirius2.Winforms.Entity.ICalibration3D">ICalibration3D</see> calibration 
            </summary>
            <param name="calibration3D"><c>ICalibration3D</c></param>
            <param name="rtc"><c>IRtc</c></param>
            <param name="inputCtFileName">Input correction filename</param>
            <param name="tableIndex"><c>CorrectionTableIndex</c></param>
            <param name="newCtFileName">Created new correction filename</param>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.PathOptimizerBasePosition">
            <summary>
            Base position when optimize internal entity pathes
            </summary>
            <remarks>
            Default: <see cref="T:SpiralLab.Sirius2.Winforms.UI.PathOptimizerBasePositions">PathOptimizerBasePositions.Center</see>. <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Config.OnOptimizePath">
            <summary>
            Event for optimize path winforms
            </summary>
            <remarks>
            User can register event handler for optimize path winforms. <br/>
            Event will be fired when select path optimizer menu at <see cref="T:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl">SiriusEditorUserControl</see>. <br/>
            If user event handler is not attached, default routine has executed. Extracted base-points by <see cref="P:SpiralLab.Sirius2.Winforms.Config.PathOptimizerBasePosition">Config.PathOptimizerBasePosition</see> and popup optimizer winforms. <br/>
            If user event handler is attached, user should be return values with array of sorted orders. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Config.NotifyOptimizePath(SpiralLab.Sirius2.Winforms.IDocument,SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Notify optimize path
            </summary>
            <param name="document"><c>IDocument</c></param>
            <param name="entity"><c>IEntity</c></param>
            <returns>Array of path order</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Config.PopupOptimizerWinForms(SpiralLab.Sirius2.Winforms.IDocument,SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Popup optimize winforms
            </summary>
            <param name="document"><c>IDocument</c></param>
            <param name="entity"><c>IEntity</c></param>
            <returns>Array of path order</returns>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.IsPathSortAndMerge">
            <summary>
            Enable sort and merge path or not when import file
            </summary>
            <remarks>
            Calculate and applied when importing hpgl(plt) or dxf file. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.PathSortAndMergeDistance">
            <summary>
            Threshold distance for sort and merge path at <c>EntityGroup</c>
            </summary>
            <remarks>
            Default: 0.05 mm. <br/>
            Used with <see cref="P:SpiralLab.Sirius2.Winforms.Config.IsPathSortAndMerge">Config.IsPathSortAndMerge</see> if <c>True</c>. <br/>
            Calculate and applied when importing hpgl(plt) or dxf file. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.RemoteSeparator">
            <summary>
            Separator at remote communication
            </summary>
            <remarks>
            Default separator: ',' <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Remote.IRemote">IRemote</see> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.RemoteTerminator">
            <summary>
            Terminator at remote communication
            </summary>
            <remarks>
            Default terminator: ';' <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Remote.IRemote">IRemote</see> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.RemoteOk">
            <summary>
            Reply as 'succeed' at remote communication
            </summary>
            <remarks>
            Default: "OK" <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Remote.IRemote">IRemote</see> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.RemoteNG">
            <summary>
            Reply as 'failed' at remote communication
            </summary>
            <remarks>
            Default: "NG" <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Remote.IRemote">IRemote</see> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.RemoteReady">
            <summary>
            Reply 'ready' status at remote communication
            </summary>
            <remarks>
            Default: "Ready" <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Remote.IRemote">IRemote</see> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.RemoteNotReady">
            <summary>
            Reply 'not ready' status at remote communication
            </summary>
            <remarks>
            Default: "NotReady" <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Remote.IRemote">IRemote</see> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.RemoteBusy">
            <summary>
            Reply 'busy' status at remote communication
            </summary>
            <remarks>
            Default: "Busy" <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Remote.IRemote">IRemote</see> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.RemoteError">
            <summary>
            Reply 'error' status at remote communication
            </summary>
            <remarks>
            Default: "Error" <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Remote.IRemote">IRemote</see> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Config.RemoteEnd">
            <summary>
            Reply 'end' status when marker has finished at remote communication
            </summary>
            <remarks>
            Default: "End" <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Remote.IRemote">IRemote</see> <br/>
            </remarks>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.IDocumentData">
            <summary>
            IDocumentData interface
            </summary>
            <remarks>
            Serialization for open/save internal data
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocumentData.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocumentData.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocumentData.ExtensionData">
            <summary>
            Extension user data
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocumentData.Blocks">
            <summary>
            List of <c>EntityBlock</c> entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocumentData.Layers">
            <summary>
            List of <c>EntityLayer</c> entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocumentData.Pens">
            <summary>
            List of <c>EntityPen</c> entity
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocumentData.Tag">
            <summary>
            User data 
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.MarginAlignments">
            <summary>
            MarginAlignments
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.MarginAlignments.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.MarginAlignments.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.MarginAlignments.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.MarginAlignments.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.SimulationSpeeds">
            <summary>
            Simulation speeds
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.SimulationSpeeds.Slow">
            <summary>
            Slow
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.SimulationSpeeds.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.SimulationSpeeds.Fast">
            <summary>
            Fast
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.IDocument">
            <summary>
            IDocument interface
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.IDocument.OnNew">
            <summary>
            Event for new(or clear) document
            </summary>
            <remarks>
            User can register event handler for new document. <br/>
            Event will be fired when <see cref="M:SpiralLab.Sirius2.Winforms.IDocument.ActNew">ActNew</see> has called. <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.IDocument.OnOpened">
            <summary>
            Event for open file (filename) 
            </summary>
            <remarks>
            User can register event handler for open document. <br/>
            Event will be fired when <see cref="M:SpiralLab.Sirius2.Winforms.IDocument.ActOpen(System.String)">ActOpen</see> has called. <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.IDocument.OnSaved">
            <summary>
            Event for save file (filename)
            </summary>
            <remarks>
            User can register event handler for save document. <br/>
            Event will be fired when <see cref="M:SpiralLab.Sirius2.Winforms.IDocument.ActSave(System.String)">ActSave</see> has called. <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.IDocument.OnAdded">
            <summary>
            Event for added <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
            <remarks>
            User can register event handler for add entities. <br/>
            Event will be fired when <see cref="M:SpiralLab.Sirius2.Winforms.IDocument.ActAdd(SpiralLab.Sirius2.Winforms.Entity.IEntity)">ActAdd</see> has called. <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.IDocument.OnInserted">
            <summary>
            Event for inserted <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
            <remarks>
            User can register event handler for insert entities. <br/>
            Event will be fired when <see cref="M:SpiralLab.Sirius2.Winforms.IDocument.ActInsert(SpiralLab.Sirius2.Winforms.Entity.IEntity,SpiralLab.Sirius2.Winforms.Entity.IEntity,System.Int32)">ActInsert</see> has called. <br/>
            Arguments: source <c>IEntity</c>, parent <c>IEntity</c>, target index. <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.IDocument.OnRemoved">
            <summary>
            Event for removed <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
            <remarks>
            User can register event handler for remove entities. <br/>
            Event will be fired when <see cref="M:SpiralLab.Sirius2.Winforms.IDocument.ActRemove(SpiralLab.Sirius2.Winforms.Entity.IEntity)">ActRemove</see> has called. <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.IDocument.OnSelected">
            <summary>
            Event for selected entities (array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>)
            </summary>
            <remarks>
            User can register event handler for select entities. <br/>
            Event will be fired when <see cref="M:SpiralLab.Sirius2.Winforms.IDocument.ActSelect(SpiralLab.Sirius2.Winforms.Entity.IEntity)">ActSelect</see> or <see cref="M:SpiralLab.Sirius2.Winforms.IDocument.ActSelectClear">ActSelectClear</see> has called. <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.IDocument.OnPropertyChanged">
            <summary>
            Event for property value for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> has changed 
            </summary>
            <remarks>
            User can register event handler for property value had been changed.  <br/>
            Event will be fired when property value of entity had been changed. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocument.FileName">
            <summary>
            Opened file name
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">
            <summary>
            Internal <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> data 
            </summary>
            <remarks>
            Internal document data for open and save. <br/>
            <c>InternalData</c> opened by <see cref="M:SpiralLab.Sirius2.Winforms.DocumentSerializer.OpenSirius(System.String,SpiralLab.Sirius2.Winforms.IDocument)">DocumentSerializer.OpenSirius</see> <br/>
            <c>InternalData</c> saved by <see cref="M:SpiralLab.Sirius2.Winforms.DocumentSerializer.SaveSirius(System.String,SpiralLab.Sirius2.Winforms.IDocument)">DocumentSerializer.SaveSirius</see> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocument.Selected">
            <summary>
            Array of selected <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
            <remarks>
            Modified by <see cref="M:SpiralLab.Sirius2.Winforms.IDocument.ActSelect(SpiralLab.Sirius2.Winforms.Entity.IEntity)">ActSelect</see> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocument.Clipboard">
            <summary>
            Array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> at clipboard
            </summary>
            <remarks>
            Modified by <see cref="M:SpiralLab.Sirius2.Winforms.IDocument.ActSelect(SpiralLab.Sirius2.Winforms.Entity.IEntity)">ActSelect</see> or <see cref="M:SpiralLab.Sirius2.Winforms.IDocument.ActCut">ActCut</see> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocument.EntityDic">
            <summary>
            Dictionary for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
            <remarks>
            Key: ID of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> <br/>
            Value: <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> <br/>
            Added (or removed) by internally. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocument.PenDic">
            <summary>
            Dictionary of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPen">EntityPen</see> 
            </summary>
            <remarks>
            Key: int value of <c>Color</c> (Convert <c>Color</c> value to <c>ToArgb</c>) <br/>
            Value: <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPen">EntityPen</see> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocument.ActiveLayer">
            <summary>
            Current(or working, activated) <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityLayer">EntityLayer</see> entity
            </summary>
            <remarks>
            Default layer by name '0' would be created when do <see cref="M:SpiralLab.Sirius2.Winforms.IDocument.ActNew">ActNew</see>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocument.IsModified">
            <summary>
            Internal data has modified or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocument.IsReady">
            <summary>
            Ready status
            </summary>
            <remarks>
            <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.IsReady">IDocument.IsReady</see>  status goes to <c>False</c> when opening or saving <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> <br/>
            Used by internally (Do NOT edit) <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IDocument.Tag">
            <summary>
            User data
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActNew">
            <summary>
            New <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see>and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnNew">OnNew</see> event. 
            </summary>
            <remarks>
            Whole <c>IEntity</c> at <see cref="P:SpiralLab.Sirius2.Winforms.IDocumentData.Layers">IDocumentData.Layers</see> has cleared and create a <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityLayer">EntityLayer</see> with name '0' by default. <br/>
            Whole <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityBlock">EntityBlock</see> at <see cref="P:SpiralLab.Sirius2.Winforms.IDocumentData.Blocks">IDocumentData.Blocks</see> has cleared. <br/>
            Whole <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPen">EntityPen</see> at  <see cref="P:SpiralLab.Sirius2.Winforms.IDocumentData.Pens">IDocumentData.Pens</see> has NOT changed. <br/>
            <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.EntityDic">EntityDic</see> has cleared. <br/>
            <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.Clipboard">Clipboard</see> has cleared. <br/>
            <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityLayer">EntityLayer</see> will be created with name '0' by default. <br/>
            </remarks>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActOpen(System.String)">
            <summary>
            Opened <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnOpened">OnOpened</see> event. 
            </summary>
            <remarks>
            Supported file formats are '.dxf', '.sirius2' <br/>
            </remarks>
            <param name="fileName">Filename</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActImport(System.String,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <summary>
            Import file and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnAdded">OnAdded</see> event 
            </summary>
            <remarks>
            Supported file types are '.dxf, .stl, .plt, .png, .bmp, .gif, .jpg, .jpeg' <br/>
            </remarks>
            <param name="fileName">Filename</param>
            <param name="entity">Imported <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActSave(System.String)">
            <summary>
            Saved <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnSaved">OnSaved</see> event.
            </summary>
            <remarks>
            Used with <see cref="P:SpiralLab.Sirius2.Winforms.Config.IsCompressedFileFormat">Config.IsCompressedFileFormat</see> <br/>
            </remarks>
            <param name="fileName">Filename</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActRegen">
            <summary>
            Regenerate whole <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityLayer">EntityLayer</see> at <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> by manually.
            </summary>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActAdd(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Add <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> into <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnAdded">OnAdded</see> event.
            </summary>
            <param name="entity">Target <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActAdd(SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <summary>
            Add array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> into <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnAdded">OnAdded</see> event. 
            </summary>
            <param name="entities">Target array of <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActInsert(SpiralLab.Sirius2.Winforms.Entity.IEntity,SpiralLab.Sirius2.Winforms.Entity.IEntity,System.Int32)">
            <summary>
            Insert <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> at target index of <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.Children">IEntity.Children</see> and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnInserted">OnInserted</see> event. 
            </summary>
            <param name="entity">Target <c>IEntity</c></param>
            <param name="parent">Parent <c>IEntity</c></param>
            <param name="targetIndex">Target index</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActRemove(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Remove <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> from <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnRemoved">OnRemoved</see> event.
            </summary>
            <param name="entity">Target <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActRemove(SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <summary>
            Remove array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> from <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnRemoved">OnRemoved</see> event. 
            </summary>
            <param name="entities">Target array of <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActSelect(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Select <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> at <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnSelected">OnSelected</see> event. 
            </summary>
            <param name="entity">Target <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActSelect(SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <summary>
            Select array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> at <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnSelected">OnSelected</see> event. 
            </summary>
            <param name="entities">Target array of <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActSelectClear">
            <summary>
            Clear selected array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> at <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnSelected">OnSelected</see> event. 
            </summary>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActGroup(SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <summary>
            Convert array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> into <c>EntityGroup</c> at <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnAdded">OnAdded</see>, <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnRemoved">OnRemoved</see> event.
            </summary>
            <param name="entities">Target array of <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActExplode(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Explode <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> to seperated <c>IEntity</c> at <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnRemoved">OnRemoved</see>, <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnAdded">OnAdded</see>, <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnSelected">OnSelected</see> event. 
            </summary>
            <param name="entity">Target <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActHatch(SpiralLab.Sirius2.Winforms.Entity.IEntity,SpiralLab.Sirius2.Winforms.Entity.HatchModes,SpiralLab.Sirius2.Winforms.Entity.HatchJoints,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create hatch inside of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> at <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnAdded">OnAdded</see> event if succeed.
            </summary>
            <remarks>
            Used with inherited <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> from <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IExplodable">IExplodable</see>. <br/>
            Used with internal array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D">EntityPolyline2D</see> from <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> <br/>
            Used with <c>HatchJoints</c>, <c>isZigZag</c>, <c>angle</c>, <c>internal</c>, <c>exclude</c>, <c>shift</c> values for <c>HatchModes.Line</c> mode. <br/>
            Used with <c>HatchJoints</c>, <c>isZigZag</c>, <c>angle</c>, <c>angle2</c>, <c>internal</c>, <c>exclude</c>, <c>shift</c> values for <see cref="F:SpiralLab.Sirius2.Winforms.Entity.HatchModes.CrossLine">HatchModes.CrossLine</see> mode. <br/>
            Used with <c>HatchJoints</c>, <c>internal</c> values for <see cref="F:SpiralLab.Sirius2.Winforms.Entity.HatchModes.Polygon">HatchModes.Polygon</see> mode. <br/>
            Model matrix are not applied but accumulated into hatched <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityGroup">EntityGroup</see>. <br/>
            </remarks>
            <param name="entity">Target <c>IEntity</c></param>
            <param name="hatchMode"><c>HatchModes</c></param>
            <param name="hatchJoint"><c>HatchJoints</c></param>
            <param name="isZigZag">ZigZag</param>
            <param name="angle">Angle (1st)</param>
            <param name="angle2">Angle (2nd) For Cross line</param>
            <param name="interval">Interval (mm)</param>
            <param name="exclude">Exclude (mm)</param>
            <param name="shift">Shift (or offset) (mm)</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActExtractPolylines(SpiralLab.Sirius2.Winforms.Entity.IEntity,SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D[]@)">
            <summary>
            Extract array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D">EntityPolyline2D</see> from <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnAdded">OnAdded</see> event.
            </summary>
            <remarks>
            Used with <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IExtractPolyline">IExtractPolyline</see>. <br/>
            </remarks>
            <param name="entity">Target <c>IEntity</c></param>
            <param name="polylines">Extracted array of <c>EntityPolyline2D</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActExpand(SpiralLab.Sirius2.Winforms.Entity.IEntity,SpiralLab.Sirius2.Winforms.Entity.HatchJoints,System.Double)">
            <summary>
            Create expanded outline of of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> at <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnAdded">OnAdded</see> event if succeed.
            </summary>
            <remarks>
            Used with inherited <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> from <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IExpandable">IExpandable</see> and <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IExtractPolyline">IExtractPolyline</see>. <br/>
            Expand or shrink <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D">EntityPolyline2D</see> from <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>. <br/>
            Positive distance: Expand <br/>
            Negative distance: Shrink <br/>
            </remarks>
            <param name="entity">Target <c>IEntity</c></param>
            <param name="hatchJoint"><c>HatchJoints</c></param>
            <param name="length">Expand(Positive value), Shrink(Negative value)</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActReverse(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Reverse <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> internal path order
            </summary>
            <remarks>
            Used with inherited <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> from <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IReversable">IReversable</see>. <br/>
            </remarks>
            <param name="entity">Target <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActClip(SpiralLab.Sirius2.Winforms.Entity.IEntity[],SpiralLab.Sirius2.Winforms.Entity.BoundingBox[])">
            <summary>
            Clipping array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> at <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.InternalData">InternalData</see> by rectangle areas and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnRemoved">OnRemoved</see> and <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnAdded">OnAdded</see> events.
            </summary>
            <remarks>
            Used with inherited <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> from <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IClipRegion">IClipRegion</see>. <br/>
            Used with <see cref="P:SpiralLab.Sirius2.Config.DivideArcToLinesDistance">DivideArcToLinesDistance</see>. <br/>
            </remarks>
            <param name="entities">Target array of <c>IEntity</c> to clipping(or divide)</param>
            <param name="bboxes">Array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.BoundingBox">BoundingBox</see> to clip</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActCopy">
            <summary>
            Copy selected <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>(or array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>) into <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.Clipboard">Clipboard</see>
            </summary>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActCut">
            <summary>
            Cut selected <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>(or array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>) into <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.Clipboard">Clipboard</see> and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnRemoved">OnRemoved</see> event.
            </summary>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActPaste(System.Nullable{OpenTK.Vector3})">
            <summary>
            Paste <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>(or array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>) from and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnAdded">OnAdded</see> event.
            </summary>
            <param name="location">Paste x,y,z location (if <c>null</c>, cloned at same position)</param>
            <returns>Pasted array of <c>IEntity</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActAlignTo(SpiralLab.Sirius2.Winforms.Entity.IEntity[],OpenTK.Vector3)">
            <summary>
            Align to x,y,z center array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> at <see cref="T:SpiralLab.Sirius2.Winforms.IDocument">IDocument</see>
            </summary>
            <param name="entities">Target array of <c>IEntity</c></param>
            <param name="center">Center x,y,z location</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActAlignTo(SpiralLab.Sirius2.Winforms.Entity.IEntity[],OpenTK.Vector2)">
            <summary>
            Align to x,y center array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> at <see cref="T:SpiralLab.Sirius2.Winforms.IDocument">IDocument</see>
            </summary>
            <param name="entities">Target <c>IEntity</c></param>
            <param name="center">Center x,y location</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActAlign(SpiralLab.Sirius2.Winforms.Entity.IEntity[],SpiralLab.Sirius2.Winforms.MarginAlignments)">
            <summary>
            Align array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> at margin alignment location
            </summary>
            <param name="entities">Target <c>IEntity</c></param>
            <param name="marginAlignment"><c>MarginAlignment</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActHitTest(SpiralLab.Sirius2.Winforms.IView,System.Windows.Forms.Keys,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity[]@)">
            <summary>
            Hittest(or intersect test) for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> at <see cref="T:SpiralLab.Sirius2.Winforms.IDocument">IDocument</see>
            </summary>
            <remarks>
            Used with pixel coordinate system(px). <br/>
            </remarks>
            <param name="view"><c>IView</c></param>
            <param name="keys">SHIFT:merge(+), CTRL:toggle(-,+), ALT:exclude(-)</param>
            <param name="mousePosition">Clicked mouse location (pixel) </param>
            <param name="hittedEntities">Array of <c>IEntity</c> if success to hit</param>
            <returns>Success to hit or not</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActHitTest(SpiralLab.Sirius2.Winforms.IView,System.Windows.Forms.Keys,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity[]@)">
            <summary>
            Hittest(or intersect test) for <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> at <see cref="T:SpiralLab.Sirius2.Winforms.IDocument">IDocument</see>
            </summary>
            <remarks>
            Used with x,y coordinate system at Z=0 plane(mm). <br/>
            </remarks>
            <param name="view"><c>IView</c></param>
            <param name="keys">SHIFT:merge(+), CTRL:toggle(-,+), ALT:exclude(-)</param>
            <param name="start">Started location (mm)</param>
            <param name="end">Ended(or current) location (mm)</param>
            <param name="hittedEntities">Array of <c>IEntity</c> if success to hit</param>
            <returns>Success to hit or not</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActTransit(SpiralLab.Sirius2.Winforms.Entity.IEntity[],OpenTK.Vector3)">
            <summary>
            Transit array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> by delta distance
            </summary>
            <param name="entities">Array of <c>IEntity</c></param>
            <param name="deltaXyz">Dx, Dy, Dz (mm) </param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActPropertyChanged(SpiralLab.Sirius2.Winforms.Entity.IEntity[],System.String,System.Object,System.Object)">
            <summary>
            Property value of array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> has changed and notify <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnPropertyChanged">OnPropertyChanged</see> event.
            </summary>
            <param name="entities">Array of <c>IEntity</c></param>
            <param name="propName">Property name</param>
            <param name="oldValue">Old value</param>
            <param name="newValue">New value</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActLayerDragMove(SpiralLab.Sirius2.Winforms.Entity.EntityLayer,SpiralLab.Sirius2.Winforms.Entity.EntityLayer,System.Int32)">
            <summary>
            Move <c>EntityLayer</c> by drag and drop at <c>TreeView</c> control and nofity <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnRemoved">OnRemoved</see> and <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnInserted">OnInserted</see> event.
            </summary>
            <param name="sourceLayer">Source <c>EntityLayer</c></param>
            <param name="targetLayer">Target <c>EntityLayer</c></param>
            <param name="targetIndex">Target index</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActEntityDragMove(SpiralLab.Sirius2.Winforms.Entity.IEntity,SpiralLab.Sirius2.Winforms.Entity.IEntity,System.Int32)">
            <summary>
            Move <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> by drag and drop at <c>TreeView</c> control and nofity <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnInserted">OnInserted</see> and <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnRemoved">OnRemoved</see> event.
            </summary>
            <param name="entity">Source <c>IEntity</c></param>
            <param name="targetEntity">Target <c>IEntity</c></param>
            <param name="targetIndex">Target index</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActEntityDragMove(SpiralLab.Sirius2.Winforms.Entity.IEntity[],SpiralLab.Sirius2.Winforms.Entity.IEntity,System.Int32)">
            <summary>
            Move array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> by drag and drop at <c>TreeView</c> control and nofity <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnInserted">OnInserted</see> and <see cref="E:SpiralLab.Sirius2.Winforms.IDocument.OnRemoved">OnRemoved</see> event.
            </summary>
            <param name="entities">Source array of <c>IEntity</c></param>
            <param name="targetEntity">Target <c>IEntity</c></param>
            <param name="targetIndex">Target index</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActSimulateStart(SpiralLab.Sirius2.Winforms.Entity.IEntity[],SpiralLab.Sirius2.Winforms.Marker.IMarker,SpiralLab.Sirius2.Winforms.SimulationSpeeds)">
            <summary>
            Simulation start for array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see>
            </summary>
            <remarks>
            Used with inherited <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> from <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IMarkerable">IMarkerable</see>. <br/>
            Used with <see cref="T:SpiralLab.Sirius2.Scanner.Rtc.RtcVirtual">RtcVirtual</see> and <see cref="T:SpiralLab.Sirius2.Winforms.Marker.MarkerVirtual">MarkerVirtual</see> by internally. <br/>
            </remarks>
            <param name="entities">Target array of <c>IEntity</c></param>
            <param name="marker">Target <c>IMarker</c></param>
            <param name="simulationSpeed"><c>SimulationSpeed</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.ActSimulateStop">
            <summary>
            Simulation stop
            </summary>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.FindByLayerName(System.String,SpiralLab.Sirius2.Winforms.Entity.EntityLayer@)">
            <summary>
            Find <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityLayer">EntityLayer</see> entity by name at <see cref="T:SpiralLab.Sirius2.Winforms.IDocument">IDocument</see>
            </summary>
            <param name="layerName">Layer name</param>
            <param name="foundedLayer">Founded <c>EntityLayer</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.FindByPenColor(System.Drawing.Color,SpiralLab.Sirius2.Winforms.Entity.EntityPen@)">
            <summary>
            Find <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPen">EntityPen</see> entity by <c>System.Drawing.Color</c> at <see cref="T:SpiralLab.Sirius2.Winforms.IDocument">IDocument</see>
            </summary>
            <param name="color">Pen color</param>
            <param name="foundedPen">Founded <c>EntityPen</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.FindByPenName(System.String,SpiralLab.Sirius2.Winforms.Entity.EntityPen@)">
            <summary>
            Find  <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityPen">EntityPen</see> entity by name at <see cref="T:SpiralLab.Sirius2.Winforms.IDocument">IDocument</see>
            </summary>
            <param name="penName">Pen name</param>
            <param name="foundedPen">Founded <c>EntityPen</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.FindById(System.UInt32,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <summary>
            Find <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> entity by <see cref="P:SpiralLab.Sirius2.Winforms.Entity.IEntity.Id">IEntity.Id</see> at <see cref="T:SpiralLab.Sirius2.Winforms.IDocument">IDocument</see>
            </summary>
            <param name="entityId">ID of <c>IEntity</c></param>
            <param name="foundedEntity">Founded <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.FindByName(System.String,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <summary>
            Find <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> entity by name at <see cref="T:SpiralLab.Sirius2.Winforms.IDocument">IDocument</see> with recursively
            </summary>
            <param name="entityName">Entity name</param>
            <param name="foundedEntity">Founded <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.FindBlockByName(System.String,SpiralLab.Sirius2.Winforms.Entity.EntityBlock@)">
            <summary>
            Find <see cref="T:SpiralLab.Sirius2.Winforms.Entity.EntityBlock">EntityBlock</see> entity by name
            </summary>
            <param name="blockName">Block name</param>
            <param name="foundedBlock">Founded <c>EntityBlock</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.FindByType(System.Type,SpiralLab.Sirius2.Winforms.Entity.IEntity[]@)">
            <summary>
            Find entities by <c>Type</c> (also. compared by interface types) at <see cref="T:SpiralLab.Sirius2.Winforms.IDocument">IDocument</see> with recursively
            </summary>
            <param name="entityType"><c>Type</c> of entity</param>
            <param name="foundedEntities">Array of <c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.NotifyNew">
            <summary>
            Notify new
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.NotifyOpened(System.String)">
            <summary>
            Notify <c>IDocumentData</c> has opened
            </summary>
            <param name="fileName">Filename</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.NotifySaved(System.String)">
            <summary>
            Notify <c>IDocumentData</c> has saved
            </summary>
            <param name="fileName">Filename</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.NotifyAdd(SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <summary>
            Notify <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> has added
            </summary>
            <param name="entities">Array of <c>IEntity</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.NotifyInsert(SpiralLab.Sirius2.Winforms.Entity.IEntity,SpiralLab.Sirius2.Winforms.Entity.IEntity,System.Int32)">
            <summary>
            Notify <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> has insert (by drag move)
            </summary>
            <param name="entity"><c>IEntity</c></param>
            <param name="parent">Parent <c>IEntity</c></param>
            <param name="targetIndex">Target index</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.NotifyRemove(SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <summary>
            Notify <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> has removed
            </summary>
            <param name="entities">Array of <c>IEntity</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.NotifySelected(SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <summary>
            Notify array of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> has selected
            </summary>
            <param name="entities">Array of <c>IEntity</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IDocument.NotifyPropertyChanged">
            <summary>
            Notify property value of <see cref="T:SpiralLab.Sirius2.Winforms.Entity.IEntity">IEntity</see> has changed
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.DocumentData">
            <summary>
            DocumentData
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentData.Name">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentData.Description">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentData.ExtensionData">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentData.Blocks">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentData.Pens">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentData.Layers">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentData._Blocks">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentData._Pens">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentData._Layers">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentData._Name">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentData._Description">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentData._ExtensionData">
            <summary>
            Used by internally (Do NOT edit)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentData.Tag">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentData.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentData.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentData.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentData.Clone">
            <summary>
            Implement clone of <c>DocumentData</c> 
            </summary>
            <remarks>Deep clone of <c>DocumentData</c> </remarks>
            <returns>Cloned <c>DocumentData</c></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.DocumentBase">
            <summary>
            DocumentBase
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.DocumentBase.OnNew">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.DocumentBase.OnOpened">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.DocumentBase.OnSaved">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.DocumentBase.OnAdded">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.DocumentBase.OnInserted">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.DocumentBase.OnRemoved">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.DocumentBase.OnSelected">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.DocumentBase.OnPropertyChanged">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentBase.FileName">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentBase.InternalData">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentBase.Selected">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentBase.Clipboard">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentBase.EntityDic">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentBase.PenDic">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentBase.ActiveLayer">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.DocumentBase.activeLayer">
            <summary>
            Activated(or current) <c>EntityLayer</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentBase.View">
            <summary>
            Assigned <c>IView</c> 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentBase.IsModified">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentBase.IsReady">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.DocumentBase.Tag">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.#ctor">
            <summary>
            Constructor
            </summary>
            <remarks>
            Notify <see cref="E:SpiralLab.Sirius2.Winforms.Config.OnCreatePen">Config.OnCreatePen</see> event. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActNew">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActOpen(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActImport(System.String,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActSave(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActRegen">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActSetParentRecursively(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Set entity parent (recursively)
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActAdd(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActAdd(SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActInsert(SpiralLab.Sirius2.Winforms.Entity.IEntity,SpiralLab.Sirius2.Winforms.Entity.IEntity,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActRemove(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActRemove(SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActSelect(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActSelect(SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActSelectClear">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActGroup(SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActExplode(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActClip(SpiralLab.Sirius2.Winforms.Entity.IEntity[],SpiralLab.Sirius2.Winforms.Entity.BoundingBox[])">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActHatch(SpiralLab.Sirius2.Winforms.Entity.IEntity,SpiralLab.Sirius2.Winforms.Entity.HatchModes,SpiralLab.Sirius2.Winforms.Entity.HatchJoints,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActExtractPolylines(SpiralLab.Sirius2.Winforms.Entity.IEntity,SpiralLab.Sirius2.Winforms.Entity.EntityPolyline2D[]@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActExpand(SpiralLab.Sirius2.Winforms.Entity.IEntity,SpiralLab.Sirius2.Winforms.Entity.HatchJoints,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActReverse(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActCopy">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActCut">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActPaste(System.Nullable{OpenTK.Vector3})">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActAlignTo(SpiralLab.Sirius2.Winforms.Entity.IEntity[],OpenTK.Vector3)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActAlignTo(SpiralLab.Sirius2.Winforms.Entity.IEntity[],OpenTK.Vector2)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActAlign(SpiralLab.Sirius2.Winforms.Entity.IEntity[],SpiralLab.Sirius2.Winforms.MarginAlignments)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActTransit(SpiralLab.Sirius2.Winforms.Entity.IEntity[],OpenTK.Vector3)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActHitTest(SpiralLab.Sirius2.Winforms.IView,System.Windows.Forms.Keys,System.Drawing.Point,SpiralLab.Sirius2.Winforms.Entity.IEntity[]@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActHitTest(SpiralLab.Sirius2.Winforms.IView,System.Windows.Forms.Keys,OpenTK.Vector2,OpenTK.Vector2,SpiralLab.Sirius2.Winforms.Entity.IEntity[]@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActPropertyChanged(SpiralLab.Sirius2.Winforms.Entity.IEntity[],System.String,System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActLayerDragMove(SpiralLab.Sirius2.Winforms.Entity.EntityLayer,SpiralLab.Sirius2.Winforms.Entity.EntityLayer,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActEntityDragMove(SpiralLab.Sirius2.Winforms.Entity.IEntity,SpiralLab.Sirius2.Winforms.Entity.IEntity,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActEntityDragMove(SpiralLab.Sirius2.Winforms.Entity.IEntity[],SpiralLab.Sirius2.Winforms.Entity.IEntity,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActSimulateStart(SpiralLab.Sirius2.Winforms.Entity.IEntity[],SpiralLab.Sirius2.Winforms.Marker.IMarker,SpiralLab.Sirius2.Winforms.SimulationSpeeds)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.ActSimulateStop">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.FindByLayerName(System.String,SpiralLab.Sirius2.Winforms.Entity.EntityLayer@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.FindByPenColor(System.Drawing.Color,SpiralLab.Sirius2.Winforms.Entity.EntityPen@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.FindByPenName(System.String,SpiralLab.Sirius2.Winforms.Entity.EntityPen@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.FindById(System.UInt32,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.FindByName(System.String,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.FindChildByName(System.String,SpiralLab.Sirius2.Winforms.Entity.IEntity,SpiralLab.Sirius2.Winforms.Entity.IEntity@)">
            <summary>
            Find child entity by recursively
            </summary>
            <param name="entityName"></param>
            <param name="entity"></param>
            <param name="foundedEntity"></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.FindByType(System.Type,SpiralLab.Sirius2.Winforms.Entity.IEntity[]@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.FindChildByType(System.Type,SpiralLab.Sirius2.Winforms.Entity.IEntity,SpiralLab.Sirius2.Winforms.Entity.IEntity[]@)">
            <summary>
            Find entity by <c>Type</c>
            </summary>
            <param name="entityType"></param>
            <param name="entity"></param>
            <param name="foundedEntities"></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.FindBlockByName(System.String,SpiralLab.Sirius2.Winforms.Entity.EntityBlock@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.NotifyNew">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.NotifyOpened(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.NotifySaved(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.NotifyAdd(SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.NotifyInsert(SpiralLab.Sirius2.Winforms.Entity.IEntity,SpiralLab.Sirius2.Winforms.Entity.IEntity,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.NotifyRemove(SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.NotifySelected(SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentBase.NotifyPropertyChanged">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.DocumentSerializer">
            <summary>
            Serializer for SpiralLab.Sirius2 Document 
            </summary>
            <remarks>
            <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.IsReady">IDocument.IsReady</see> value would be toggled. <br/>
            <see cref="M:System.GC.Collect">GC.Collect</see> would be called. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentSerializer.OpenSirius(System.String,SpiralLab.Sirius2.Winforms.IDocument)">
            <summary>
            Open document from sirius2 file
            </summary>
            <remarks>
            Opened <see cref="T:SpiralLab.Sirius2.Winforms.IDocumentData">IDocument.IDocumentData</see>. <br/> 
            </remarks>
            <param name="fileName">Filename</param>
            <param name="document"><c>IDocument</c> interface</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentSerializer.SaveSirius(System.String,SpiralLab.Sirius2.Winforms.IDocument)">
            <summary>
            Save document into sirius2 file
            </summary>
            <remarks>
            Used with <see cref="P:SpiralLab.Sirius2.Winforms.Config.IsCompressedFileFormat">Config.IsCompressedFileFormat</see>. <br/>
            Saved <see cref="T:SpiralLab.Sirius2.Winforms.IDocumentData">IDocument.IDocumentData</see>. <br/> 
            <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.IsReady">IDocument.IsReady</see> value would be set to <c>True</c> if succeeded. <br/>
            <see cref="M:System.GC.Collect">GC.Collect</see> would be called. <br/>
            </remarks>
            <param name="fileName">Filename</param>
            <param name="document"><c>IDocument</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentSerializer.OpenDxf(System.String,SpiralLab.Sirius2.Winforms.IDocument)">
            <summary>
            Open dxf file into <c>IDocument</c>
            </summary>        
            <remarks>
            <see cref="P:SpiralLab.Sirius2.Winforms.IDocument.IsReady">IDocument.IsReady</see> value would be toggled. <br/>
            </remarks>
            <param name="fileName">Filename</param>
            <param name="document"><c>IDocument</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentSerializer.BeforeOpen(SpiralLab.Sirius2.Winforms.IDocument)">
            <summary>
            Prepare document before open
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentSerializer.AfterOpen(SpiralLab.Sirius2.Winforms.IDocument)">
            <summary>
            Prepare document after open
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentSerializer.ReverseUpdate(SpiralLab.Sirius2.Winforms.IDocument)">
            <summary>
            Reverse update to view 
            </summary>
            <param name="document"><c>IDocument</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentSerializer.ImportDxf(System.String,SpiralLab.Sirius2.Winforms.Entity.EntityGroup@)">
            <summary>
            Import dxf file into document
            </summary>
            <remarks>
            Imported by <c>EntityGroup</c> entity
            </remarks>
            <param name="fileName">Filename</param>
            <param name="dxfEntity"><c>EntityGroup</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.DocumentSerializer.ImportHpgl(System.String,SpiralLab.Sirius2.Winforms.Entity.EntityGroup@)">
            <summary>
            Import plt(HPGL) file into document
            </summary>
            <remarks>
            Imported by <c>EntityGroup</c> entity
            </remarks>
            <param name="fileName">Filename</param>
            <param name="hpglEntity"><c>EntityGroup</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Properties.Resources">
            <summary>
              지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Properties.Resources.ResourceManager">
            <summary>
              이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Properties.Resources.Culture">
            <summary>
              이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대해 현재 스레드의 CurrentUICulture 속성을
              재정의합니다.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Remote.RemoteFactory">
            <summary>
            Factory for remote communication 
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteFactory.CreateTcpServer(System.Int32,System.String,SpiralLab.Sirius2.Winforms.Marker.IMarker,System.Int32)">
            <summary>
            Create <c>RemoteTcpServer</c>
            <code>
            var remote = RemoteFactory.CreateTcpServer(0, "RemoteTcpIp", marker, 5001);
            remote.Start();
            ...
            //Must be stopped when terminating(or disposing)
            remote.Stop();
            remote.Dispose();
            </code>
            </summary>
            <remarks>
            Create TCP/IP server socket. <br/>
            </remarks>
            <param name="index">Identifier (0,1,2,...)</param>
            <param name="name">Name</param>
            <param name="marker"><c>IMarker</c></param>
            <param name="portNo">TCP server listening port</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Remote.IRemote">IRemote</see></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteFactory.CreateSerial(System.Int32,System.String,SpiralLab.Sirius2.Winforms.Marker.IMarker,System.Int32,System.Int32)">
            <summary>
            Create <c>RemoteSerial</c>
            <code>
            var remote = RemoteFactory.CreateSerial(0, "RemoteSerial", marker, 1, 57600);
            remote.Start();
            ...
            //Must be stopped when terminating(or disposing)
            remote.Stop();
            remote.Dispose();
            </code>
            </summary>
            <remarks>
            Create Serial(RS-232) com port <br/>
            Data: 8-Bit <br/>
            Stop: 1-Bit <br/> 
            Parity: None <br/>
            </remarks>
            <param name="index">Identifier (0,1,2,...)</param>
            <param name="name">Name</param>
             <param name="marker"><c>IMarker</c></param>
            <param name="portNo">COM port</param>
            <param name="baudRate">Baudrate</param>
            <returns><see cref="T:SpiralLab.Sirius2.Winforms.Remote.IRemote">IRemote</see></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Remote.RemoteTcpServer">
            <summary>
            Remote communication by TCP server
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteTcpServer.#ctor(System.Int32,System.String,SpiralLab.Sirius2.Winforms.Marker.IMarker,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="index">Identifier (0,1,2,...)</param>
            <param name="name">Name</param>
            <param name="marker">Target <c>IMarker</c> (Try to send 'Status,End' notification message at remote communication by automatically. <br/></param>
            <param name="portNo">TCP server listening port no</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteTcpServer.Marker_OnStarted(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <summary>
            Implement <c>IMarker.OnStarted</c> event to send "Status,Started;" response by remote communication
            </summary>
            <param name="marker"><c>IMarker</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteTcpServer.Marker_OnEnded(SpiralLab.Sirius2.Winforms.Marker.IMarker,System.Boolean,System.TimeSpan)">
            <summary>
            Implement <c>IMarker.OnEnded</c> event to send "Status,Ended;" response by remote communication
            </summary>
            <param name="marker"><c>IMarker</c></param>
            <param name="success">Success(or failed) to mark</param>
            <param name="timeSpan"><c>TimeSpan</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteTcpServer.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteTcpServer.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteTcpServer.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteTcpServer.Start">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteTcpServer.Stop">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteTcpServer.Send(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteTcpServer.Send(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteTcpServer.Receive(System.String@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteTcpServer.Receive(System.Byte[]@)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Remote.RemoteSerial">
            <summary>
            Remote communication by Serial 
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteSerial.#ctor(System.Int32,System.String,SpiralLab.Sirius2.Winforms.Marker.IMarker,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="index">Identifier (0,1,2,...)</param>
            <param name="name">Name</param>
            <param name="marker">Target <c>IMarker</c> (Try to send 'Status,End' notification message at remote communication by automatically. <br/></param>
            <param name="portNo">COM port no</param>
            <param name="baudRate">Baudrate</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteSerial.Marker_OnStarted(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <summary>
            Implement <c>IMarker.OnStarted</c> event to send "Status,Started;" response by remote communication
            </summary>
            <param name="marker"><c>IMarker</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteSerial.Marker_OnEnded(SpiralLab.Sirius2.Winforms.Marker.IMarker,System.Boolean,System.TimeSpan)">
            <summary>
            Implement <c>IMarker.OnEnded</c> event to send "Status,Ended;" response by remote communication
            </summary>
            <param name="marker"><c>IMarker</c></param>
            <param name="success">Success(or failed) to mark</param>
            <param name="timeSpan"><c>TimeSpan</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteSerial.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteSerial.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteSerial.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteSerial.Start">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteSerial.Stop">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteSerial.Send(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteSerial.Send(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteSerial.Receive(System.String@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteSerial.Receive(System.Byte[]@)">
            <inheritdoc/>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Remote.RemoteBase">
            <summary>
            RemoteBase  
            <code>
            var remote = RemoteFactory.CreateTcpServer(siriusEditorUserControl1, 5001);
            //or 
            var remote = RemoteFactory.CreateSerial(siriusEditorUserControl1, 1, 57600);
            siriusEditorUserControl1.Remote = remote;
            remote.Start();
            </code>
            </summary>
            <remarks>
            Remote communication control by TCP/IP or Serial. <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.PropertyChanged">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.OnConnected">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.OnDisconnected">
            <inheritdoc/>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.OnReceived">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.SyncRoot">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.Index">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.Name">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.IsConnected">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.ControlMode">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.IsAttachedParseEventHandler">
            <summary>
            Is <c>OnParse</c> event handler has attached or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.Marker">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.EditorControl">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.Start">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.Stop">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.Send(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.Send(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.Receive(System.String@)">
            <summary>
            Receive string data
            </summary>
            <param name="text">Received data</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.Receive(System.Byte[]@)">
            <summary>
            Receive bytes data
            </summary>
            <param name="data">Received data</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.ProcessFormat(System.String)">
            <summary>
            Parse received data
            </summary>
            <param name="data">Received data</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.RecipeParse(System.String)">
            <summary>
            Change recipe file
            </summary>
            <param name="fileName">Filename</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.OffsetParse(System.String[])">
            <summary>
            Change array of <c>Offset</c> at <c>IMarker</c>
            </summary>
            <param name="param">Counts, dx,dy,dz,dAngle,...</param>
             <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.MarkerParse(System.String,System.String[])">
            <summary>
            marker commands
            </summary>
            <param name="cmd">Commands like as start, stop, reset </param>
            <param name="param">Array of param</param>
            <returns>Success of faileds</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.StatusParse">
            <summary>
            Query status
            </summary>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.FieldCorrectionParse(System.String[])">
            <summary>
            Scanner field correction 2D
            </summary>
            <param name="param">Row,Col,interval, ErrX1, ErrY1, ErrX2, ErrY2, ...</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.SelectParse(System.String[])">
            <summary>
            Select/deselect
            </summary>
            <param name="param">Array of param</param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.LayerParse(System.String,System.String,System.String[])">
            <summary>
            Read/Write <c>EntityLayer</c> property
            </summary>
            <param name="layerName"></param>
            <param name="propName"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.EntityParse(System.String,System.String,System.String[])">
            <summary>
            Read/Write <c>IEntity</c> property
            </summary>
            <param name="entityName">Name of <c>IEntity</c></param>
            <param name="propName">Name of property</param>
            <param name="param">Array of property param</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.PenParse(System.String,System.String,System.String[])">
            <summary>
            Read/Write <c>EntityPen</c> property
            </summary>
            <param name="penName">Name of pen entity</param>
            <param name="propName">Name of propert</param>
            <param name="param">Array of property param</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.NotifyPropertyChanged(System.String)">
            <summary>
            Notify property value has change event
            </summary>
            <param name="propertyName">Property name</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.NotifyConnected">
            <summary>
            Notify communication has connected
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.NotifyDisconnected">
            <summary>
            Notify communication has disconnected
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteBase.NotifyParse(System.String)">
            <summary>
            Notify parse receive data
            </summary>
            <remarks>
            To parse customized data format only. <br/>
            User must be implement parse routines for received data. <br/>
            </remarks>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Remote.ControlModes">
            <summary>
            <c>ControlModes</c> 
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Remote.ControlModes.Local">
            <summary>
            Local control
            </summary>
            <remarks>
            Prevent control commands. <br/>
            Allowed query commands only. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Remote.ControlModes.Remote">
            <summary>
            Remote control
            </summary>
            <remarks>
            Allowed control commands. <br/>
            Allowed query commands. <br/>
            </remarks>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Remote.IRemote">
            <summary>
            IRemote interface 
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Remote.IRemote.OnConnected">
            <summary>
            Event for peer(or client) has connected
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Remote.IRemote.OnDisconnected">
            <summary>
            Event for peer(or client) has disconnected
            </summary>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Remote.IRemote.OnReceived">
            <summary>
            Event for process receive data for customized protocol format to override
            <code>
            remote.OnReceived += Remote_OnReceived;
            ...
            bool Remote_OnReceived(IRemote remote, string data) 
            {
                // For default process routine
                //return remote.ProcessFormat(data);
                
                var marker = remote.Marker;
                var doc = marker.Document;
                var view = marker.View;
                var rtc = marker.Rtc;
                var laser = marker.Laser;
                var powerMeter = marker.PowerMeter;
                var mainForm = EditorControl;
                char[] seps = { ',' };
                bool success = true;
                string[] tokens = data.Split(seps);
                switch (tokens[0].ToLower())
                {
                    case "recipe":
                        if (tokens.Length >= 2)
                        {
                            if (marker.IsBusy)
                            {
                                success &amp;= false;
                                remote.Send($"NG;");
                            }
                            var fileName = Path.Combine(Config.RecipePath, tokens[1]);
                            mainForm.Invoke(new MethodInvoker(delegate ()
                            {
                                success &amp;= doc.ActOpen(fileName);
                                if (success)
                                    success &amp;= marker.Ready(doc, view, rtc, laser, powerMeter, remote);
                            }));
                            if (success)
                                remote.Send($"OK;");
                            else
                                remote.Send($"OK;");
                        }
                        else
                        {                       
                            remote.Send($"OK;");
                            remote.Send($"Recipe,{doc.FileName};");
                        }
                        break;
                    ...
                }
                return success;
            }
            </code>
            </summary>
            <remarks>
            To process customized protocol format only. <br/>
            User must be implement process routines for received data. <br/>
            Event handler would be called whenever <see cref="P:SpiralLab.Sirius2.Winforms.Config.RemoteTerminator">Config.RemoteTerminator</see> has received. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Remote.IRemote.SyncRoot">
            <summary>
            Synchronization object for communication
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Remote.IRemote.Index">
            <summary>
            Identifier
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Remote.IRemote.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Remote.IRemote.IsConnected">
            <summary>
            Is communication has connected or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Remote.IRemote.ControlMode">
            <summary>
            Current <c>ControlModes</c>
            </summary>
            <remarks>
            Default: <see cref="F:SpiralLab.Sirius2.Winforms.Remote.ControlModes.Remote">ControlModes.Remote</see> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Remote.IRemote.Marker">
            <summary>
            Assigned  <see cref="T:SpiralLab.Sirius2.Winforms.Marker.IMarker">IMarker</see>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Remote.IRemote.EditorControl">
            <summary>
            Assigned <see cref="T:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl">SiriusEditorUserControl</see> 
            </summary>
            <remarks>
            If assigned this value, trying to refresh UI controls like as <c>PropertyGridUserControl</c>, <c>OffsetUserControl</c> by automatically. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.IRemote.Start">
            <summary>
            Start
            </summary>
            <remarks>
            Notify <see cref="E:SpiralLab.Sirius2.Winforms.Remote.IRemote.OnConnected">OnConnected</see> event if avaiable. <br/>
            </remarks>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.IRemote.Stop">
            <summary>
            Stop
            </summary>
            <remarks>
            Notify <see cref="E:SpiralLab.Sirius2.Winforms.Remote.IRemote.OnDisconnected">OnDisconnected</see> event if avaiable. <br/>
            </remarks>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.IRemote.Send(System.Byte[])">
            <summary>
            Send bytes data
            </summary>
            <param name="bytes">Array of byte</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.IRemote.Send(System.String)">
            <summary>
            Send string data
            </summary>
            <param name="text">Text</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.IRemote.ProcessFormat(System.String)">
            <summary>
            Process received data 
            </summary>
            <remarks>
            Function would be called whenever <see cref="P:SpiralLab.Sirius2.Winforms.Config.RemoteTerminator">Config.RemoteTerminator</see> has received. <br/>
            User can override this function for processing customized formats. <br/>
            </remarks>
            <param name="data">Received data</param>
            <returns>Success or failed</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Remote.RemoteHelper">
            <summary>
            RemoteHelper
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteHelper.EntityProperties(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Query property list from <c>IEntity</c> 
            </summary>
            <remarks>
            Target properties are [Browasable] attribute is <c>True</c> only <br/>
            </remarks>
            <param name="entity">Target <c>IEntity</c></param>
            <returns><c>Dictionary&lt;string, object&gt;</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteHelper.EntityReadPropertyValue(SpiralLab.Sirius2.Winforms.Entity.IEntity,System.Reflection.PropertyInfo,System.String)">
            <summary>
            Read property value at <c>IEntity</c> 
            </summary>
            <param name="entity">Target <c>IEntity</c></param>
            <param name="propInfo"><c>PropertyInfo</c></param>
            <param name="propName">Property name</param>
            <returns>Property value as string</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Remote.RemoteHelper.EntityWritePropertyValue(SpiralLab.Sirius2.Winforms.Entity.IEntity,System.Reflection.PropertyInfo,System.String,System.String[])">
            <summary>
            Write property value at <c>IEntity</c> 
            </summary>
            <param name="entity">Target <c>IEntity</c></param>
            <param name="propInfo"><c>PropertyInfo</c></param>
            <param name="propName">Property name</param>
            <param name="propValues">Property value</param>
            <returns>Success or failed</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.remote.remotebase">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.remote.remotebase.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.remote.remotebase.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.remote.remotebase.Basic_C">
            <summary>
              Looks up a localized string similar to Basic.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.remote.remotebase.Connected_DESC">
            <summary>
              Looks up a localized string similar to Client(or Peer) has Connected or Not.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.remote.remotebase.Connected_DISP">
            <summary>
              Looks up a localized string similar to Connected.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.remote.remotebase.Index_DESC">
            <summary>
              Looks up a localized string similar to Index (0,1,2,...).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.remote.remotebase.Index_DISP">
            <summary>
              Looks up a localized string similar to Index.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.remote.remotebase.Mode_DESC">
            <summary>
              Looks up a localized string similar to Control Mode (LOCAL/REMOTE).
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.remote.remotebase.Mode_DISP">
            <summary>
              Looks up a localized string similar to Control Mode.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.remote.remotebase.Name_DESC">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.remote.remotebase.Name_DISP">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.remote.remotebase.Status_C">
            <summary>
              Looks up a localized string similar to Status.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Script.IScript">
            <summary>
            IScript interface
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Script.IScript.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Script.IScript.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Script.IScript.Marker">
            <summary>
            Assigned <see cref="T:SpiralLab.Sirius2.Winforms.Marker.IMarker">IMarker</see>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.IScript.NotifyPropertyChanged(System.String)">
            <summary>
            Notify property value has change
            </summary>
            <remarks>
            User should be call whenever script's property value has changed at within codes. <br/>
            </remarks>
            <param name="propertyName">Property name</param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase">
            <summary>
            MarkerScriptBase
            </summary>
            <remarks>
            User scripts are should be inherited from <c>MarkerScriptBase</c> <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase.PropertyChanged">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase.Name">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase.Description">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase.Marker">
            <inheritdoc/> 
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase.#ctor(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <summary>
            Constructor
            </summary>
            <param name="marker"><c>IMarker</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase.OnStarted(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <summary>
            Event handler for marker has started
            </summary>
            <param name="marker"><c>IMarker</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase.OnTextConvert(SpiralLab.Sirius2.Winforms.Marker.IMarker,SpiralLab.Sirius2.Winforms.Entity.ITextConvertible)">
            <summary>
            Event handler for text has changed
            </summary>
            <param name="marker"><c>IMarker</c></param>
            <param name="textConvertible"><c>ITextConvertible</c></param>
            <returns>Converted string data</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase.OnAfterLayer(SpiralLab.Sirius2.Winforms.Marker.IMarker,SpiralLab.Sirius2.Winforms.Entity.EntityLayer)">
            <summary>
            Event handler for after mark layer 
            </summary>
            <param name="marker"><c>IMarker</c></param>
            <param name="layer"><c>EntityLayer</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase.OnBeforeLayer(SpiralLab.Sirius2.Winforms.Marker.IMarker,SpiralLab.Sirius2.Winforms.Entity.EntityLayer)">
            <summary>
            Event handler for before mark layer 
            </summary>
            <param name="marker"><c>IMarker</c></param>
            <param name="layer"><c>EntityLayer</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase.OnBeforeEntity(SpiralLab.Sirius2.Winforms.Marker.IMarker,SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Event handler for before mark entity 
            </summary>
            <param name="marker"><c>IMarker</c></param>
            <param name="entity"><c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase.OnAfterEntity(SpiralLab.Sirius2.Winforms.Marker.IMarker,SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Event handler for after mark entity 
            </summary>
            <param name="marker"><c>IMarker</c></param>
            <param name="entity"><c>IEntity</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase.OnScriptEvent(SpiralLab.Sirius2.Winforms.Marker.IMarker,SpiralLab.Sirius2.Winforms.Entity.EntityScriptEvent)">
            <summary>
            Event handler for script event entity 
            </summary>
            <param name="marker"><c>IMarker</c></param>
            <param name="entity"><c>EntityScriptEvent</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase.OnEnded(SpiralLab.Sirius2.Winforms.Marker.IMarker,System.Boolean,System.TimeSpan)">
            <summary>
            Event handler for marker has ended
            </summary>
            <param name="marker"><c>IMarker</c></param>
            <param name="success">Success or failed to mark</param>
            <param name="timeSpan"><c>TimeSpan</c></param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.MarkerScriptBase.NotifyPropertyChanged(System.String)">
            <summary>
            Notify property value has change event
            </summary>
            <param name="propertyName">Property name</param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.Script.ScriptEngine">
            <summary>
            ScriptEngine
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Script.ScriptEngine.Provider">
            <summary>
            Code provider
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Script.ScriptEngine.LineOfCodes">
            <summary>
            Lines of code
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Script.ScriptEngine.ObjectType">
            <summary>
            Type of object
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.Script.ScriptEngine.ObjectInstance">
            <summary>
            Instance of object
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.Script.ScriptEngine.compilerResult">
            <summary>
            Result of compile
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.ScriptEngine.#ctor(System.String,SpiralLab.Sirius2.Winforms.Script.ScriptEngine.Providers)">
            <summary>
            Constructor
            </summary>
            <param name="lineOfCodes">Lines of code</param>
            <param name="provider"><c>Providers</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.ScriptEngine.Compile(System.CodeDom.Compiler.CompilerErrorCollection@)">
            <summary>
            Compile
            </summary>
            <param name="compileErrorCollection">If error occurs, returned <c>CompilerErrorCollection</c></param>
            <returns>Success of failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.ScriptEngine.Compile(System.String,System.CodeDom.Compiler.CompilerErrorCollection@)">
            <summary>
            Compile
            </summary>
            <param name="fileName">Source filename</param>
            <param name="compileErrorCollection">If error occurs, returned <c>CompilerErrorCollection</c></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.ScriptEngine.CreateInstance(System.String,System.Object@,System.Object[])">
            <summary>
            Create instance
            </summary>
            <param name="typeName">Type name</param>
            <param name="instance">Create instance</param>
            <param name="args">Array of argument</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.ScriptEngine.SetProperty(System.String,System.Object)">
            <summary>
            Set property value of instance
            </summary>
            <param name="propName">Property name</param>
            <param name="setValue">Property value</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.ScriptEngine.GetProperty(System.String,System.Object@)">
            <summary>
            Get property value of instance
            </summary>
            <param name="propName">Property name</param>
            <param name="getValue">Property value</param>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.Script.ScriptEngine.Function(System.String,System.Object[],System.Object@)">
            <summary>
            Call function of instance
            </summary>
            <param name="funcName">Function name</param>
            <param name="args">Array of argument</param>
            <param name="returnValue">Return value of function call</param>
            <returns>Success or failed</returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.AboutForm">
            <summary>
            About winforms
            </summary>
            <remarks>
            Show version and license information. <br/>
            <img src="images/about.png"/> <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.AboutForm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.AboutForm.CreateParams">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.AboutForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.AboutForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.AboutForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.ClippingForm">
            <summary>
            ClippingForm
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ClippingForm.BBoxes">
            <summary>
            Clipping array of <c>BoundingBox</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ClippingForm.Entities">
            <summary>
            Target array of <c>IEntity</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ClippingForm.Overlap">
            <summary>
            Overlapping distance (mm)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ClippingForm.#ctor(SpiralLab.Sirius2.Winforms.Entity.IEntity[],SpiralLab.Sirius2.Winforms.IView)">
            <summary>
            Constructor
            </summary>
            <param name="targetEntities"></param>
            <param name="view"></param>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ClippingForm.CreateParams">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ClippingForm.Redraw">
            <summary>
            Redraw bounding boxes(or rectangles) at <c>IView</c>
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.ClippingForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ClippingForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ClippingForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.ExpandForm">
            <summary>
            Expand winforms
            </summary>
            <remarks>
            Used with expand(or shrink) <c>EntityPolyline2D</c>. <br/>
            <img src="images/expand.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ExpandForm.Joint">
            <summary>
            <c>HatchJoints</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ExpandForm.Length">
            <summary>
            Length (mm)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ExpandForm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ExpandForm.CreateParams">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.ExpandForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ExpandForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ExpandForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.HatchForm">
            <summary>
            Hatch winforms
            </summary>
            <remarks>
            Used when extract hatch patterns. <br/>
            <img src="images/hatch.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.HatchForm.Mode">
            <summary>
            <c>HatchModes</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.HatchForm.Joint">
            <summary>
            <c>HatchJoints</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.HatchForm.IsZigZag">
            <summary>
            ZigZag or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.HatchForm.Angle">
            <summary>
            Angle (1st)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.HatchForm.Angle2">
            <summary>
            Angle2 (2nd: For Cross line)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.HatchForm.Interval">
            <summary>
            Interval (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.HatchForm.Shift">
            <summary>
            Shift (or offset) (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.HatchForm.Exclude">
            <summary>
            Exclude (mm)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.HatchForm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.HatchForm.CreateParams">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.HatchForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.HatchForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.HatchForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.BlockForm">
            <summary>
            Block winforms
            </summary>
            <remarks>
            To create <c>EntityBlockInsert</c>. <br/>
            <img src="images/blockinsert.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.BlockForm.Document">
            <summary>
            <c>IDocument</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.BlockForm.SelectedBlock">
            <summary>
            Selected <c>EntityBlock</c>
            </summary>
            <remarks>
            It means MasterBlock
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.BlockForm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.BlockForm.CreateParams">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.BlockForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.BlockForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.BlockForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.ImportForm">
            <summary>
            Import winforms
            </summary>
            <remarks>
            Used with import hpgl(plt), dxf, png, jpeg, ... files <br/>
            <img src="images/import.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ImportForm.Entity">
            <summary>
            Imported <c>IEntity</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ImportForm.FileName">
            <summary>
            Selected filename
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ImportForm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ImportForm.DoRender">
            <summary>
            Do render <c>IView</c>
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.ImportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ImportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ImportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.PowerMapCategoriesForm">
            <summary>
            PowerMapCategoriesForm
            </summary>
            <remarks>
            <img src="images/powermapcategory.png"/> <br/>
            </remarks>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.PowerMapCategoriesForm.CategoryValue">
            <summary>
            Category value
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapCategoriesForm.CategoryValue.Category">
            <summary>
            Category (or series)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapCategoriesForm.CategoryValue.IsEnable">
            <summary>
            Enable(or Disable)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapCategoriesForm.CategoryValue.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="category">Category</param>
            <param name="enable">Enable(or disable)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapCategoriesForm.CategoryValue.ToString">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapCategoriesForm.Categories">
            <summary>
            Array of categories
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapCategoriesForm.MinWatt">
            <summary>
            Min (W)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapCategoriesForm.MaxWatt">
            <summary>
            Max (W)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapCategoriesForm.Steps">
            <summary>
            Counts of steps
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapCategoriesForm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapCategoriesForm.CreateParams">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.PowerMapCategoriesForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapCategoriesForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapCategoriesForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.PowerMapUserControl">
            <summary>
            PowerMapUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            <img src="images/powermap.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapUserControl.PowerMap">
            <summary>
            <c>IPowerMap</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapUserControl.Document">
            <summary>
            <c>IDocument</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapUserControl.Rtc">
            <summary>
            <c>IRtc</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapUserControl.Laser">
            <summary>
            <c>ILaser</c>
            </summary>
            <remarks>
            <c>IPowerMap</c> would be implemented at <c>ILaserPowerControl.PowerMap</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapUserControl.PowerMeter">
            <summary>
            <c>IPowerMeter</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapUserControl.RefreshChart">
            <summary>
            Refresh chart
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.PowerMapUserControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapUserControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapUserControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.PowerMapCompensateForm">
            <summary>
            PowerMapCompensateForm
            </summary>
            <remarks>
            <img src="images/powermapcompensate.png"/> <br/>
            </remarks>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.PowerMapCompensateForm.CategoryWattValue">
            <summary>
            Category and Watt
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapCompensateForm.CategoryWattValue.Category">
            <summary>
            Category (or series)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapCompensateForm.CategoryWattValue.Watt">
            <summary>
            Target watt (W)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapCompensateForm.CategoryWattValue.IsEnable">
            <summary>
            Enable(or Disable)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapCompensateForm.CategoryWattValue.#ctor(System.String,System.Double,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="category">Category(or series)</param>
            <param name="watt">Target power (W)</param>
            <param name="enable">Enable(or disable)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapCompensateForm.CategoryWattValue.ToString">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapCompensateForm.CategoryWatts">
            <summary>
            List for binding
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapCompensateForm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapCompensateForm.CreateParams">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.PowerMapCompensateForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapCompensateForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapCompensateForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.PowerMapVerifyForm">
            <summary>
            PowerMapVerifyForm
            </summary>
            <remarks>
            <img src="images/powermapverify.png"/> <br/>
            </remarks>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.PowerMapVerifyForm.CategoryWattValue">
            <summary>
            Category and watt
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapVerifyForm.CategoryWattValue.Category">
            <summary>
            Category (or series)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapVerifyForm.CategoryWattValue.Watt">
            <summary>
            Target watt (W)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapVerifyForm.CategoryWattValue.IsEnable">
            <summary>
            Enable(or Disable)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapVerifyForm.CategoryWattValue.#ctor(System.String,System.Double,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="category">Category(or series)</param>
            <param name="watt">Target power (W)</param>
            <param name="enable">Enable(or disable)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapVerifyForm.CategoryWattValue.ToString">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapVerifyForm.CategoryWatts">
            <summary>
            List for binding
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapVerifyForm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMapVerifyForm.CreateParams">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.PowerMapVerifyForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapVerifyForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMapVerifyForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.ScriptUserControl">
            <summary>
            ScriptUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            <img src="images/script.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ScriptUserControl.Marker">
            <summary>
            <c>IMarker</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ScriptUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.ScriptUserControl.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ScriptUserControl.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ScriptUserControl.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마세요.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.PowerMeterUserControl">
            <summary>
            PowerMeterUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            <img src="images/powermeter.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMeterUserControl.PowerMeter">
            <summary>
            <c>IPowerMeter</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PowerMeterUserControl.Laser">
            <summary>
            ILaser interface
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMeterUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.PowerMeterUserControl.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMeterUserControl.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PowerMeterUserControl.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마세요.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.RemoteUserControl">
            <summary>
            RemoteUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            <img src="images/remote.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.RemoteUserControl.Remote">
            <summary>
            <c>IRemote</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RemoteUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.RemoteUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RemoteUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RemoteUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.ManualUserControl">
            <summary>
            ManualUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            <img src="images/manual.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ManualUserControl.Rtc">
            <summary>
            <c>IRtc</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ManualUserControl.Laser">
            <summary>
            <c>ILaser</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ManualUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ManualUserControl.ProcessDialogKey(System.Windows.Forms.Keys)">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.ManualUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ManualUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ManualUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.PathOptimizerBasePositions">
            <summary>
            Path Optimizer Base Positions
            </summary>
            <remarks>
            Configured <c>Config.PathOptimizerBasePosition</c> <br/>
            Supported x64 runtime only. <br/>
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.PathOptimizerBasePositions.Center">
            <summary>
            Center 
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.PathOptimizerBasePositions.In">
            <summary>
            In
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.PathOptimizerBasePositions.Out">
            <summary>
            Out
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.PathOptimizerForm">
            <summary>
            PathOptimizer winforms
            </summary>
            <remarks>
            Extact <c>PathOptimizerBasePositions</c> position from <c>IEntity</c> and show it. <br/>
            Try to optimize path and show the results. <br/>
            <img src="images/pathoptimizer.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PathOptimizerForm.OriginalLength">
            <summary>
            Original length
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PathOptimizerForm.ResultLength">
            <summary>
            Result(sorted) length
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PathOptimizerForm.ResultOrder">
            <summary>
            Result array of orders
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PathOptimizerForm.Efficiency">
            <summary>
            Efficiency (higher than 100% or lower)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PathOptimizerForm.IsFinished">
            <summary>
            Finished or not
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PathOptimizerForm.#ctor(System.Collections.Generic.List{OpenTK.Vector2})">
            <summary>
            Constructor
            </summary>
            <param name="xyPosition">Array of X,Y locations</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PathOptimizerForm.ComputeEuclideanDistanceMatrix(System.Int32[0:,0:]@)">
            <summary>
            Euclidean distance implemented as a callback. 
            It uses an array of positions and computes the Euclidean distance between the two positions of two different indices.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PathOptimizerForm.NearestPoint(OpenTK.Vector2,System.Collections.Generic.List{System.ValueTuple{OpenTK.Vector2,System.Int32}})">
            <summary>
            점 배열에서 현재 점과 가장 가까운 점 찾아 인덱스 위치 리턴
            이전 점들의 진행 방향(normal) 각도를 구해서 중복된 최단점이 있을때 각도 변화량이 가장 작은것을 찾는 방식
            </summary>
            <param name="pt"></param>
            <param name="map"></param>
            <returns>Index of near point ?</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PathOptimizerForm.SortByDistance(OpenTK.Vector2,System.Collections.Generic.List{System.ValueTuple{OpenTK.Vector2,System.Int32}})">
            <summary>
            최단점 검색 알고리즘
            </summary>
            <param name="from"></param>
            <param name="lst"></param>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PathOptimizerForm.SimpleSort(System.Object)">
            <summary>
            상하좌우, 최단거리 와 같이 단순 알고리즘을 기반으로 동작
            </summary>
            <param name="tag"></param>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.PathOptimizerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PathOptimizerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PathOptimizerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.ArrayForm">
            <summary>
            Array winforms
            </summary>
            <remarks>
            Used when paste array of <c>IEntity</c> from clipboard. <br/>
            <img src="images/array.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ArrayForm.RowPitch">
            <summary>
            Row pitch (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ArrayForm.ColPitch">
            <summary>
            Col pitch (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ArrayForm.Rows">
            <summary>
            Rows
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ArrayForm.Cols">
            <summary>
            Cols
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ArrayForm.IsZigZag">
            <summary>
            Zigzag or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ArrayForm.BaseX">
            <summary>
            Base x (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ArrayForm.BaseY">
            <summary>
            Base y (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ArrayForm.Calcuated">
            <summary>
            Calculate(or create) array of <c>Offset</c> 
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ArrayForm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ArrayForm.CreateParams">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.ArrayForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ArrayForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ArrayForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.ImageTextForm">
            <summary>
            ImageText winforms
            </summary>
            <remarks>
            <c>ImageText</c> by bitmap image for raster(or bitmap) operations. <br/>
            <img src="images/imagetext.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ImageTextForm.FontName">
            <summary>
            Font name
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ImageTextForm.HeightPixel">
            <summary>
            Height pixel
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ImageTextForm.ImageText">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ImageTextForm.Style">
            <summary>
            Font style
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ImageTextForm.IsFill">
            <summary>
            Is fill 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ImageTextForm.OutlinePixel">
            <summary>
            Outline pixel
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ImageTextForm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.ImageTextForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ImageTextForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ImageTextForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.CreateGridsForm">
            <summary>
            Create grids winform
            </summary>
            <remarks>
            Create grid patterns(#) for scanner field correction. <br/>
            <img src="images/creategrids.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.CreateGridsForm.FieldSize">
            <summary>
            Field size (mm)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.CreateGridsForm.RowsCols">
            <summary>
            Row (or col) counts
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.CreateGridsForm.Interval">
            <summary>
            Interval (mm)
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.CreateGridsForm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.CreateGridsForm.CreateParams">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.CreateGridsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.CreateGridsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.CreateGridsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.LicenseForm">
            <summary>
            License winforms
            </summary>
            <remarks>
            Show license information. <br/>
            <img src="images/license.png"/> <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.LicenseForm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.LicenseForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.LicenseForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.LicenseForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.MessageBox">
            <summary>
            MessageBox winforms
            </summary>
            <remarks>
            Customized message box. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.MessageBox.TextLabel">
            <summary>
            <c>TextBoxWithLabel</c> for input values
            </summary>
            <remarks>
            Visibility: <c>False</c> (by default)
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.MessageBox.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.MessageBox.#ctor(System.String,System.String,System.Windows.Forms.MessageBoxButtons)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message</param>
            <param name="title">Title</param>
            <param name="buttons"><c>MessageBoxButtons</c></param>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.MessageBox.CreateParams">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)">
            <summary>
            Show Dialog
            </summary>
            <param name="message">Message</param>
            <param name="title">Title</param>
            <param name="buttons"><c>MessageBoxButtons</c></param>
            <returns><c>DialogResult</c></returns>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.MessageBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.MessageBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.MessageBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.OffsetUserControl">
            <summary>
            OffsetUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            <img src="images/offset.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.OffsetUserControl.Marker">
            <summary>
            <c>IMarker</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.OffsetUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.OffsetUserControl.Refresh">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.OffsetUserControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.OffsetUserControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.OffsetUserControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.MarkerUserControl">
            <summary>
            MarkerUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            <img src="images/marker.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.MarkerUserControl.Marker">
            <summary>
            <c>IMarker</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.MarkerUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.MarkerUserControl.Refresh">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.MarkerUserControl.BtnStart_Click(System.Object,System.EventArgs)">
            <summary>
            Event for start button has clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.MarkerUserControl.BtnStop_Click(System.Object,System.EventArgs)">
            <summary>
            Event for stop button has clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.MarkerUserControl.BtnReset_Click(System.Object,System.EventArgs)">
            <summary>
            Event for reset button has clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.MarkerUserControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.MarkerUserControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.MarkerUserControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.LogUserControl">
            <summary>
            LogUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            <img src="images/log.png"/> <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.LogUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.LogUserControl.OnLogged(SpiralLab.Sirius2.Logger.Types,System.String)">
            <summary>
            Log event callback
            </summary>
            <param name="type"><c>Logger.Type</c></param>
            <param name="message">Message</param>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.LogUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.LogUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.LogUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.RtcUserControl">
            <summary>
            RtcUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            <img src="images/rtc.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.RtcUserControl.Rtc">
            <summary>
            <c>IRtc</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcUserControl.Refresh">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.RtcUserControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcUserControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcUserControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.PenUserControl">
            <summary>
            PenUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            <img src="images/pen.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PenUserControl.Document">
            <summary>
            <c>IDocument</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PenUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.PenUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PenUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PenUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.LaserUserControl">
            <summary>
            LaserUserControl 
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            <img src="images/laser.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.LaserUserControl.Laser">
            <summary>
            <c>ILaser</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.LaserUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.LaserUserControl.Refresh">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.LaserUserControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.LaserUserControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.LaserUserControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.RtcDOUserControl">
            <summary>
            RtcDOUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            Used with <see cref="F:SpiralLab.Sirius2.Winforms.Config.DOut_RtcExtension1Port">Config.DOut_RtcExtension1Port</see>. <br/>
            Used with <see cref="F:SpiralLab.Sirius2.Winforms.Config.DOut_RtcExtension2Port">Config.DOut_RtcExtension2Port</see>. <br/>
            Used with <see cref="F:SpiralLab.Sirius2.Winforms.Config.DOut_RtcLaserPort">Config.DOut_RtcLaserPort</see>. <br/>
            <img src="images/rtcdoutput.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.RtcDOUserControl.Rtc">
            <summary>
            <c>IRtc</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.RtcDOUserControl.DOExt1">
            <summary>
            Rtc Extension1 Port <c>IDOutput</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.RtcDOUserControl.DOExt2">
            <summary>
            Rtc Extension2 Port <c>IDOutput</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.RtcDOUserControl.DOLaserPort">
            <summary>
            Rtc Laser Port <c>IDOutput</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcDOUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcDOUserControl.UpdateExtension1PortNames(System.String[])">
            <summary>
            Update DIO names
            </summary>
            <remarks>
            Used with <c>Config.DOut_RtcExtension1Port</c>
            </remarks>
            <param name="names">Array of names</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcDOUserControl.UpdateExtension2PortNames(System.String[])">
            <summary>
            Update DIO names
            </summary>
            <remarks>
            Used with <c>Config.DOut_RtcExtension2Port</c>
            </remarks>
            <param name="names">Array of names</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcDOUserControl.UpdateLaserPortNames(System.String[])">
            <summary>
            Update DIO names
            </summary>
            <remarks>
            Used with <c>Config.DOut_RtcLaserPort</c>
            </remarks>
            <param name="names">Array of names</param>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.RtcDOUserControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcDOUserControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcDOUserControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.RtcDIUserControl">
            <summary>
            RtcDIUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            Used with <see cref="F:SpiralLab.Sirius2.Winforms.Config.DIn_RtcExtension1Port">Config.DIN_RtcExtension1Port</see>. <br/>
            Used with <see cref="F:SpiralLab.Sirius2.Winforms.Config.DIn_RtcLaserPort">Config.DIN_RtcLaserPort</see>. <br/>
            <img src="images/rtcdinput.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.RtcDIUserControl.Rtc">
            <summary>
            <c>IRtc</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.RtcDIUserControl.DIExt1">
            <summary>
            Rtc Extension1 Port <c>IDInput</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.RtcDIUserControl.DILaserPort">
            <summary>
            Rtc Laser Port <c>IDInput</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcDIUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcDIUserControl.UpdateExtension1PortNames(System.String[])">
            <summary>
            Update DIO names
            </summary>
            <remarks>
            Used with <c>Config.DIN_RtcExtension1Port</c>
            </remarks>
            <param name="names">Array of names</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcDIUserControl.UpdateLaserPortNames(System.String[])">
            <summary>
            Update DIO names
            </summary>
            <remarks>
            Used with <c>Config.DIN_RtcLaserPort</c>
            </remarks>
            <param name="names">Array of names</param>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.RtcDIUserControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcDIUserControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcDIUserControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.RotateForm">
            <summary>
            Rotate winforms
            </summary>
            <remarks>
            Used to calculate <c>ModelRotate</c> at <c>IEntity</c>. <br/>
            <img src="images/rotate.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.RotateForm.Angle">
            <summary>
            Angle for x,y,z axis
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RotateForm.#ctor(SpiralLab.Sirius2.Winforms.Entity.IEntity,OpenTK.Vector3,System.Windows.Forms.Design.IWindowsFormsEditorService)">
            <summary>
            Constructor
            </summary>
            <param name="entity">Target <c>IEntity</c></param>
            <param name="rotate"> Angle for x,y,z axis</param>
            <param name="wfes"><c>IWindowsFormsEditorService</c></param>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.RotateForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RotateForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RotateForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.AlignmentForm">
            <summary>
            Alignment winforms
            </summary>
            <remarks>
            Set <c>Alignments</c> for <c>IEntity</c>. <br/>
            <img src="images/alignment.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.AlignmentForm.Alignment">
            <summary>
            <c>Alignments</c>
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.AlignmentForm.OldAlignment">
            <summary>
            Old <c>Alignments</c>
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.AlignmentForm.entity">
            <summary>
            Target <c>IEntity</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.AlignmentForm.#ctor(SpiralLab.Sirius2.Winforms.Entity.IEntity,SpiralLab.Sirius2.Winforms.Entity.Alignments,System.Windows.Forms.Design.IWindowsFormsEditorService)">
            <summary>
            Constructor
            </summary>
            <param name="entity">Target <c>IEntity</c></param>
            <param name="alignment"><c>Alignment</c></param>
            <param name="wfes"><c>IWindowsFormsEditorService</c></param>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.AlignmentForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.AlignmentForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.AlignmentForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.ScaleForm">
            <summary>
            Scale winforms
            </summary>
            <remarks>
            Used to calculate <c>ModelScale</c> at <c>IEntity</c>. <br/>
            <img src="images/scale.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.ScaleForm.ModelScale">
            <summary>
            Scale ( Should be > 0)
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.ScaleForm.oldScale">
            <summary>
            Old scale
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.ScaleForm.entity">
            <summary>
            Target entity
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ScaleForm.#ctor(SpiralLab.Sirius2.Winforms.Entity.IEntity,System.Double,System.Windows.Forms.Design.IWindowsFormsEditorService)">
            <summary>
            Constructor
            </summary>
            <param name="entity">Target <c>IEntity</c></param>
            <param name="scale">Model scale value</param>
            <param name="wfes"><c>IWindowsFormsEditorService</c></param>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.ScaleForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ScaleForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.ScaleForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.PropertyGridUserControl">
            <summary>
            PropertyGridUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            <img src="images/propertygrid.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PropertyGridUserControl.Document">
            <summary>
            <c>IDocument</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PropertyGridUserControl.View">
            <summary>
            <c>IView</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.PropertyGridUserControl.SelecteObject">
            <summary>
            Assigned object at propertygrid 
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PropertyGridUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PropertyGridUserControl.Refresh">
            <inheritdoc/>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.PropertyGridUserControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PropertyGridUserControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.PropertyGridUserControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm">
            <summary>
            RtcCorrection2D winforms
            </summary>
            <remarks>
            Used to scanner field correction 2D. <br/>
            <img src="images/rtccorrection2d.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm.Rtc">
            <summary>
            <c>IRtc </c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm.RtcCorrection">
            <summary>
            <c>RtcCorrection2D</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm.#ctor(SpiralLab.Sirius2.Scanner.Rtc.IRtc,SpiralLab.Sirius2.Scanner.Rtc.RtcCorrection2D)">
            <summary>
            Constructor
            </summary>
            <param name="rtc"><c>SpiralLab.Sirius2.Scanner.IRtc</c></param>
            <param name="rtcCorrection"><c>SpiralLab.Sirius2.Scanner.RtcCorrection2D</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm.RefreshData">
            <summary>
            Refresh DataGridView
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm.btnApply_Click(System.Object,System.EventArgs)">
            <summary>
            Notify <see cref="E:SpiralLab.Sirius2.Winforms.Config.OnScannerFieldCorrection2DApply">Config.OnScannerFieldCorrection2DApply</see> event. <br/>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcCorrection2DForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.RtcCorrection3DForm">
            <summary>
            RtcCorrection3D winforms
            </summary>
            <remarks>
            Used to scanner field correction 3D. <br/>
            <img src="images/rtccorrection3d.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.RtcCorrection3DForm.Rtc">
            <summary>
            <c>IRtc</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.RtcCorrection3DForm.RtcCorrection">
            <summary>
            <c>RtcCorrection3D</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcCorrection3DForm.#ctor(SpiralLab.Sirius2.Scanner.Rtc.IRtc,SpiralLab.Sirius2.Scanner.Rtc.RtcCorrection3D)">
            <summary>
            Constructor
            </summary>
            <param name="rtc"><c>SpiralLab.Sirius2.Scanner.IRtc</c></param>
            <param name="rtcCorrection"><c>SpiralLab.Sirius2.Scanner.RtcCorrection3D</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcCorrection3DForm.RefreshDataLower">
            <summary>
            Refresh Lower DataGridView
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcCorrection3DForm.RefreshDataUpper">
            <summary>
            Refresh Upper DataGridView
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcCorrection3DForm.btnApply_Click(System.Object,System.EventArgs)">
            <summary>
            Notify <see cref="E:SpiralLab.Sirius2.Winforms.Config.OnScannerFieldCorrection3DApply">Config.OnScannerFieldCorrection3DApply</see> event. <br/>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.RtcCorrection3DForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcCorrection3DForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.RtcCorrection3DForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.EditorUserControl">
            <summary>
            EditorUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            <img src="images/editor.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.EditorUserControl.View">
            <summary>
            <c>IView</c> 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.EditorUserControl.Document">
            <summary>
            <c>IDocument</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.EditorUserControl.Rtc">
            <summary>
            <c>IRtc</c>
            </summary>
            <remarks>
            Created by <c>ScannerFactory</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.EditorUserControl.Renderer">
            <summary>
            GL control
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.EditorUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.EditorUserControl.MnuExtractPointsCloud_Click(System.Object,System.EventArgs)">
            <summary>
            Notify <see cref="E:SpiralLab.Sirius2.Winforms.Config.OnExtractPointsCloud">Config.OnExtractPointsCloud</see> event. <br/>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.EditorUserControl.MnuCorrection2D_Click(System.Object,System.EventArgs)">
            <summary>
            Notify <see cref="E:SpiralLab.Sirius2.Winforms.Config.OnScannerFieldCorrection2DShow">Config.OnScannerFieldCorrection2DShow</see> event. <br/>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.EditorUserControl.MnuCorrection3D_Click(System.Object,System.EventArgs)">
            <summary>
            Notify <see cref="E:SpiralLab.Sirius2.Winforms.Config.OnScannerFieldCorrection3DShow">Config.OnScannerFieldCorrection3DShow</see> event. <br/>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.EditorUserControl.components">
            <summary>
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.EditorUserControl.Dispose(System.Boolean)">
            <summary>
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.EditorUserControl.InitializeComponent">
            <summary>
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마세요.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl">
            <summary>
            SiriusEditorUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            <img src="images/siriuseditorcontrol.png"/> <br/>
            1. <see cref="T:SpiralLab.Sirius2.Winforms.UI.TreeViewUserControl">TreeViewUserControl</see> <br/>
            2. <see cref="T:SpiralLab.Sirius2.Winforms.UI.TreeViewBlockUserControl">TreeViewBlockUserControl</see> <br/>
            3. <see cref="T:SpiralLab.Sirius2.Winforms.UI.PenUserControl">PenUserControl</see> <br/>
            4. <see cref="T:SpiralLab.Sirius2.Winforms.UI.EditorUserControl">EditorUserControl</see> <br/>
            5. <see cref="T:SpiralLab.Sirius2.Winforms.UI.EditorUserControl">EditorUserControl</see> <br/>
            6. <see cref="T:SpiralLab.Sirius2.Winforms.UI.RtcUserControl">RtcUserControl</see> <br/>
            7. <see cref="T:SpiralLab.Sirius2.Winforms.UI.LaserUserControl">LaserUserControl</see> <br/>
            8. <see cref="T:SpiralLab.Sirius2.Winforms.UI.MarkerUserControl">MarkerUserControl</see> <br/>
            9. <see cref="T:SpiralLab.Sirius2.Winforms.UI.ManualUserControl">ManualUserControl</see> <br/>
            10. <see cref="T:SpiralLab.Sirius2.Winforms.UI.RtcDIUserControl">RtcDIUserControl</see> <br/>
            11. <see cref="T:SpiralLab.Sirius2.Winforms.UI.RtcDOUserControl">RtcDOUserControl</see> <br/>
            12. <see cref="T:SpiralLab.Sirius2.Winforms.UI.RtcDOUserControl">RtcDOUserControl</see> <br/>
            13. <see cref="T:SpiralLab.Sirius2.Winforms.UI.PowerMeterUserControl">PowerMeterUserControl</see> <br/>
            14. <see cref="T:SpiralLab.Sirius2.Winforms.UI.PowerMapUserControl">PowerMapUserControl</see> <br/>
            15. <see cref="T:SpiralLab.Sirius2.Winforms.UI.ScriptUserControl">ScriptUserControl</see> <br/>
            16. <see cref="T:SpiralLab.Sirius2.Winforms.UI.RemoteUserControl">RemoteUserControl</see> <br/>
            17. <see cref="T:SpiralLab.Sirius2.Winforms.UI.PropertyGridUserControl">PropertyGridUserControl</see> <br/>
            18. <see cref="T:SpiralLab.Sirius2.Winforms.UI.LogUserControl">LogUserControl</see> <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.OnOpenBefore">
            <summary>
            Event for before open sirius file at <c>SiriusEditorUserControl</c>
            </summary>
            <remarks>
            User can register event handler for customized dialog-box before open sirius file. <br/>
            Event will be fired when user has click 'Open' menu at <c>SiriusEditorUserControl</c>. <br/>
            If user event handler is not attached, default routine has executed. <br/>
            If returned 'False', default routine would be executed. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.NotifyOpenBefore">
            <summary>
            Notify before open sirius file
            </summary>
            <returns>Success or failed</returns>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.OnSaveBefore">
            <summary>
            Event for save sirius file at <c>SiriusEditorUserControl</c>
            </summary>
            <remarks>
            User can register event handler for customized dialog-box before save sirius file. <br/>
            Event will be fired when user has click 'Save' menu at <c>SiriusEditorUserControl</c>. <br/>
            If user event handler is not attached, default routine has executed. <br/>
            If returned 'False', default routine would be executed. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.NotifySaveBefore">
            <summary>
            Notify save sirius file
            </summary>
            <returns>Success or failed</returns>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.TitleName">
            <summary>
            Title name
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.IsDisableControl">
            <summary>
            Disable UI controls or not
            </summary>
            <remarks>
            To do not allow user operations during marker is working. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.Document">
            <summary>
            <c>IDocument</c> (aka. Recipe data)
            </summary>
            <remarks>
            <c>Document</c> would be created by <c>OnLoad</c> event handler.<br/>
            Do action by <c>IDocument.Act...</c> functions. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.Rtc">
            <summary>
            <c>IRtc</c>
            </summary>
            <remarks>
            Created by <c>ScannerFactory</c>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.Laser">
            <summary>
            <c>ILaser</c>
            </summary>
            <remarks>
            Created by <c>LaserFactory</c>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.Marker">
            <summary>
            <c>IMarker</c>
            </summary>
            <remarks>
            Created by <c>MarkerFactory</c>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.View">
            <summary>
            <c>IView</c>
            </summary>
            <remarks>
            Created by internally. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.Remote">
            <summary>
            <c>IRemote</c>
            </summary>
            <remarks>
            Created by <c>RemoteFactory</c>. <br/>
            To do control by remotely. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.PowerMeter">
            <summary>
            <c>IPowerMeter</c>
            </summary>
            <remarks>
            Created by <c>PowerMeterFactory</c>. <br/>
            To do control <c>IPowerMeter</c>. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.DIExt1">
            <summary>
            RTC DI extension1 port (16 bits)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.DILaserPort">
            <summary>
            RTC DI laser port (2 bits)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.DOExt1">
            <summary>
            RTC DO extension1 port (16 bits)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.DOExt2">
            <summary>
            RTC DO extension2 port (8 bits)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.DOLaserPort">
            <summary>
            RTC DO laser port (2 bits)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.TreeViewCtrl">
            <summary>
            Treeview user control for <c>IEntity</c> within <c>EntityLayer</c> nodes
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.TreeViewBlockCtrl">
            <summary>
            Treeview user control for <c>EntityBlock</c> nodes
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.PropertyGridCtrl">
            <summary>
            PropertyGrid user control for properties of <c>IEntity</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.EditorCtrl">
            <summary>
            Editor(by OpenTK) user control for rendering view 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.PenCtrl">
            <summary>
            User control for list of <c>EntityPen</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.LaserCtrl">
            <summary>
            PropertyGrid user control for <c>ILaser</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.RtcCtrl">
            <summary>
            PropertyGrid user control for <c>IRtc</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.MarkerCtrl">
            <summary>
            PropertyGrid user control for <c>IMarer</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.OffsetCtrl">
            <summary>
            User control for list of <c>IMarker.Offsets</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.RtcDICtrl">
            <summary>
            User control for RTC DI (extension 1 and laser port)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.RtcDOCtrl">
            <summary>
            User control for RTC DO (extension 1,2 and laser port)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.ManualCtrl">
            <summary>
            User control for manual control
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.PowerMeterCtrl">
            <summary>
            User control for <c>IPowerMeter</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.PowerMapCtrl">
            <summary>
             User control for <c>IPowerMap</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.ScriptCtrl">
            <summary>
            User control for <c>IScript</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.RemoteCtrl">
            <summary>
            PropertyGrid user control for <c>IRemote</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.LogCtrl">
            <summary>
            User control for logged messages
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.#ctor">
            <summary>
            Constructor
            </summary>
            <remarks>
            Create devices likes as <c>IRtc</c>, <c>ILaser</c> and <c>IMarker</c> and assign. <br/>
            Digital I/O devices likes as <c>DInput</c>s, <c>DInput</c>s are created when assign <c>IRtc</c> by automatically. <br/>
            Create <c>IMarker</c> and assign. <br/>
            <c>IDocument</c> is created by automatically. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.OnLoad(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.Refresh">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.MenuVisibility">
            <summary>
            Menu visibility
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.PropertyVisibility">
            <summary>
            Specific property visibility
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.TabControl1_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Switch view mode
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.Document_OnOpened(SpiralLab.Sirius2.Winforms.IDocument,System.String)">
            <summary>
            Event handler for <c>Document</c> has opened
            </summary>
            <param name="document"><c>IDocument</c></param>
            <param name="fileName">Filename</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.Document_OnSaved(SpiralLab.Sirius2.Winforms.IDocument,System.String)">
            <summary>
            Event handler for <c>Document</c> has saved
            </summary>
            <param name="document"><c>IDocument</c></param>
            <param name="fileName">Filename</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.Document_OnSelected(SpiralLab.Sirius2.Winforms.IDocument,SpiralLab.Sirius2.Winforms.Entity.IEntity[])">
            <summary>
            Event handler for <c>IEntity</c> has selected
            </summary>
            <param name="document"><c>IDocument</c></param>
            <param name="entities">Selected array of <c>IEntity</c></param>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.lastCurrentPos">
            <summary>
            Last mouse cursor location
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.Marker_OnStarted(SpiralLab.Sirius2.Winforms.Marker.IMarker)">
            <summary>
            Event handler for <c>IMarker</c> has started
            </summary>
            <param name="marker"><c>IMarker</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.Marker_OnEnded(SpiralLab.Sirius2.Winforms.Marker.IMarker,System.Boolean,System.TimeSpan)">
            <summary>
            Event handler for <c>IMarker</c> has ended
            </summary>
            <param name="marker"><c>IMarker</c></param>
            <param name="success">Sucess(or failed) to mark</param>
            <param name="ts"><c>TimeSpan</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.Mof_OnEncoderChanged(SpiralLab.Sirius2.Scanner.Rtc.IRtcMoF,System.Int32,System.Int32)">
            <summary>
            Event handler for external ENCODER values has changed
            </summary>
            <param name="rtcMoF"><c>IRtcMoF</c></param>
            <param name="encX">ENC X(0)</param>
            <param name="encY">ENC Y(1)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.PowerMeter_OnCleared(SpiralLab.Sirius2.PowerMeter.IPowerMeter)">
            <summary>
            Event handler for powermeter data has cleared
            </summary>
            <param name="powerMeter"><c>IPowerMeter</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.PowerMeter_OnStarted(SpiralLab.Sirius2.PowerMeter.IPowerMeter)">
            <summary>
            Event handler for powermeter has started
            </summary>
            <param name="powerMeter"><c>IPowerMeter</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.PowerMeter_OnStopped(SpiralLab.Sirius2.PowerMeter.IPowerMeter)">
            <summary>
            Event handler for powermeter has stopped
            </summary>
            <param name="powerMeter"><c>IPowerMeter</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.PowerMeter_OnMeasured(SpiralLab.Sirius2.PowerMeter.IPowerMeter,System.DateTime,System.Double)">
            <summary>
            Event handler for powermeter has mesaured data
            </summary>
            <param name="powerMeter"><c>IPowerMeter</c></param>
            <param name="dt"><c>DateTime</c></param>
            <param name="watt">Measured data(W)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.DoRender">
            <summary>
            Do <c>IView</c> render by forcily
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.SiriusEditorUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.TextBoxWithLabel">
            <summary>
            TextBoxWithLabel
            </summary>
            <remarks>
            Control for <c>TextBox</c> + <c>Label</c> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.TextBoxWithLabel.LabelText">
            <summary>
            Text
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.TextBoxWithLabel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.TextBoxWithLabel.OnResize(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.Resize event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.TreeViewBlockUserControl">
            <summary>
            TreeViewBlockUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            Used to show <c>IDocument.Blocks</c> at <c>TreeView</c>. <br/>
            <img src="images/treeviewblock.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.TreeViewBlockUserControl.Document">
            <summary>
            <c>IDocument</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.TreeViewBlockUserControl.Rtc">
            <summary>
            <c>IRtc</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.TreeViewBlockUserControl.View">
            <summary>
            <c>IView</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.TreeViewBlockUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.TreeViewBlockUserControl.TreeviewPopulate">
            <summary>
            Populate treeview higher level (layer) by assigned <c>IDocument</c>
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.TreeViewBlockUserControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.TreeViewBlockUserControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.TreeViewBlockUserControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.TreeViewUserControl">
            <summary>
            TreeViewUserControl
            </summary>
            <remarks>
            User can insert(or create) usercontrol at own winforms. <br/>
            Used to show <c>IDocument.Layers</c> at <c>TreeView</c>. <br/>
            <img src="images/treeview.png"/> <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.TreeViewUserControl.Document">
            <summary>
            <c>IDocument</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.UI.TreeViewUserControl.Marker">
            <summary>
            <c>IMarker</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.TreeViewUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.TreeViewUserControl.BtnBlockInsert_Click(System.Object,System.EventArgs)">
            <summary>
            Notify <see cref="E:SpiralLab.Sirius2.Winforms.Config.OnBlockInsert">Config.OnBlockInsert</see> event. <br/>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.TreeViewUserControl.BtnPathOptimizer_Click(System.Object,System.EventArgs)">
            <summary>
            Notify <see cref="E:SpiralLab.Sirius2.Winforms.Config.OnOptimizePath">Config.OnOptimizePath</see> event. <br/>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.TreeViewUserControl.TreeviewPopulate">
            <summary>
            Populate treeview higher level (layer) by assigned <c>IDocument</c>
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.TreeViewUserControl.TreeviewPopulate(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Populate treenode by parent of entity
            </summary>
            <param name="parentEntity"></param>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.UI.TreeViewUserControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.TreeViewUserControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.UI.TreeViewUserControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.MultiSelectTreeview">
            <summary>
            ref: https://www.codeproject.com/Articles/20581/Multiselect-Treeview-Implementation
            revisied by hcchoi@spirallab.co.kr
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.UI.EmptyTreeNode">
            <summary>
            For Empty Tree Node
            Expand/collapse when +- icon has clicked
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.ViewFactory">
            <summary>
            Factory for view
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewFactory.CreateDefault(System.String,OpenTK.GLControl)">
            <summary>
            Create default view
            </summary>
            <param name="name">Name</param>
            <param name="glControl"><c> OpenTK.GLControl </c></param>
            <returns><c>IView</c></returns>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.ViewModes">
            <summary>
            ViewModes
            </summary>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.ViewModes.Entity">
            <summary>
            Edit for Entity and Layers
            </summary>
            <remarks>
            Default
            </remarks>
        </member>
        <member name="F:SpiralLab.Sirius2.Winforms.ViewModes.Block">
            <summary>
            Edit for Block
            </summary>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.IView">
            <summary>
            IView interface
            </summary>
            <remarks>
            Handle user events likes keybaord, mouse. <br/>
            Render <c>IEntity</c> to display. <br/>
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.IView.OnRenderAfter">
            <summary>
            Event for after render 
            <code>
            var view = siriusEditorUserControl1.EditorCtrl.View;
            view.OnRenderAfter += View_RenderAfter;
            ...
            void View_RenderAfter(IView view)
            {
                // Do some opengl works by OpenTK...
            }
            </code>
            </summary>
            <remarks>
            User can write custom routines with <c>OpenTK.GLControl</c> <br/>
            Event will be fired just before <c>SwapBuffers</c> at every <c>Render</c> scene. <br/>
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IView.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IView.Document">
            <summary>
            <c>IDocument</c> interface
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IView.ViewMode">
            <summary>
            <c>ViewModes</c>
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IView.Marker">
            <summary>
            <c>IMarker</c> interface
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IView.Renderer">
            <summary>
            <c>OpenTK.GLControl</c>
            </summary>
            <remarks>
            v3.3.3 only
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IView.Camera">
            <summary>
            <c>ICamera</c> interface
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IView.RenderTime">
            <summary>
            Render time (msec)
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IView.IsRubberBanding">
            <summary>
            Is render for rubber banding rectangle or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IView.IsDragging">
            <summary>
            Is render for dragging entities or not
            </summary>
            <remarks>
            Used by internally
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IView.IsClipping">
            <summary>
            Is render for preview clipping rectangles or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IView.ClippingBBoxes">
            <summary>
            Preview rectangles for clipping 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IView.HitTestRealThreshold">
            <summary>
            Calculated real threshold distance(mm) when hit testing by <see cref="P:SpiralLab.Sirius2.Winforms.Config.HitTestThresholdByPixel">Config.HitTestThresholdByPixel</see>
            </summary>
            <remarks>
            Recalculated every hit testing (Used by internally)
            </remarks>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IView.HitTestThreshold">
            <summary>
            Threshold distance(mm) when hit testing by <see cref="P:SpiralLab.Sirius2.Winforms.Config.HitTestThresholdByPixel">Config.HitTestThresholdByPixel</see> 
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.IView.Tag">
            <summary>
            User data
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.Initialize">
            <summary>
            Initialize
            </summary>
            <returns>Success or failed</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.MakeCurrent">
            <summary>
            Make render as current 
            </summary>
            <remarks>
            Used with multiple <c>IView</c> only. <br/>
            </remarks>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.Render">
            <summary>
            Render view
            </summary>
            <remarks>
            Do render whenever need to invalidate
            </remarks>
            <returns>Render time (msec)</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.Dp2Lp(System.Drawing.Point,System.Double@,System.Double@)">
            <summary>
            Convert device to logical coordinate
            </summary>
            <remarks>
            Physical(or Device) coordinate to user coordinate system. <br/>
            </remarks>
            <param name="p">Pixel (px)</param>
            <param name="x">Logical x (mm)</param>
            <param name="y">Logical y (mm)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.Dp2Lp(System.Int32)">
            <summary>
            Convert device to logical length
            </summary>
            <param name="pixel">Pixel (length)</param>
            <returns>Logical length (mm)</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.OnLoad(System.Object,System.EventArgs)">
            <summary>
            To implement OnLoad event
            </summary>
            <param name="sender">Sender(or caller)</param>
            <param name="e"><c>EventArgs</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.OnResized(System.Object,System.EventArgs)">
            <summary>
            To implement OnResized event
            </summary>
            <param name="sender">Sender(or caller)</param>
            <param name="e"><c>EventArgs</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            To implement OnMouseDown event
            </summary>
            <param name="sender">Sender(or caller)</param>
            <param name="e"><c>EventArgs</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            To implement OnMouseUp event
            </summary>
            <param name="sender">Sender(or caller)</param>
            <param name="e"><c>MouseEventArgs</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.OnMouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            To implement OnMouseClick event
            </summary>
            <param name="sender">Sender(or caller)</param>
            <param name="e"><c>MouseEventArgs</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            To implement OnMouseMove event
            </summary>
            <param name="sender">Sender(or caller)</param>
            <param name="e"><c>MouseEventArgs</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.OnMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            To implement OnMouseWheel event
            </summary>
            <param name="sender">Sender(or caller)</param>
            <param name="e"><c>MouseEventArgs</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.OnPreviewKeyDown(System.Object,System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            To implement OnPreviewKeyDown event
            </summary>
            <param name="sender">Sender(or caller)</param>
            <param name="e"><c>PreviewKeyDownEventArgs</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.OnKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            To implement OnKeyPress event
            </summary>
            <param name="sender">Sender(or caller)</param>
            <param name="e"><c>KeyPressEventArgs</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            To implement OnKeyDown event
            </summary>
            <param name="sender">Sender(or caller)</param>
            <param name="e"><c>KeyPressEventArgs</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.OnKeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            To implement OnKeyUp event
            </summary>
            <param name="sender">Sender(or caller)</param>
            <param name="e"><c>KeyEventArgs</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.OnEnter(System.Object)">
            <summary>
            To implement OnEnter event
            </summary>
            <param name="sender">Sender(or caller)</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.IView.OnLeave(System.Object)">
            <summary>
            To implement OnLeave event
            </summary>
            <param name="sender">Sender(or caller)</param>
        </member>
        <member name="T:SpiralLab.Sirius2.Winforms.ViewBase">
            <summary>
            ViewBase
            </summary>
            <remarks>
            View base version
            </remarks>
        </member>
        <member name="E:SpiralLab.Sirius2.Winforms.ViewBase.OnRenderAfter">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.Name">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.Document">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.Marker">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.ViewMode">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.Camera">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.RenderTime">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.Renderer">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.Shader2D">
            <summary>
            Shader 2D
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.Shader3D">
            <summary>
            Shader 3D
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.ShaderTexture">
            <summary>
            Shader Texture
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.ShaderLightning">
            <summary>
            Shader Lightning
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.IsRubberBanding">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.IsRubberBandingTest">
            <summary>
            Is rubber banding test has started or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.IsDragging">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.IsDraggingTest">
            <summary>
            Is dragging test has started or not
            </summary>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.IsClipping">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.ClippingBBoxes">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.HitTestRealThreshold">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.HitTestThreshold">
            <inheritdoc/>
        </member>
        <member name="P:SpiralLab.Sirius2.Winforms.ViewBase.Tag">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.#ctor(System.String,OpenTK.GLControl)">
            <summary>
            Constructor
            </summary>
            <param name="name">Name</param>
            <param name="glControl"><c>OpenTK.GLControl </c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.Dispose(System.Boolean)">
            <summary>
            Dispose internal resources
            </summary>
            <param name="disposing">Explicit dispose or not</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.ToString">
            <summary>
            Represent for <c>IView</c>
            </summary>
            <returns>Description for <c>IView</c></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.Dp2Lp(System.Drawing.Point,System.Double@,System.Double@)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.Dp2Lp(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.OnLoad(System.Object,System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.OnResized(System.Object,System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.IsPressedAnyModifierKeys">
            <summary>
            Is pressed keys like as combination of CTRL, SHIFT, ALT
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.OnMouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.OnMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.OnPreviewKeyDown(System.Object,System.Windows.Forms.PreviewKeyDownEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.OnKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.OnKeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.OnEnter(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.OnLeave(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.MakeCurrent">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.Render">
            <inheritdoc/>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.OnRender">
            <summary>
            Draw entities
            </summary>
            <returns>Render time</returns>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.SetOrthographicProjection">
            <summary>
            As orthographic projection
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.SetPerspectiveProjection">
            <summary>
            As perspective projection
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.DrawAxes(OpenTK.Matrix4,System.Single)">
            <summary>
            Draw x,y,z axes at assigned model matrix
            </summary>
            <param name="modelMatrix">Model matrix</param>
            <param name="unscaledSize">unscaled size</param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.DrawDragging">
            <summary>
            Draw dragging entities
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.DrawBoundingBox(SpiralLab.Sirius2.Winforms.Entity.IEntity)">
            <summary>
            Draw bounding box
            </summary>
            <param name="entity"><c>IEntity</c></param>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.DrawLayers">
            <summary>
            Draw layers
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.DrawBlocks">
            <summary>
            Draw blocks
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.DrawBoundingBox">
            <summary>
            Draw bounding box
            </summary>
        </member>
        <member name="M:SpiralLab.Sirius2.Winforms.ViewBase.NotifyAfterRender(SpiralLab.Sirius2.Winforms.IView)">
            <summary>
            Notify render after event
            </summary>
            <remarks>
            User can write custom routines for <c>Renderer</c> by <c>OpenTK.GLControl</c> <br/>
            Event handler would be called just before <c>SwapBuffers</c>. <br/>
            </remarks>
            <param name="view"><c>IView</c></param>
        </member>
        <member name="T:Accord.Controls.Chart">
            <summary>
            Chart control.
            </summary>
            
            <remarks>
            <para>
              Note: The Chart class came from the AForge.NET Framework, from a time when better charting
              solutions were not really available for the .NET Framework. This class is mainly intended to 
              support applications that had already been written using AForge.NET and that would benefit from 
              porting over to Accord.NET.</para>
            <para>
              At this time, if you need support for advanced charts in your application, it is recommended 
              to use a more complete charting solution for .NET such as <a href="https://www.nuget.org/packages/ZedGraph/">
              ZedGraph</a> or <a href="https://code.msdn.microsoft.com/Samples-Environments-for-b01e9c61">Microsoft's
              own charting controls</a>.
            </para>
            </remarks>
            
        </member>
        <member name="T:Accord.Controls.Chart.SeriesType">
            <summary>
            Chart series type enumeration.
            </summary>
        </member>
        <member name="F:Accord.Controls.Chart.SeriesType.Line">
            <summary>
            Line style.
            </summary>
        </member>
        <member name="F:Accord.Controls.Chart.SeriesType.Dots">
            <summary>
            Dots style.
            </summary>
        </member>
        <member name="F:Accord.Controls.Chart.SeriesType.ConnectedDots">
            <summary>
            Connected dots style.
            </summary>
        </member>
        <member name="P:Accord.Controls.Chart.RangeX">
            <summary>
            Chart's X range.
            </summary>
            
            <remarks><para>The value sets the X range of data to be displayed on the chart.</para></remarks>
            
        </member>
        <member name="P:Accord.Controls.Chart.RangeY">
             <summary>
             Chart's Y range.
             </summary>
             
             <remarks>The value sets the Y range of data to be displayed on the chart.</remarks>
            
        </member>
        <member name="F:Accord.Controls.Chart.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Accord.Controls.Chart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Accord.Controls.Chart"/> class.
            </summary>
            
        </member>
        <member name="M:Accord.Controls.Chart.Dispose(System.Boolean)">
            <summary>
            Dispose the object.
            </summary>
        </member>
        <member name="M:Accord.Controls.Chart.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Accord.Controls.Chart.AddDataSeries(System.String,System.Drawing.Color,Accord.Controls.Chart.SeriesType,System.Int32)">
            <summary>
            Add data series to the chart.
            </summary>
            
            <param name="name">Data series name.</param>
            <param name="color">Data series color.</param>
            <param name="type">Data series type.</param>
            <param name="width">Width (depends on the data series type, see remarks).</param>
            
            <remarks><para>Adds new empty data series to the collection of data series. To update this
            series the <see cref="M:Accord.Controls.Chart.UpdateDataSeries(System.String,System.Double[0:,0:])"/> method should be used.</para>
            
            <para>The meaning of the width parameter depends on the data series type:
            <list type="bullet">
            <item><b>Line</b> - width of the line;</item>
            <item><b>Dots</b> - size of dots (rectangular dots with specified width and the same height);</item>
            <item><b>Connected dots</b> - size of dots (dots are connected with one pixel width line).</item>
            </list>
            </para>
            </remarks>
            
        </member>
        <member name="M:Accord.Controls.Chart.AddDataSeries(System.String,System.Drawing.Color,Accord.Controls.Chart.SeriesType,System.Int32,System.Boolean)">
            <summary>
            Add data series to the chart.
            </summary>
            
            <param name="name">Data series name.</param>
            <param name="color">Data series color.</param>
            <param name="type">Data series type.</param>
            <param name="width">Width (depends on the data series type, see remarks).</param>
            <param name="updateYRange">Specifies if <see cref="P:Accord.Controls.Chart.RangeY"/> should be updated.</param>
            
            <remarks><para>Adds new empty data series to the collection of data series.</para>
            
            <para>The <b>updateYRange</b> parameter specifies if the data series may affect displayable
            Y range. If the value is set to false, then displayable Y range is not updated, but used the
            range, which was specified by user (see <see cref="P:Accord.Controls.Chart.RangeY"/> property). In the case if the
            value is set to true, the displayable Y range is recalculated to fully fit the new data
            series.</para>
            </remarks>
            
        </member>
        <member name="M:Accord.Controls.Chart.UpdateDataSeries(System.String,System.Double[0:,0:])">
            <summary>
            Update data series on the chart.
            </summary>
            
            <param name="name">Data series name to update.</param>
            <param name="data">Data series values.</param>
            
        </member>
        <member name="M:Accord.Controls.Chart.RemoveDataSeries(System.String)">
            <summary>
            Remove data series from the chart.
            </summary>
            
            <param name="name">Data series name to remove.</param>
            
        </member>
        <member name="M:Accord.Controls.Chart.RemoveAllDataSeries">
            <summary>
            Remove all data series from the chart.
            </summary>
        </member>
        <member name="M:Accord.Controls.Chart.UpdateYRange">
            <summary>
            Update Y range.
            </summary>
        </member>
        <member name="P:Accord.DoubleRange.Min">
            <summary>
              Minimum value of the range.
            </summary>
            
            <remarks>
              Represents minimum value (left side limit) of the range [<b>min</b>, max].
            </remarks>
            
        </member>
        <member name="P:Accord.DoubleRange.Max">
            <summary>
              Maximum value of the range.
            </summary>
            
            <remarks>
              Represents maximum value (right side limit) of the range [min, <b>max</b>].
            </remarks>
            
        </member>
        <member name="P:Accord.DoubleRange.Length">
            <summary>
              Gets the length of the range, defined as (max - min).
            </summary>
            
        </member>
        <member name="M:Accord.DoubleRange.#ctor(System.Double,System.Double)">
            <summary>
              Initializes a new instance of the <see cref="T:Accord.DoubleRange"/> class.
            </summary>
            
            <param name="min">Minimum value of the range.</param>
            <param name="max">Maximum value of the range.</param>
            
        </member>
        <member name="M:Accord.DoubleRange.IsInside(System.Double)">
            <summary>
              Check if the specified value is inside of the range.
            </summary>
            
            <param name="x">Value to check.</param>
            
            <returns>
              <b>True</b> if the specified value is inside of the range or <b>false</b> otherwise.
            </returns>
            
        </member>
        <member name="M:Accord.DoubleRange.IsInside(Accord.DoubleRange)">
            <summary>
              Check if the specified range is inside of the range.
            </summary>
            
            <param name="range">Range to check.</param>
            
            <returns>
              <b>True</b> if the specified range is inside of the range or <b>false</b> otherwise.
            </returns>
            
        </member>
        <member name="M:Accord.DoubleRange.IsOverlapping(Accord.DoubleRange)">
            <summary>
              Check if the specified range overlaps with the range.
            </summary>
            
            <param name="range">Range to check for overlapping.</param>
            
            <returns>
              <b>True</b> if the specified range overlaps with the range or <b>false</b> otherwise.
            </returns>
            
        </member>
        <member name="M:Accord.DoubleRange.Intersection(Accord.DoubleRange)">
            <summary>
              Computes the intersection between two ranges.
            </summary>
            
            <param name="range">The second range for which the intersection should be calculated.</param>
            
            <returns>An new <see cref="T:Accord.IntRange"/> structure containing the intersection
            between this range and the <paramref name="range"/> given as argument.</returns>
            
        </member>
        <member name="M:Accord.DoubleRange.op_Equality(Accord.DoubleRange,Accord.DoubleRange)">
            <summary>
              Determines whether two instances are equal.
            </summary>
            
        </member>
        <member name="M:Accord.DoubleRange.op_Inequality(Accord.DoubleRange,Accord.DoubleRange)">
            <summary>
              Determines whether two instances are not equal.
            </summary>
            
        </member>
        <member name="M:Accord.DoubleRange.Equals(Accord.DoubleRange)">
            <summary>
              Indicates whether the current object is equal to another object of the same type.
            </summary>
            
            <param name="other">An object to compare with this object.</param>
            
            <returns>
              true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
            
        </member>
        <member name="M:Accord.DoubleRange.Equals(System.Object)">
            <summary>
              Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            
        </member>
        <member name="M:Accord.DoubleRange.GetHashCode">
            <summary>
              Returns a hash code for this instance.
            </summary>
            
            <returns>
              A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            
        </member>
        <member name="M:Accord.DoubleRange.ToString">
            <summary>
              Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            
            <returns>
              A <see cref="T:System.String" /> that represents this instance.
            </returns>
            
        </member>
        <member name="M:Accord.DoubleRange.ToString(System.String,System.IFormatProvider)">
            <summary>
              Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            
            <returns>
              A <see cref="T:System.String" /> that represents this instance.
            </returns>
            
        </member>
        <member name="M:Accord.DoubleRange.ToIntRange(System.Boolean)">
             <summary>
               Converts this double-precision range into an <see cref="T:Accord.IntRange"/>.
             </summary>
             
             <param name="provideInnerRange">
               Specifies if inner integer range must be returned or outer range.</param>
             
             <returns>Returns integer version of the range.</returns>
             
             <remarks>
               If <paramref name="provideInnerRange"/> is set to <see langword="true"/>, then the
               returned integer range will always fit inside of the current single precision range.
               If it is set to <see langword="false"/>, then current single precision range will always
               fit into the returned integer range.
             </remarks>
            
        </member>
        <member name="M:Accord.DoubleRange.ToArray">
            <summary>
            Converts this <see cref="T:Accord.DoubleRange"/> to a <see cref="T:System.Double[]"/> of length 2 (using new [] { min, max }).
            </summary>
            
            <returns>The result of the conversion.</returns>
            
        </member>
        <member name="M:Accord.DoubleRange.op_Implicit(Accord.DoubleRange)~System.Double[]">
            <summary>
            Performs an implicit conversion from <see cref="T:Accord.DoubleRange"/> to <see cref="T:System.Double[]"/>.
            </summary>
            
            <param name="range">The range.</param>
            
            <returns>The result of the conversion.</returns>
            
        </member>
        <member name="T:Accord.IntRange">
             <summary>
               Represents an integer range with minimum and maximum values.
             </summary>
             
             <remarks>
               The class represents an integer range with inclusive limits, where
               both minimum and maximum values of the range are included into it.
               Mathematical notation of such range is <b>[min, max]</b>.
             </remarks>
             
             <example>
             <code>
             // create [1, 10] range
             var range1 = new IntRange(1, 10);
             
             // create [5, 15] range
             var range2 = new IntRange(5, 15);
             
             check if values is inside of the first range
             if (range1.IsInside(7))
             {
                 // ...
             }
             
             // check if the second range is inside of the first range
             if (range1.IsInside(range2))
             {
                 // ...
             }
             
             // check if two ranges overlap
             if (range1.IsOverlapping(range2))
             {
                 // ...
             }
             </code>
             </example>
             
             <seealso cref="T:Accord.DoubleRange"/>
             <seealso cref="T:Accord.Range"/>
             <seealso cref="T:Accord.IntRange"/>
            
        </member>
        <member name="P:Accord.IntRange.Min">
            <summary>
              Minimum value of the range.
            </summary>
            
            <remarks>
              Represents minimum value (left side limit) of the range [<b>min</b>, max].
            </remarks>
            
        </member>
        <member name="P:Accord.IntRange.Max">
            <summary>
              Maximum value of the range.
            </summary>
            
            <remarks>
              Represents maximum value (right side limit) of the range [min, <b>max</b>].
            </remarks>
            
        </member>
        <member name="P:Accord.IntRange.Length">
            <summary>
              Gets the length of the range, defined as (max - min).
            </summary>
            
        </member>
        <member name="M:Accord.IntRange.#ctor(System.Int32,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:Accord.IntRange"/> class.
            </summary>
            
            <param name="min">Minimum value of the range.</param>
            <param name="max">Maximum value of the range.</param>
            
        </member>
        <member name="M:Accord.IntRange.IsInside(System.Int32)">
            <summary>
              Check if the specified value is inside of the range.
            </summary>
            
            <param name="x">Value to check.</param>
            
            <returns>
              <b>True</b> if the specified value is inside of the range or <b>false</b> otherwise.
            </returns>
            
        </member>
        <member name="M:Accord.IntRange.Intersection(Accord.IntRange)">
            <summary>
              Computes the intersection between two ranges.
            </summary>
            
            <param name="range">The second range for which the intersection should be calculated.</param>
            
            <returns>An new <see cref="T:Accord.IntRange"/> structure containing the intersection
            between this range and the <paramref name="range"/> given as argument.</returns>
            
        </member>
        <member name="M:Accord.IntRange.IsInside(Accord.IntRange)">
            <summary>
              Check if the specified range is inside of the range.
            </summary>
            
            <param name="range">Range to check.</param>
            
            <returns>
              <b>True</b> if the specified range is inside of the range or <b>false</b> otherwise.
            </returns>
            
        </member>
        <member name="M:Accord.IntRange.IsOverlapping(Accord.IntRange)">
            <summary>
              Check if the specified range overlaps with the range.
            </summary>
            
            <param name="range">Range to check for overlapping.</param>
            
            <returns>
              <b>True</b> if the specified range overlaps with the range or <b>false</b> otherwise.
            </returns>
            
        </member>
        <member name="M:Accord.IntRange.op_Equality(Accord.IntRange,Accord.IntRange)">
            <summary>
              Determines whether two instances are equal.
            </summary>
            
        </member>
        <member name="M:Accord.IntRange.op_Inequality(Accord.IntRange,Accord.IntRange)">
            <summary>
              Determines whether two instances are not equal.
            </summary>
            
        </member>
        <member name="M:Accord.IntRange.Equals(Accord.IntRange)">
            <summary>
              Indicates whether the current object is equal to another object of the same type.
            </summary>
            
            <param name="other">An object to compare with this object.</param>
            
            <returns>
              true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
            
        </member>
        <member name="M:Accord.IntRange.Equals(System.Object)">
            <summary>
              Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            
        </member>
        <member name="M:Accord.IntRange.GetHashCode">
            <summary>
              Returns a hash code for this instance.
            </summary>
            
            <returns>
              A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            
        </member>
        <member name="M:Accord.IntRange.ToString">
            <summary>
              Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            
            <returns>
              A <see cref="T:System.String" /> that represents this instance.
            </returns>
            
        </member>
        <member name="M:Accord.IntRange.ToString(System.String,System.IFormatProvider)">
            <summary>
              Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            
            <returns>
              A <see cref="T:System.String" /> that represents this instance.
            </returns>
            
        </member>
        <member name="M:Accord.IntRange.op_Implicit(Accord.IntRange)~Accord.DoubleRange">
            <summary>
              Performs an implicit conversion from <see cref="T:Accord.IntRange"/> to <see cref="T:Accord.DoubleRange"/>.
            </summary>
            
            <param name="range">The range.</param>
            
            <returns>
              The result of the conversion.
            </returns>
            
        </member>
        <member name="M:Accord.IntRange.op_Implicit(Accord.IntRange)~Accord.Range">
            <summary>
              Performs an implicit conversion from <see cref="T:Accord.IntRange"/> to <see cref="T:Accord.Range"/>.
            </summary>
            
            <param name="range">The range.</param>
            
            <returns>
              The result of the conversion.
            </returns>
            
        </member>
        <member name="M:Accord.IntRange.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            
            <returns>
              An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            
        </member>
        <member name="M:Accord.IntRange.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            
            <returns>
              An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            
        </member>
        <member name="P:Accord.IRange`1.Min">
            <summary>
              Minimum value of the range.
            </summary>
            
            <remarks>
              Represents minimum value (left side limit) of the range [<b>min</b>, max].
            </remarks>
            
        </member>
        <member name="P:Accord.IRange`1.Max">
            <summary>
              Maximum value of the range.
            </summary>
            
            <remarks>
              Represents maximum value (right side limit) of the range [min, <b>max</b>].
            </remarks>
            
        </member>
        <member name="P:Accord.Range.Min">
            <summary>
              Minimum value of the range.
            </summary>
            
            <remarks>
              Represents minimum value (left side limit) of the range [<b>min</b>, max].
            </remarks>
            
        </member>
        <member name="P:Accord.Range.Max">
            <summary>
              Maximum value of the range.
            </summary>
            
            <remarks>
              Represents maximum value (right side limit) of the range [min, <b>max</b>].
            </remarks>
            
        </member>
        <member name="P:Accord.Range.Length">
            <summary>
              Gets the length of the range, defined as (max - min).
            </summary>
            
        </member>
        <member name="M:Accord.Range.#ctor(System.Single,System.Single)">
            <summary>
              Initializes a new instance of the <see cref="T:Accord.Range"/> class.
            </summary>
            
            <param name="min">Minimum value of the range.</param>
            <param name="max">Maximum value of the range.</param>
            
        </member>
        <member name="M:Accord.Range.IsInside(System.Single)">
            <summary>
              Check if the specified value is inside of the range.
            </summary>
            
            <param name="x">Value to check.</param>
            
            <returns>
              <b>True</b> if the specified value is inside of the range or <b>false</b> otherwise.
            </returns>
            
        </member>
        <member name="M:Accord.Range.IsInside(Accord.Range)">
            <summary>
              Check if the specified range is inside of the range.
            </summary>
            
            <param name="range">Range to check.</param>
            
            <returns>
              <b>True</b> if the specified range is inside of the range or <b>false</b> otherwise.
            </returns>
            
        </member>
        <member name="M:Accord.Range.IsOverlapping(Accord.Range)">
            <summary>
              Check if the specified range overlaps with the range.
            </summary>
            
            <param name="range">Range to check for overlapping.</param>
            
            <returns>
              <b>True</b> if the specified range overlaps with the range or <b>false</b> otherwise.
            </returns>
            
        </member>
        <member name="M:Accord.Range.Intersection(Accord.Range)">
            <summary>
              Computes the intersection between two ranges.
            </summary>
            
            <param name="range">The second range for which the intersection should be calculated.</param>
            
            <returns>An new <see cref="T:Accord.Range"/> structure containing the intersection
            between this range and the <paramref name="range"/> given as argument.</returns>
            
        </member>
        <member name="M:Accord.Range.op_Equality(Accord.Range,Accord.Range)">
            <summary>
              Determines whether two instances are equal.
            </summary>
            
        </member>
        <member name="M:Accord.Range.op_Inequality(Accord.Range,Accord.Range)">
            <summary>
              Determines whether two instances are not equal.
            </summary>
            
        </member>
        <member name="M:Accord.Range.Equals(Accord.Range)">
            <summary>
              Indicates whether the current object is equal to another object of the same type.
            </summary>
            
            <param name="other">An object to compare with this object.</param>
            
            <returns>
              true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
            
        </member>
        <member name="M:Accord.Range.Equals(System.Object)">
            <summary>
              Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            
        </member>
        <member name="M:Accord.Range.GetHashCode">
            <summary>
              Returns a hash code for this instance.
            </summary>
            
            <returns>
              A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            
        </member>
        <member name="M:Accord.Range.ToString">
            <summary>
              Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            
            <returns>
              A <see cref="T:System.String" /> that represents this instance.
            </returns>
            
        </member>
        <member name="M:Accord.Range.ToString(System.String,System.IFormatProvider)">
            <summary>
              Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            
            <returns>
              A <see cref="T:System.String" /> that represents this instance.
            </returns>
            
        </member>
        <member name="M:Accord.Range.op_Implicit(Accord.Range)~Accord.DoubleRange">
            <summary>
              Performs an implicit conversion from <see cref="T:Accord.IntRange"/> to <see cref="T:Accord.DoubleRange"/>.
            </summary>
            
            <param name="range">The range.</param>
            
            <returns>
              The result of the conversion.
            </returns>
            
        </member>
        <member name="M:Accord.Range.ToIntRange(System.Boolean)">
             <summary>
               Converts this single-precision range into an <see cref="T:Accord.IntRange"/>.
             </summary>
             
             <param name="provideInnerRange">
               Specifies if inner integer range must be returned or outer range.</param>
             
             <returns>Returns integer version of the range.</returns>
             
             <remarks>
               If <paramref name="provideInnerRange"/> is set to <see langword="true"/>, then the
               returned integer range will always fit inside of the current single precision range.
               If it is set to <see langword="false"/>, then current single precision range will always
               fit into the returned integer range.
             </remarks>
            
        </member>
    </members>
</doc>
